{
  "tags": [
    "java",
    ".net",
    "spring boot",
    "spring mvc",
    "rest api",
    "react js",
    "angular",
    "javascript",
    "es6",
    "jquery",
    "nodejs",
    "python",
    "mongodb",
    "mysql",
    "postgresql",
    "java core",
    ".net core",
    "asp.net mvc",
    "ruby",
    "R",
    "dart",
    "kotlin",
    "android",
    "IOS",
    "react native",
    "flutter",
    "reactive programming",
    "java lambda expression",
    "java project lombok",
    "jsp and servlet",
    "thymeleaf",
    "fremarker",
    "velocity",
    "spring data jpa",
    "hibernate framework",
    "jdbc core and jdbc template"
  ],
  "posts": [
    {
      "title": "Một vài tips trong react native",
      "content": "<p>Điểm ch&iacute;nh của b&agrave;i viết n&agrave;y l&agrave; cung cấp cho bạn những lời khuy&ecirc;n sẽ hỗ trợ bạn v&agrave; nh&oacute;m của bạn trong c&aacute;c dự &aacute;n React Native của bạn. Một số trong những lời khuy&ecirc;n n&agrave;y ho&agrave;n to&agrave;n li&ecirc;n quan đến React Native, trong khi những lời khuy&ecirc;n kh&aacute;c thường thi&ecirc;n về ph&aacute;t triển ứng dụng di động hơn. H&atilde;y c&ugrave;ng bắt đầu!</p>\n\n<h2>1. Xo&aacute; logs trong c&aacute;c bản builds release</h2>\n\n<p>C&oacute; nhiều c&acirc;u lệnh console.log c&oacute; thể l&agrave;m chậm ứng dụng của bạn, đặc biệt nếu bạn đang sử dụng c&aacute;c thư viện ghi nhật k&yacute; như redux-logger. Đảm bảo tắt tất cả nhật k&yacute; (thủ c&ocirc;ng hoặc bằng tập lệnh) khi tạo bản ph&aacute;t h&agrave;nh, điều n&agrave;y cũng sẽ gi&uacute;p phần n&agrave;o ứng dụng của bạn mượt m&agrave; hơn mặc d&ugrave; đ&ocirc;i khi bạn sẽ kh&ocirc;ng thấy sự thay đổi qu&aacute; r&otilde; r&agrave;ng. Nhưng cứ đề ph&ograve;ng cũng chẳng thừa.</p>\n\n<h2>2. Sử dụng Flexbox nhiều hơn</h2>\n\n<p>Thật đ&aacute;ng buồn l&agrave; t&ocirc;i đ&atilde; thấy m&atilde; React Native sử dụng định vị phần tử tuyệt đối (absolute) thay v&igrave; flexbox, ph&aacute; vỡ bố cục v&agrave; kh&ocirc;ng cung cấp khả năng sử dụng lại. Bất kể y&ecirc;u cầu thiết kế của bạn l&agrave; g&igrave;, sử dụng flexbox hầu như lu&ocirc;n l&agrave; c&acirc;u trả lời ch&iacute;nh x&aacute;c. Đối với những người đến từ nền web: Flexbox trong React Native hoạt động gần như ch&iacute;nh x&aacute;c như CSS vậy, sự kh&aacute;c biệt quan trọng l&agrave; flexDirection mặc định th&agrave;nh cột thay v&igrave; h&agrave;ng trong React Native.</p>\n\n<h2>3. Đặt t&ecirc;n c&aacute;c object một c&aacute;ch nhất qu&aacute;n</h2>\n\n<p>Nếu một phần tử của bạn c&oacute; một đối tượng kiểu c&oacute; t&ecirc;n l&agrave; container, th&igrave; h&atilde;y sử dụng t&ecirc;n đ&oacute; cho mọi phần tử c&ugrave;ng cấp độ tr&ecirc;n dự &aacute;n. Nếu n&uacute;t gửi của bạn c&oacute; một đối tượng kiểu c&oacute; t&ecirc;n l&agrave; submitButton, th&igrave; h&atilde;y gắn b&oacute; với n&oacute; v&agrave; kh&ocirc;ng sử dụng saveButton, submitBtn hoặc gửi cho c&aacute;c trường hợp kh&aacute;c.</p>\n\n<h2>4. Sử dụng to&aacute;n tử ba ng&ocirc;i một c&aacute;ch chuẩn x&aacute;c</h2>\n\n<p>Viết như thế n&agrave;y&nbsp;<strong>color = error ? &lsquo;red&rsquo;: &lsquo;gray&rsquo;</strong>&nbsp;xem ra l&agrave; rất ngắn gọn v&agrave; dễ hiểu.</p>\n\n<p>Nhưng khi viết&nbsp;<strong>color = error ? (id === myID) ? &lsquo;red&rsquo; : &lsquo;black&rsquo; : &lsquo;gray&rsquo;</strong>&nbsp;th&igrave; kh&ocirc;ng. To&aacute;n tử ba ng&ocirc;i gi&uacute;p bạn r&uacute;t ngắn số lượng d&ograve;ng code nhưng tốt hơn hết l&agrave; kh&ocirc;ng bao giờ lồng to&aacute;n tử ba ng&ocirc;i v&agrave;o nhau bởi l&agrave;m thế sẽ khiến cho logic trở n&ecirc;n rối rắm v&agrave; kh&oacute; hiểu.</p>\n\n<h2>5.Đừng lạm dụng zIndex</h2>\n\n<p>Chỉ sử dụng zIndex khi bạn phải. V&iacute; dụ: nếu bạn muốn phủ một &lt;Text&gt; tr&ecirc;n &lt;Image&gt;, sử dụng zIndex l&agrave; c&aacute;ch l&agrave;m sai. Bạn n&ecirc;n sử dụng th&agrave;nh phần &lt;ImageBackground&gt; thay thế. Một nguy&ecirc;n tắc nhỏ l&agrave; nếu bạn nghĩ rằng bạn đang l&agrave;m phức tạp m&atilde; của m&igrave;nh với rất nhiều thuộc t&iacute;nh zIndex, th&igrave; c&oacute; lẽ bạn đ&atilde; đ&uacute;ng. Quay trở lại v&agrave; suy nghĩ lại về bố cục của bạn.</p>\n\n<h2>6. setState() l&agrave; kh&ocirc;ng đồng bộ</h2>\n\n<p>Đ&acirc;y phải l&agrave; một trong những lỗi phổ biến nhất cho người mới bắt đầu trong React Native. Mặc d&ugrave; việc thay đổi trạng th&aacute;i của một th&agrave;nh phần g&acirc;y ra việc render lại, nhưng nếu bạn viết một c&aacute;i g&igrave; đ&oacute; như setState({username: &#39;somevalue&#39;}), v&agrave; sau đ&oacute; thử đọc this.state.username trong d&ograve;ng m&atilde; tiếp theo, bạn sẽ kh&ocirc;ng đọc gi&aacute; trị ch&iacute;nh x&aacute;c, v&igrave; setState() l&agrave; một hoạt động kh&ocirc;ng đồng bộ. Sử dụng await setState ({username}) để tr&aacute;nh sự cố n&agrave;y hoặc c&oacute; thể sử dụng callback của setState.</p>\n\n<h2>7. Bạn c&oacute; thể dispatch 1 redux action trong một action kh&aacute;c</h2>\n\n<p>Một h&agrave;nh động kh&ocirc;ng được giới hạn trong một request API hoặc một thao t&aacute;c với dữ liệu. Bất kỳ h&agrave;nh động n&agrave;o cũng c&oacute; thể được gửi từ một h&agrave;nh động kh&aacute;c, từ c&ugrave;ng một tệp hoặc một tệp kh&aacute;c. Nghe c&oacute; vẻ r&otilde; r&agrave;ng nhưng c&oacute; thể bị bỏ qua.</p>\n\n<h2>8. Sử dụng Object destructuring</h2>\n\n<p>Chẳng ai muốn nh&igrave;n thấy c&aacute;i n&agrave;y&nbsp;<strong>this.props.navulation.state.params.username</strong>&nbsp;ở khắp mọi nơi. V&igrave; vậy, sử dụng object destructuring, N&oacute; l&agrave;m cho m&atilde; dễ đọc v&agrave; dễ hiểu hơn. V&agrave; bạn cũng c&oacute; thể (v&agrave; n&ecirc;n) sử dụng n&oacute; trong c&aacute;c tham số h&agrave;m, v&igrave; vậy thay v&igrave;</p>\n\n<pre>\n<code>    const MyComponent = (props) =&gt; {}\n</code></pre>\n\n<p>bạn c&oacute; thể viết</p>\n\n<pre>\n<code>    const MyComponent = ({username, userID}) =&gt; {}\n</code></pre>\n\n<p>Nhưng h&atilde;y cẩn thận một ch&uacute;t, destructuring một object c&oacute; chiều s&acirc;u lớn hơn 2 đ&ocirc;i khi sẽ g&acirc;y crash</p>\n\n<p>V&iacute; dụ</p>\n\n<pre>\n<code>const { data } = this.props\n    \nconst { username, firstName, lastName } = data\n</code></pre>\n\n<p>Tr&ocirc;ng c&oacute; vẻ kh&ocirc;ng c&oacute; g&igrave;, nhưng nếu&nbsp;<em>data</em>&nbsp;ở tr&ecirc;n l&agrave; null th&igrave; việc destructuring object data như ở dưới sẽ g&acirc;y lỗi.</p>\n\n<h2>9. Kh&ocirc;ng d&ugrave;ng TouchableWithoutFeedback nếu bạn kh&ocirc;ng c&oacute; l&yacute; do ch&iacute;nh đ&aacute;ng</h2>\n\n<p>Như t&agrave;i liệu React Native ch&iacute;nh thức n&ecirc;u r&otilde;, tất cả c&aacute;c yếu tố phản hồi n&ecirc;n c&oacute; phản hồi trực quan khi chạm v&agrave;o. H&atilde;y ghi nhớ điều n&agrave;y khi tạo c&aacute;c th&agrave;nh phần UI của bạn v&agrave; sử dụng &lt;TouchableWithoutFeedback&gt; một c&aacute;ch tiết kiệm.</p>\n\n<p>Một điểm đ&aacute;ng ch&uacute; &yacute; nữa l&agrave; TouchableWithoutFeedback chỉ chấp nhận c&oacute; duy nhất 1 phần tử children, h&atilde;y lưu &yacute; bọc c&aacute;c th&agrave;nh phần con của n&oacute; trong 1 wrapper để kh&ocirc;ng gặp lỗi đỏ cả m&agrave;n h&igrave;nh&nbsp;<img alt=\"\uD83D\uDE03\" src=\"https://twemoji.maxcdn.com/2/72x72/1f603.png\" />)</p>\n\n<h2>10. Sửa đổi nội dung của 1 array state sẽ kh&ocirc;ng g&acirc;y ra re-render</h2>\n\n<p>Chắc chắn đ&atilde; c&oacute; l&uacute;c bạn c&oacute; 1 state l&agrave; 1 array, khi bạn thay đổi state n&agrave;y nhưng flatList b&ecirc;n dưới sử dụng state n&agrave;y lại kh&ocirc;ng chịu render lại (v&iacute; dụ bạn xo&aacute; 1 phần tử trong array, nhưng flatList vẫn y như cũ, mặc d&ugrave; về l&yacute; l&agrave; state thay đổi th&igrave; view phải re-render). Sự thật th&igrave; kh&ocirc;ng, chỉnh sửa một phần tử của array state, sẽ kh&ocirc;ng l&agrave;m view re-render.</p>\n\n<p>Để tr&aacute;nh trường hợp n&agrave;y, thay v&igrave; d&ugrave;ng trực tiếp array state đ&oacute; để l&agrave;m data cho flatList h&atilde;y deep copy n&oacute; (c&oacute; thể sử dụng h&agrave;m cloneDeep của Lodash) hoặc đơn giản l&agrave; object assign ([...array]). V&agrave; rồi flatList hay view của bạn sẽ re-render như bạn muốn.</p>\n\n<p>Source:&nbsp;<a href=\"https://medium.com/mop-developers/50-react-native-tips-part-1-2-5cb12803228b\" target=\"_blank\">https://medium.com/mop-developers/50-react-native-tips-part-1-2-5cb12803228b</a></p>\n",
      "category_id": 1,
      "total_views": 100,
      "status": true,
      "image": "post-1.jpg",
      "tags": [
        "react native", "mobile", "react"
      ]
    },
    {
      "title": "So sánh Interface và Abstract trong lập trình hướng đối tượng.",
      "content": "<h1>Tổng quan</h1>\n\n<p><code>Interface</code>&nbsp;v&agrave;&nbsp;<code>Abstract</code>&nbsp;class l&agrave; 2 kh&aacute;i niệm cơ bản trong lập tr&igrave;nh OOP. Nhưng ph&acirc;n lớn mọi người cảm thấy mơ hồ v&agrave; lẫn lộn 2 kh&aacute;i niệm n&agrave;y. Vậy ch&uacute;ng l&agrave; g&igrave;, kh&aacute;c nhau như n&agrave;o? Tại sao d&ugrave;ng c&aacute;i n&agrave;y&nbsp;<code>Interface</code>&nbsp;m&agrave; kh&ocirc;ng phải&nbsp;<code>Abstract</code>&nbsp;v&agrave; ngược lại ???</p>\n\n<h1>Is-a v&agrave; Can-do</h1>\n\n<p>Bỏ qua tất cả những phần về l&yacute; thuyết của việc tạo một&nbsp;<code>abstract class</code>&nbsp;v&agrave;&nbsp;<code>interface</code>. Bạn kh&ocirc;ng cần quan t&acirc;m nhiều đến việc abstract c&oacute; thể khai b&aacute;o những g&igrave;, hay&nbsp;<code>interface</code>&nbsp;c&oacute; được ph&eacute;p định nghĩa nội dung phương thức hay kh&ocirc;ng. Điểm cơ bản khi bạn được hỏi về sự kh&aacute;c biệt giữa ch&uacute;ng l&agrave; g&igrave;? Đ&oacute; ch&iacute;nh l&agrave; mục đ&iacute;ch m&agrave; ch&uacute;ng được sử dụng:</p>\n\n<p>&ndash;&nbsp;<code>Abstract class</code>: l&agrave; một class cha cho tất cả c&aacute;c class c&oacute; c&ugrave;ng bản chất. Bản chất ở đ&acirc;y được hiểu l&agrave; kiểu, loại, nhiệm vụ của class. Hai class c&ugrave;ng hiện thực một interface c&oacute; thể ho&agrave;n to&agrave;n kh&aacute;c nhau về bản chất. Hiểu đơn giản như một thằng con (child class) chỉ c&oacute; thể l&agrave; con của một thằng cha, c&oacute; t&iacute;nh c&aacute;ch giống cha (abstract class) n&oacute;.</p>\n\n<p>&ndash;&nbsp;<code>Interface</code>: l&agrave; một&nbsp;<code>chức năng</code>&nbsp;m&agrave; bạn c&oacute; thể th&ecirc;m v&agrave; bất k&igrave; class n&agrave;o. Từ chức năng ở đ&acirc;y kh&ocirc;ng đồng nghĩa với phương thức (hoặc h&agrave;m). Interface c&oacute; thể bao gồm nhiều h&agrave;m/phương thức v&agrave; tất cả ch&uacute;ng c&ugrave;ng phục vụ cho một&nbsp;<code>chức năng</code>.</p>\n\n<p>Vậy, bạn kh&ocirc;ng n&ecirc;n nhầm lẫn khi n&oacute;i về việc một class được&nbsp;<code>implement</code>&nbsp;hay&nbsp;<code>extend</code>. Nhiều người thường hay đồng nhất l&agrave; kh&ocirc;ng ph&acirc;n biệt hai từ n&agrave;y, nhưng ch&iacute;nh ch&uacute;ng đ&atilde; n&oacute;i l&ecirc;n sự kh&aacute;c biệt giữa interface v&agrave; abstract class. Bạn chỉ c&oacute; thể thừa kế (extend) từ một class v&agrave; chỉ c&oacute; thể hiện thực (implement) c&aacute;c chức năng (interface) cho class của m&igrave;nh. Theo c&aacute;ch ngắn gọn, quan hệ giữa một class khi thừa kế một abstract class được gọi l&agrave;&nbsp;<code>is-a</code>, v&agrave; một class khi hiện thực một interface được gọi l&agrave;&nbsp;<code>can-do</code>&nbsp;(hoặc &ndash;<code>able</code>).</p>\n\n<p>H&atilde;y xem v&iacute; dụ sau, t&ocirc;i c&oacute;:</p>\n\n<ul>\n\t<li>Interface: Barkable, Runable, Flyable, Swimable.</li>\n\t<li>Abstract class Animal v&agrave; c&aacute;c sub class: Bolt, AngryBird v&agrave; Nemo.</li>\n\t<li>Abstract class Machine v&agrave; c&aacute;c sub class: McQueen, Siddeley.&nbsp;<img alt=\"\" src=\"https://viblo.asia/uploads/0b503d7f-4e21-4447-a0a2-9ae31856df3c.png\" /></li>\n</ul>\n\n<p>Như bạn thấy, mặc d&ugrave; cả McQueen v&agrave; Bolt đều được hiện thực interface Runable, nhưng ch&uacute;ng ho&agrave;n to&agrave;n thuộc hai loại kh&aacute;c nhau. V&agrave; tất nhi&ecirc;n một class c&oacute; thể&nbsp;<code>can-do</code>&nbsp;nhiều thứ, v&iacute; dụ như Bolt c&oacute; thể chạy v&agrave; sủa.</p>\n\n<p><img alt=\"\" src=\"https://viblo.asia/uploads/892cc67b-7f60-4228-9f67-849f0c8d0a94.png\" /></p>\n\n<p>D&ugrave;ng Interface như một &ldquo;bản thiết kế&rdquo; của class? Đ&acirc;y l&agrave; một điều thường được d&ugrave;ng để trả lời cho hai c&acirc;u hỏi:</p>\n\n<ul>\n\t<li><code>Interface</code>&nbsp;được d&ugrave;ng để l&agrave;m g&igrave;?</li>\n\t<li>Tại sao kh&ocirc;ng thể định nghĩa phần th&acirc;n cho c&aacute;c phương thức của&nbsp;<code>interface</code>.</li>\n</ul>\n\n<p>X&eacute;t ở một mức độ n&agrave;o đ&oacute; điều n&agrave;y l&agrave; hợp l&yacute;, nhưng như đ&atilde; n&oacute;i ở phần tr&ecirc;n, n&oacute; chỉ được d&ugrave;ng để m&ocirc; tả một&nbsp;<code>bản thiết kế</code>&nbsp;cho một&nbsp;<code>chức năng</code>&nbsp;của class. Nếu muốn tạo một bản thiết kế tổng thể, h&atilde;y sử dụng&nbsp;<code>abstract class</code>. Một bản thiết kế tổng thể tất nhi&ecirc;n sẽ c&oacute; những thứ đ&atilde; được dựng sẵn v&agrave; c&oacute; những thứ l&agrave;&nbsp;<code>abstract</code>.</p>\n\n<p>Một c&acirc;u trả lời c&oacute; thể l&yacute; giải phần n&agrave;o c&acirc;u hỏi thứ hai l&agrave; việc cho ph&eacute;p định nghĩa th&acirc;n phương thức trong c&aacute;c interface c&oacute; thể khiến cho hiệu suất bị giảm s&uacute;t. Nguy&ecirc;n nh&acirc;n l&agrave; việc t&igrave;m kiếm c&aacute;c phương thức sẽ diễn ra l&acirc;u hơn v&igrave; phải duyệt qua c&aacute;c interface, thay v&igrave; chỉ cần phải t&igrave;m trong class cha của n&oacute;.</p>\n\n<p>Về c&ocirc;ng dụng của&nbsp;<code>interface</code>, x&eacute;t ở mức ứng dụng, c&aacute;c interface c&oacute; thể được hiểu như c&aacute;c plugin hoặc thư viện/phần mềm&nbsp;<code>third-party</code>. Việc hiện thực một&nbsp;<code>interface</code>&nbsp;cho class cũng giống như c&agrave;i th&ecirc;m plugin cho một phần mềm vậy.</p>\n\n<h1>Bảng so s&aacute;nh</h1>\n\n<p>Cuối c&ugrave;ng, cũng n&ecirc;n liệt k&ecirc; c&aacute;c điểm kh&aacute;c biệt giữa hai kh&aacute;i niệm n&agrave;y để bạn c&oacute; thể sử dụng được khi cần thiết. C&aacute;c điểm kh&aacute;c biệt n&agrave;y c&oacute; thể kh&aacute;c nhau t&ugrave;y v&agrave;o ng&ocirc;n ngữ m&agrave; bạn sử dụng. V&igrave; vậy bạn chỉ cần nhớ c&aacute;c điểm căn bản sau:</p>\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>&nbsp;</th>\n\t\t\t<th>Interface</th>\n\t\t\t<th>Abstract class</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Multiple inheritance</td>\n\t\t\t<td>Một class c&oacute; thể hiện thực nhiều interface.(tạm coi l&agrave; thừa kế)</td>\n\t\t\t<td>Kh&ocirc;ng hỗ trợ đa thừa kế</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Default implementation</td>\n\t\t\t<td>Kh&ocirc;ng thể định nghĩa code xử l&yacute;, chỉ c&oacute; thể khai b&aacute;o.</td>\n\t\t\t<td>C&oacute; thể định nghĩa th&acirc;n phương thức, property.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Access Modifiers</td>\n\t\t\t<td>Mọi phương thức, property đều mặc định l&agrave; public.</td>\n\t\t\t<td>C&oacute; thể x&aacute;c định modifier.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Adding functionality</td>\n\t\t\t<td>Mọi phương thức, property của interface cần được hiện thực trong class.</td>\n\t\t\t<td>Kh&ocirc;ng cần thiết.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Fields and Constants</td>\n\t\t\t<td>Kh&ocirc;ng</td>\n\t\t\t<td>C&oacute;</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h1>Tham khảo</h1>\n\n<ul>\n\t<li><a href=\"http://php.net/manual/en/language.oop5.abstract.php\" target=\"_blank\">http://php.net/manual/en/language.oop5.abstract.php</a></li>\n\t<li><a href=\"https://yinyangit.wordpress.com/2012/01/15/oop-interface-vs-abstract-class/\" target=\"_blank\">https://yinyangit.wordpress.com/2012/01/15/oop-interface-vs-abstract-class/</a></li>\n</ul>\n",
      "category_id": 1,
      "total_views": 200,
      "status": false,
      "image": "post-2.jpg",
      "tags": [
        "oop", "interface", "design pattern"
      ]
    },
    {
      "title": "Tư duy về cách giải quyết vấn đề cho lập trình viên.",
      "content": "<p>Ch&acirc;n của bạn bắt đầu bị chuột r&uacute;t mười ph&uacute;t trước, nhưng dường như bạn kh&ocirc;ng cảm nhận được điều đ&oacute;.</p>\n\n<p>Cuộc tr&ograve; chuyện từ một chiếc TV ở xa kh&ocirc;ng c&oacute; g&igrave; ngo&agrave;i tiếng ồn, một lời nhắc nhở nhẹ nh&agrave;ng về thế giới b&ecirc;n ngo&agrave;i.</p>\n\n<p>Trọng t&acirc;m duy nhất của bạn l&agrave; &acirc;m thanh từ c&aacute;c n&uacute;t tr&ecirc;n b&agrave;n ph&iacute;m của bạn. Click Click Click...Tạo một đối tượng mới...Phương thức insert...Khoảnh khắc khi bạn kiểm tra c&aacute;c d&ograve;ng code m&agrave; bạn vừa th&ecirc;m v&agrave;o...Th&agrave;nh c&ocirc;ng! Tuyệt vời, v&agrave; b&acirc;y giờ bạn chỉ cần th&ecirc;m một chức năng cuối c&ugrave;ng...console.log...chạy...bị sai! C&aacute;i g&igrave; vậy? D&ograve;ng n&agrave;o g&acirc;y ra lỗi vậy?</p>\n\n<p>Viết code, d&ugrave; bạn c&oacute; bao nhi&ecirc;u kinh nghiệm về n&oacute;, cũng giống như đi tr&ecirc;n d&acirc;y vậy. Bạn đ&atilde; cố gắng c&acirc;n bằng nhất, dựa tr&ecirc;n kiến thức về ng&ocirc;n ngữ v&agrave; mức độ bạn c&oacute; thể x&acirc;y dựng một giải ph&aacute;p cho một vấn đề m&agrave; bạn nghĩ ra. B&ecirc;n tr&aacute;i v&agrave; b&ecirc;n hải của bạn, kh&ocirc;ng c&oacute; g&igrave; cả - chỉ l&agrave; một chương tr&igrave;nh bị sai v&agrave; xuất hiện th&ocirc;ng b&aacute;o lỗi. Khi bạn gặp n&oacute; (v&agrave; n&oacute; xảy ra với tất cả mọi người), một số th&ocirc;ng b&aacute;o lỗi c&oacute; thể gi&uacute;p bạn ph&aacute;t hiện được nơi ph&aacute;t sinh ra lỗi, c&ograve;n 1 số th&igrave; lại th&ocirc;ng b&aacute;o chung chung, rất kh&oacute; để gi&uacute;p bạn t&igrave;m ra điểm g&acirc;y ra bug. Th&ocirc;ng thường, chỉ cần 1 lần viết lại v&agrave; sửa lại chỗ ph&aacute;t sinh ra bug sẽ gi&uacute;p chương tr&igrave;nh hoạt động trở lại.</p>\n\n<p>Nhưng điều g&igrave; xảy ra khi bạn gặp bế tắc khi cố gắng giải quyết vấn đề? Nh&igrave;n v&agrave;o hơn 200 d&ograve;ng tr&ecirc;n m&aacute;y t&iacute;nh dường như rất quen thuộc với bạn chỉ một gi&acirc;y trước, nhưng ngay sau đ&oacute; th&igrave; mọi thứ đều trở n&ecirc;n lạ lẫm. L&agrave;m thế n&agrave;o để bạn l&agrave;m việc theo c&aacute;ch của m&igrave;nh, trong khi vẫn giữ cả những thay đổi v&agrave; những d&ograve;ng mới m&agrave; bạn vừa th&ecirc;m?</p>\n\n<h2>Step 0: Kiểm tra c&uacute; ph&aacute;p/ lỗi ch&iacute;nh tả</h2>\n\n<p>R&otilde; r&agrave;ng? Chắc chắn, nhưng t&ocirc;i nhận thấy rằng 98% sai lầm của t&ocirc;i đến từ một dấu phẩy bị đặt sai hoặc một lỗi sai ch&iacute;nh tả . Code l&agrave; một đoạn m&atilde; kh&ocirc;ng thể th&ecirc;m tuỳ tiện một chữ c&aacute;i hay c&uacute; ph&aacute;p bị thiếu c&oacute; thể ph&aacute; vỡ to&agrave;n bộ c&aacute;c tệp. Tin tốt l&agrave; hầu hết c&aacute;c IDE đều đi k&egrave;m c&aacute;c t&iacute;nh năng gi&uacute;p bạn bắt lỗi nhanh hơn. T&ocirc;i th&iacute;ch những điều sau đ&acirc;y: Tự động ho&agrave;n th&agrave;nh, ph&aacute;t hiện lỗi, m&atilde; ho&aacute; m&agrave;u. Điều cuốic c&ugrave;ng l&agrave;m t&ocirc;i ưa th&iacute;ch bởi v&igrave; điều đ&oacute; c&oacute; nghĩa t&ocirc;i lướt qua một chuỗi c&aacute;c đoạn văn bản m&agrave;u cam v&agrave; nhận thấy c&oacute; một stinker nhỏ m&agrave;u đỏ với dấu ngoặc k&eacute;p bị thiếu v&agrave; ngay lập tức t&ocirc;i c&oacute; thể sửa n&oacute; lu&ocirc;n. Nhưng nếu đ&atilde; sửa hết những lỗi n&agrave;y m&agrave; kh&ocirc;ng thấy th&agrave;nh c&ocirc;ng th&igrave; h&atilde;y tự hỏi bản th&acirc;n...</p>\n\n<h2>Step 1: Bạn biết g&igrave; về n&oacute;?</h2>\n\n<p>C&oacute; thể bạn cảm thấy bực bội khi sự tự tin của bạn bị ph&aacute; vỡ bởi những &quot;ERROR&quot; m&agrave;u đỏ tr&ecirc;n m&agrave;n h&igrave;nh. Nhưng bạn đ&atilde; tự b&igrave;nh tĩnh lại được, điều nay c&oacute; nghĩa l&agrave; bạn đủ biết để tự t&igrave;m ra c&aacute;ch sửa lỗi. V&igrave; vậy trước ti&ecirc;n bạn n&ecirc;n chọn ra th&ocirc;ng b&aacute;o lỗi v&agrave; ghi ch&uacute; lại.</p>\n\n<p>&ldquo;Syntax error&hellip;T&ocirc;i đ&atilde; nh&igrave;n thấy điều n&agrave;y trước đ&acirc;y v&agrave; lần cuối c&ugrave;ng n&oacute; chỉ l&agrave; một lỗi đ&aacute;nh m&aacute;y.&rdquo;</p>\n\n<p>&ldquo;Null value&hellip;.T&ocirc;i biết điều đ&oacute; c&oacute; nghĩa l&agrave; một số gi&aacute; trị kh&ocirc;ng được x&aacute;c định hoặc n&oacute; kh&ocirc;ng tồn tại. V&agrave; t&ocirc;i cũng biết rằng n&oacute; c&oacute; lẽ được coi l&agrave; &lsquo;false.&rdquo;</p>\n\n<p>Một điều kh&aacute;c m&agrave; bạn c&oacute; thể thử đ&oacute; l&agrave;, nếu bạn th&ecirc;m nhiều d&ograve;ng m&atilde; th&igrave; h&atilde;y thử t&aacute;ch ch&uacute;ng ra ri&ecirc;ng biệt rồi đọc ch&uacute;ng một c&aacute;ch lần lượt, tự hỏi bản th&acirc;n chức năng của từng d&ograve;ng v&agrave; nhắc nhở bản th&acirc;n về định nghĩa. C&oacute; thể bạn đ&atilde; qu&ecirc;n to&aacute;n tử &quot;OR&quot;, hay đ&atilde; qu&ecirc;n c&aacute;ch tạo h&agrave;m của một đối tượng. Điều n&agrave;y dẫn t&ocirc;i đến bước tiếp theo.</p>\n\n<h2>Step 2: Bạn c&oacute; bỏ lỡ điều g&igrave; kh&ocirc;ng?</h2>\n\n<p>Ở đ&acirc;y, c&oacute; thể thực sự hữu &iacute;ch để tạo một danh s&aacute;ch những g&igrave; bạn kh&ocirc;ng quen thuộc. Bạn c&oacute; biết d&ograve;ng m&atilde; n&agrave;o l&agrave; vấn đề kh&ocirc;ng? Nếu kh&ocirc;ng, kiểm tra lại th&ocirc;ng b&aacute;o lỗi để c&ocirc; lập vấn đề. C&oacute; từ mới n&agrave;o trong th&ocirc;ng b&aacute;o lỗi m&agrave; bạn đ&atilde; thấy trước đ&oacute; kh&ocirc;ng? Bạn c&oacute; đang thực h&agrave;nh một kh&aacute;i niệm mới, một kh&aacute;i niệm phức tạp v&agrave; c&oacute; thể tương t&aacute;c với đoạn m&atilde; của bạn theo c&aacute;ch m&agrave; bạn mong đợi kh&ocirc;ng? Nếu đ&oacute; l&agrave; trường hợp kh&aacute;c th&igrave; bạn c&oacute; thể cần bước tiếp theo...</p>\n\n<h2>Step 3: Nghi&ecirc;n cứu từ những nguồn mới</h2>\n\n<p>Đ&acirc;y l&agrave; phần thực h&agrave;nh y&ecirc;u th&iacute;ch của t&ocirc;i về tiền m&atilde; h&oacute;a. Mỗi ng&agrave;y bạn c&oacute; thể phải đối mặt với một thử th&aacute;ch mới v&agrave; mỗi ng&agrave;y thử th&aacute;ch đ&oacute; c&oacute; thể l&agrave; cơ hội để ph&aacute;t triển. Lượng t&agrave;i nguy&ecirc;n c&oacute; sẵn trực tuyến cho lập tr&igrave;nh m&aacute;y t&iacute;nh l&agrave; đ&aacute;ng kinh ngạc. Từ c&aacute;c b&agrave;i viết ph&aacute; vỡ c&aacute;c trường hợp rất cụ thể, tất cả c&aacute;c c&aacute;ch để ho&agrave;n th&agrave;nh c&aacute;c kh&oacute;a học Ivy League. Cố gắng đừng cảm thấy nản l&ograve;ng khi bạn gặp phải một ng&ocirc;n ngữ lập tr&igrave;nh / kh&aacute;i niệm mới rất lớn v&agrave; điều n&agrave;y c&oacute; thể xảy ra mỗi ng&agrave;y! Thay v&agrave;o đ&oacute;, h&atilde;y thử xem n&oacute; như một lời mời để nghi&ecirc;n cứu những thứ mới mẻ. Biết đ&acirc;u điều đọc thực sự khiến bạn cảm thấy hứng th&uacute;.</p>\n\n<h2>Step 4: T&igrave;m ai đ&oacute; chia sẻ về vấn của bạn.</h2>\n\n<p>Điều đầu ti&ecirc;n bạn n&ecirc;n lạc quan rằng, chắc chắn kh&ocirc;ng phải một m&igrave;nh bạn phải đối diện với n&oacute; đ&acirc;u. B&ecirc;n cạnh bạn, tại bất kỳ nơi bạn l&agrave;m việc n&agrave;o, cũng cũng những người đi trước, hoặc c&oacute; những &quot;si&ecirc;u nh&acirc;n&quot; để bạn c&oacute; thể mở lời để nhận được sự gi&uacute;p đỡ từ họ. B&ecirc;n cạnh đ&oacute;, bạn c&ograve;n c&oacute; cả một cộng đồng lập tr&igrave;nh vi&ecirc;n tr&ecirc;n to&agrave;n thế giới cũng với những diễn đ&agrave;n c&ocirc;ng nghệ giải đ&aacute;p mọi thắc mắc m&agrave; bạn găp phải. Chắc hẳn mọi lập tr&igrave;nh vi&ecirc;n đều biết đến StackOverFlow. Dường như mọi vấn đề bạn c&oacute; thể t&igrave;m ở đ&oacute;. Bạn cũng c&oacute; thể t&igrave;m những sự gi&uacute;p đỡ từ ch&iacute;nh những người đ&ograve;ng nghiệp của bạn. Bất kể bạn ở đ&acirc;u với sự ph&aacute;t triển chuy&ecirc;n nghiệp của m&igrave;nh, v&agrave; cho d&ugrave; bạn đang l&agrave;m g&igrave;, th&igrave; điều tốt nhất v&agrave; quan trọng nhất bạn c&oacute; thể l&agrave;m l&agrave; tiếp tục, v&agrave; kh&ocirc;ng bỏ cuộc. Mọi vấn đề đều c&oacute; c&aacute;ch giải quyết của n&oacute; hết.</p>\n\n<p>Nguồn t&agrave;i liệu:&nbsp;<a href=\"https://medium.com/@michaelchrupcala/dev-mindset-how-to-fix-a-new-problem-264e3125e7a3\" target=\"_blank\">https://medium.com/@michaelchrupcala/dev-mindset-how-to-fix-a-new-problem-264e3125e7a3</a></p>\n",
      "category_id": 1,
      "total_views": 456,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "Mindset", "thinking"
      ]
    },
    {
      "title": "Giới thiệu UUID trong Java",
      "content": "<h2>1. Đ&ocirc;i n&eacute;t</h2>\n\n<p>UUID (Viết tắt của Universally Unique Identifier), c&ograve;n được gọi l&agrave; GUID (Globally Unique Identifier) l&agrave; một gi&aacute; trị duy nhất d&agrave;i 128 bit. Một chuỗi UUID chuẩn sử dụng chữ số hex (octet):</p>\n\n<blockquote>\n<p>0710a5ca-f57e-11e9-802a-5aa538984bd8</p>\n</blockquote>\n\n<p><img alt=\"\" src=\"https://images.viblo.asia/74fbd277-6c7e-4d1f-9687-a52d21497c94.png\" />Mục đ&iacute;ch của UUID sinh ra l&agrave; bởi v&igrave;:</p>\n\n<ul>\n\t<li>Dữ liệu lớn, kiểu kh&oacute;a ch&iacute;nh auto imcrement cần nhiều byte để lưu hơn. V&agrave; kh&oacute;a ch&iacute;nh kiểu n&agrave;y kh&ocirc;ng ph&ugrave; hợp khi m&agrave; hệ thống c&oacute; nhiều server, nhiều client c&ugrave;ng l&uacute;c truy cập tr&ecirc;n to&agrave;n thế giới.</li>\n\t<li>Nếu d&ugrave;ng kh&oacute;a ch&iacute;nh kiểu auto imcrement, c&oacute; thể dễ d&agrave;ng truy ra được trong database c&oacute; bao nhi&ecirc;u record. Thường thấy ở đường dẫn kiểu &quot;<a href=\"http://domain.com/user/12345\" target=\"_blank\">domain.com/user/12345</a>&quot;.</li>\n</ul>\n\n<p>Bởi vậy UUID ra đời nhằm khắc phục những yếu điểm tr&ecirc;n. Vậy nếu bạn đủ sức x&acirc;y dựng một hệ thống với nhiều server, phục vụ h&agrave;ng tỉ tỉ user hoặc chỉ đơn giản l&agrave; kh&ocirc;ng muốn để lộ id ra ngo&agrave;i, h&atilde;y nghĩ tới UUID.</p>\n\n<p>Trong b&agrave;i n&agrave;y, ch&uacute;ng ta sẽ c&ugrave;ng t&igrave;m hiểu về UUID trong Java, th&ocirc;ng qua class UUID.</p>\n\n<h2>2. Cấu tr&uacute;c chuỗi UUID</h2>\n\n<p>Ch&uacute;ng ta c&ugrave;ng xem v&iacute; dụ về chuỗi UUID:</p>\n\n<pre>\n<code>123e4567-e89b-42d3-a456-556642440000\nxxxxxxxx-xxxx-Bxxx-Axxx-xxxxxxxxxxxx\n</code></pre>\n\n<p>A đại diện cho biến thể (variant) x&aacute;c định bố cục (layout) của UUID. Tất cả c&aacute;c bit kh&aacute;c trong UUID phụ thuộc v&agrave;o setting của c&aacute;c bit trong trường biến thể (variant field). Biến thể được x&aacute;c định bởi 3 bit quan trọng nhất của A:</p>\n\n<pre>\n<code>MSB1    MSB2    MSB3\n 0       X       X     reserved (0)\n 1       0       X     current variant (2)\n 1       1       0     reserved for Microsoft (6)\n 1       1       1     reserved for future (7)\n</code></pre>\n\n<p>Gi&aacute; trị của A trong UUID l&agrave; &#39;a &#39;. Tương đương nhị ph&acirc;n của &#39;a&#39; (=10xx) hiển thị biến thể l&agrave; 2. B đại diện cho phi&ecirc;n bản (version). Phi&ecirc;n bản trong UUID (gi&aacute; trị của B) l&agrave; 4.</p>\n\n<p>Java cung cấp c&aacute;c phương thức để lấy ra variant (biến thể) v&agrave; version (phi&ecirc;n bản) của UUID như sau:</p>\n\n<pre>\n<code>UUID uuid = UUID.randomUUID();\nint variant = uuid.variant();\nint version = uuid.version();\n</code></pre>\n\n<p>Đ&acirc;y l&agrave; 5 phi&ecirc;n bản kh&aacute;c nhau cho UUID biến thể 2: Time Based (UUIDv1), DCE Security (UUIDv2), Name Based (UUIDv3 v&agrave; UUIDv5), Random (UUIDv4).</p>\n\n<p>Java c&oacute; cung cấp một implementation cho v3 v&agrave; v4, nhưng cũng cung cấp một constructor để gi&uacute;p người d&ugrave;ng tạo bất kỳ loại UUID n&agrave;o:</p>\n\n<pre>\n<code>UUID uuid = new UUID(long mostSigBits, long leastSigBits);\n</code></pre>\n\n<h3>Version 3 &amp; 5</h3>\n\n<p>C&aacute;c UUID được tạo bằng c&aacute;ch sử dụng h&agrave;m băm của namespace v&agrave; name. C&aacute;c định danh namespace l&agrave; c&aacute;c UUID giống như Domain Name System (DNS), Object Identifiers (OIDs), URLs,...</p>\n\n<pre>\n<code>UUID = hash(NAMESPACE_IDENTIFIER + NAME)\n</code></pre>\n\n<p>Sự kh&aacute;c biệt duy nhất giữa UUIDv3 v&agrave; UUIDv5 l&agrave; Thuật to&aacute;n băm (Hashing Algorithm) - v3 sử dụng MD5 (128 bit) trong khi v5 sử dụng SHA-1 (160 bit). N&oacute;i một c&aacute;ch đơn giản, ch&uacute;ng ta cắt bớt kết quả băm th&agrave;nh 128 bit v&agrave; sau đ&oacute; thay thế 4 bit cho version (phi&ecirc;n bản) v&agrave; 2 bit cho variant (biến thể).</p>\n\n<p>V&agrave; đ&acirc;y l&agrave; c&aacute;ch tạo UUID loại 3 trong java:</p>\n\n<pre>\n<code>String source = namespace + name;\nbyte[] bytes = source.getBytes(&quot;UTF-8&quot;);\nUUID uuid = UUID.nameUUIDFromBytes(bytes);\n</code></pre>\n\n<p>Java kh&ocirc;ng cung cấp implementation cho UUID loại 5.</p>\n\n<h3>Version 4</h3>\n\n<p>Implementation của UUID v4 trong Java sử dụng c&aacute;c số ngẫu nhi&ecirc;n. Class được java implement l&agrave; SecureRandom. N&oacute; sử dụng một gi&aacute; trị kh&ocirc;ng thể đo&aacute;n trước để tạo ra c&aacute;c số ngẫu nhi&ecirc;n nhằm giảm tỷ lệ tr&ugrave;ng. Để sinh chuỗi UUID v4, bạn sử dụng:</p>\n\n<pre>\n<code>UUID uuid = UUID.randomUUID();\n</code></pre>\n\n<p>Bạn c&oacute; thể sinh unique key sử dụng &lsquo;SHA-256&#39; v&agrave; UUID như sau:</p>\n\n<pre>\n<code>MessageDigest salt = MessageDigest.getInstance(&quot;SHA-256&quot;);\nsalt.update(UUID.randomUUID().toString().getBytes(&quot;UTF-8&quot;));\nString digest = bytesToHex(salt.digest());\n</code></pre>\n\n<h2>3. Kết luận</h2>\n\n<p>Cả UUIDv3 v&agrave; UUIDv5 đều c&oacute; những điểm tốt m&agrave; c&aacute;c hệ thống kh&aacute;c nhau c&oacute; thể tạo ra c&ugrave;ng một UUID bằng c&aacute;ch sử dụng c&ugrave;ng một namespace v&agrave; name. Ch&uacute;ng cơ bản được sử dụng để tạo UUID ph&acirc;n cấp.</p>\n\n<p>V&igrave; cả hai h&agrave;m băm MD5 v&agrave; SHA1 đều bị hỏng, n&ecirc;n tốt nhất khuyện bạn sử dụng v5. Nếu bạn chỉ cần tạo UUID đơn giản, loại 4 c&oacute; thể đ&aacute;p ứng tốt cho ứng dụng của bạn.</p>\n",
      "category_id": 1,
      "total_views": 456,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "UUID", "Java", "hash"
      ]
    },
    {
      "title": "Deploy nodejs application on heroku",
      "content": "<h3>1. Mở đầu:</h3>\n\n<p>B&agrave;i viết n&agrave;y với mục đ&iacute;ch gi&uacute;p c&aacute;c bạn mới bắt đầu muốn deploy 1 ứng dụng Nodejs l&ecirc;n Heroku. Heroku l&agrave; một cloud platform như một dịch vụ hỗ trợ một số ng&ocirc;n ngữ lập tr&igrave;nh được sử dụng l&agrave;m m&ocirc; h&igrave;nh triển khai ứng dụng web. Heroku l&agrave; một nền tảng dưới dạng dịch vụ (PaaS) cho ph&eacute;p c&aacute;c nh&agrave; ph&aacute;t triển x&acirc;y dựng, chạy v&agrave; vận h&agrave;nh c&aacute;c ứng dụng ho&agrave;n to&agrave;n trong đ&aacute;m m&acirc;y. Heroku l&agrave; một nền tảng ứng dụng đ&aacute;m m&acirc;y đa ng&ocirc;n ngữ cho ph&eacute;p c&aacute;c nh&agrave; ph&aacute;t triển triển khai, mở rộng v&agrave; quản l&yacute; c&aacute;c ứng dụng của họ.</p>\n\n<h3>2. Register on the Heroku platform:</h3>\n\n<p>Đầu ti&ecirc;n ch&uacute;ng ta cần phải tạo 1 account tr&ecirc;n Heroku (tất nhi&ecirc;n l&agrave; loại free rồi&nbsp;<img alt=\"\uD83D\uDE04\" src=\"https://twemoji.maxcdn.com/2/72x72/1f604.png\" />). Ch&uacute;ng ta truy cập v&agrave;o đường link sau để đăng k&iacute; :&nbsp;<a href=\"https://signup.heroku.com/\" target=\"_blank\">https://signup.heroku.com/</a></p>\n\n<h3>3. Download and install CLI Heroku:</h3>\n\n<p>Ch&uacute;ng ta truy cập v&agrave;o link :&nbsp;<a href=\"https://devcenter.heroku.com/articles/heroku-cli\" target=\"_blank\">https://devcenter.heroku.com/articles/heroku-cli</a>&nbsp;để download phi&ecirc;n bản d&ugrave;ng cho hệ điều h&agrave;nh của m&igrave;nh.&nbsp;<img alt=\"\" src=\"https://images.viblo.asia/7d484417-55bb-4667-8be5-ace4c748bf8d.png\" /></p>\n\n<h3>4.Deploying Your Node App:</h3>\n\n<p>Về phần source code NodeJs t&ocirc;i kh&ocirc;ng nhắc tới trong phần n&agrave;y. N&ecirc;n c&aacute;c bạn c&oacute; thể tự chuẩn bị trước nh&eacute;&nbsp;<img alt=\"\uD83D\uDE04\" src=\"https://twemoji.maxcdn.com/2/72x72/1f604.png\" />.</p>\n\n<p>Đầu ti&ecirc;n ch&uacute;ng ta login account đ&atilde; đăng k&iacute; ở bước 1 v&agrave;o :&nbsp;<a href=\"https://id.heroku.com/login\" target=\"_blank\">https://id.heroku.com/login</a></p>\n\n<p>Sau đ&oacute; ch&uacute;ng ta tạo 1 new app tr&ecirc;n Heroku:</p>\n\n<p><img alt=\"\" src=\"https://images.viblo.asia/333fd5cf-6783-42b5-a2e8-52e686710534.png\" /></p>\n\n<p><img alt=\"\" src=\"https://images.viblo.asia/39d75cde-6ad1-4bab-88c7-33095ab487b3.png\" /></p>\n\n<p>Tiếp theo ch&uacute;ng ta sẽ d&ugrave;ng Terminal để deploy source v&agrave;o new app ch&uacute;ng ta vừa mới tạo tr&ecirc;n Heroku</p>\n\n<p>Đầu ti&ecirc;n login v&agrave;o heroku bằng Terminal&nbsp;<code>heroku login</code>&nbsp;Sau đ&oacute; tạo a new Git repository</p>\n\n<pre>\n<code>git init\nheroku git:remote -a viablo-demo\n</code></pre>\n\n<p>Giờ ch&uacute;ng ta deploy application của m&igrave;nh</p>\n\n<pre>\n<code>git add .\ngit commit -am &quot;the first deploy on heroku&quot;\ngit push heroku master\n</code></pre>\n\n<p>V&agrave; kết quả của ch&uacute;ng ta bằng c&aacute;ch truy cập v&agrave;o trang :&nbsp;<a href=\"https://viablo-demo.herokuapp.com/\" target=\"_blank\">https://viablo-demo.herokuapp.com</a>.</p>\n\n<p><img alt=\"\" src=\"https://images.viblo.asia/5121c6ce-7a72-4b20-b90d-10333d52e637.png\" /></p>\n\n<h3>5. Lời kết:</h3>\n\n<p>Hy vọng với b&agrave;i viết nhỏ n&agrave;y sẽ gi&uacute;p cho những người mới c&oacute; thể deploy được application đầu ti&ecirc;n của m&igrave;nh tr&ecirc;n Heroku.Ch&uacute;ng c&aacute;c bạn th&agrave;nh c&ocirc;ng</p>\n",
      "category_id": 1,
      "total_views": 456,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "nodejs", "heroku", "server", "deploy"
      ]
    },
    {
      "title": "Đôi điều về \"nghề nghiệp\" trong ngành Công nghệ Thông tin",
      "content": "<p>Ng&agrave;nh CNTT (IT- Informatic Technology) trong khoảng chục năm trở lại đ&acirc;y lu&ocirc;n l&agrave; một trong những ng&agrave;nh &quot;hot&quot; nhất trong thị trường lao động Việt Nam v&agrave; thế giới. Trong bối cảnh cuộc c&aacute;ch mạng c&ocirc;ng nghiệp lần thứ 4 đang bắt đầu b&ugrave;ng nổ, ng&agrave;nh IT c&agrave;ng trở n&ecirc;n n&oacute;ng hơn bao giờ hết.</p>\n\n<p>B&agrave;i viết nhằm chia sẻ một số nhận định c&aacute; nh&acirc;n về nghề nghiệp trong CNTT, cũng như dự đo&aacute;n xu hướng c&aacute;c ng&agrave;nh nghề trong tương lai kh&ocirc;ng xa v&agrave; c&aacute;c kỹ năng, kiến thức cần thiết cho một vị tr&iacute; tốt trong một số ng&agrave;nh &quot;hot&quot;. Nội dung b&agrave;i viết chủ yếu chia sẻ nhận định chủ quan, trải nghiệm c&aacute; nh&acirc;n của m&igrave;nh sau hơn mười năm l&agrave;m trong ng&agrave;nh c&ocirc;ng nghệ th&ocirc;ng tin. Trong qu&aacute; tr&igrave;nh l&agrave;m việc, m&igrave;nh đ&atilde; tham gia v&agrave; l&agrave;m đối t&aacute;c của kh&aacute; nhiều c&ocirc;ng ty lớn nhỏ trong v&agrave; ngo&agrave;i nước, chứng kiến nhiều sự thay đổi trong c&ocirc;ng nghệ, thị trường nh&acirc;n sự, việc l&agrave;m, cũng như c&aacute;ch thức tổ chức, vận h&agrave;nh, văn ho&aacute; doanh nghiệp của nhiều c&ocirc;ng ty, tổ chức trong ng&agrave;nh.</p>\n\n<p>Điều đầu ti&ecirc;n cần nhấn mạnh l&agrave; CNTT l&agrave; một ng&agrave;nh rất rộng, c&ocirc;ng việc rất đa dạng v&agrave; ph&ugrave; hợp với nhiều đối tượng kh&aacute;c nhau. C&oacute; những việc lặp lại, ổn định, c&oacute; thể học rất nhanh v&agrave; kh&ocirc;ng cần đ&agrave;o tạo b&agrave;i bản (c&agrave;i đặt m&aacute;y m&oacute;c, sửa chữa m&aacute;y t&iacute;nh cơ bản, lắp đặt ph&ograve;ng m&aacute;y, mạng, tư vấn sản phẩm, hỗ trợ kỹ thuật sản phẩm, hotline chăm s&oacute;c kh&aacute;ch h&agrave;ng...), v&agrave; c&oacute; những c&ocirc;ng việc cần đ&agrave;o tạo b&agrave;i bản v&agrave;/hoặc d&agrave;i hạn hơn, v&agrave; y&ecirc;u cầu nhiều chất x&aacute;m hơn nhiều hơn như lập tr&igrave;nh vi&ecirc;n, kiến tr&uacute;c sư hệ thống, chuy&ecirc;n vi&ecirc;n ph&acirc;n t&iacute;ch nghiệp vụ, kiểm thử vi&ecirc;n, quản trị mạng, ph&acirc;n t&iacute;ch, xử l&yacute; dữ liệu... B&agrave;i viết n&agrave;y tập trung n&oacute;i về nh&oacute;m ng&agrave;nh thứ hai.</p>\n\n<h2>Th&aacute;ch thức trong ng&agrave;nh CNTT</h2>\n\n<p>L&agrave; ng&agrave;nh &ldquo;hot&rdquo; trong thị trường lao động, ng&agrave;nh CNTT thu h&uacute;t số lượng lớn c&aacute;c sinh vi&ecirc;n tham gia học, nhiều trường đại học vốn kh&ocirc;ng li&ecirc;n quan đến IT cũng đ&atilde; mở ra c&aacute;c khoa mới, li&ecirc;n quan đến IT trong lĩnh vực chuy&ecirc;n ng&agrave;ng ch&iacute;nh của trường, hoặc thậm ch&iacute; cả c&aacute;c khoa chuy&ecirc;n biệt về CNTT vốn chưa bao giờ l&agrave; thế mạnh của trường như mạng m&aacute;y t&iacute;nh hay c&ocirc;ng nghệ phần mềm... Điều n&agrave;y c&oacute; thể l&agrave; đ&uacute;ng, để đ&aacute;p ứng nhu cầu thị trường v&agrave; đảm bảo duy tr&igrave; số lượng / thu h&uacute;t sinh vi&ecirc;n. Tuy nhi&ecirc;n, cũng phải n&oacute;i l&agrave; chất lượng đầu ra sinh vi&ecirc;n CNTT trong nước nh&igrave;n chung đang ở mức độ dưới trung b&igrave;nh, phần đ&ocirc;ng l&agrave; chưa đ&aacute;p ứng được nhu cầu c&ocirc;ng c&ocirc;ng việc. Sinh vi&ecirc;n ra trường rất đ&ocirc;ng, kh&ocirc;ng t&igrave;m được việc l&agrave;m hoặc l&agrave;m tr&aacute;i ng&agrave;nh rất nhiều, nhưng c&aacute;c c&ocirc;ng ty CNTT đều lu&ocirc;n thiếu nh&acirc;n sự. C&aacute; nh&acirc;n m&igrave;nh đ&atilde; từng phỏng vấn đầu v&agrave;o kh&ocirc;ng dưới 200 bạn sinh vi&ecirc;n ra trường v&agrave; những người đ&atilde; đi l&agrave;m (sau khi đ&atilde; lọc kỹ hồ sơ), th&igrave; tỷ lệ tr&uacute;ng tuyển l&agrave; tương đối thấp. V&agrave; trong số tr&uacute;ng tuyển th&igrave; phần đ&ocirc;ng vẫn l&agrave; từ c&aacute;c trường B&aacute;ch Khoa, C&ocirc;ng Nghệ, Bưu Ch&iacute;nh Viễn Th&ocirc;ng, FPT v&agrave; c&aacute;c trường nước ngo&agrave;i. Rất nhiều bạn trong số đ&oacute; đ&atilde; c&oacute; th&agrave;nh t&iacute;ch học tập c&aacute;c cấp rất tốt, học chuy&ecirc;n ban từ phổ th&ocirc;ng, hay l&agrave; top ở c&aacute;c trường phổ th&ocirc;ng, đại học, rất nhiều bạn đạt giải cao trong c&aacute;c kỳ thi học sinh, sinh vi&ecirc;n giỏi v&agrave; nghi&ecirc;n cứu khoa học c&aacute;c cấp.</p>\n\n<p>C&oacute; thể thấy ng&agrave;nh CNTT l&agrave; ng&agrave;nh c&oacute; y&ecirc;u cầu kh&aacute; cao về cả th&aacute;i độ, kiến thức, kỹ năng. Điều n&agrave;y bởi nhiều l&yacute; do:</p>\n\n<p>Bản th&acirc;n ng&agrave;nh CNTT l&agrave; mới (so với rất nhiều ng&agrave;nh kh&aacute;c), lại rất rộng, y&ecirc;u cầu nhiều kiến thức nền tảng nhưng lại được trang bị kh&aacute; muộn trong c&aacute;c trường phổ th&ocirc;ng.</p>\n\n<p>C&ocirc;ng nghệ ph&aacute;t triển ch&oacute;ng mặt, thay đổi li&ecirc;n tục, khiến người l&agrave;m CNTT nếu kh&ocirc;ng li&ecirc;n tục nghi&ecirc;n cứu, học hỏi, th&iacute;ch ứng thay đổi th&igrave; sẽ sớm bị đ&agrave;o thải nhanh ch&oacute;ng.</p>\n\n<p>Mức độ cạnh tranh cao v&agrave; kh&ocirc;ng ph&acirc;n biệt tuổi t&aacute;c. Do sự thay đổi h&agrave;ng ng&agrave;y của c&ocirc;ng nghệ, yếu tố kinh nghiệm trong CNTT thường mờ nhạt hơn rất nhiều so với c&aacute;c ng&agrave;nh kh&aacute;c. Một sinh vi&ecirc;n giỏi mới ra trường l&agrave;m 1&ndash;2 năm với c&ocirc;ng nghệ hiện đại c&oacute; thể dễ d&agrave;ng vượt qua cả về năng suất lẫn chất lượng c&ocirc;ng việc so với một người với h&agrave;ng chục năm kinh nghiệm nếu kh&ocirc;ng chịu cập nhật c&ocirc;ng nghệ thường xuy&ecirc;n. Phải n&oacute;i th&ecirc;m, việc &ldquo;cập nhật c&ocirc;ng nghệ&rdquo; ở đ&acirc;y l&agrave; để l&agrave;m việc, tức l&agrave; học nghề để &aacute;p dụng v&agrave;o c&ocirc;ng việc, chứ kh&ocirc;ng phải đơn thuần l&agrave; cập nhật tin tức về c&ocirc;ng nghệ qua b&aacute;o ch&iacute;, truyền h&igrave;nh một c&aacute;ch giải tr&iacute;.</p>\n\n<h2>Nghề n&agrave;o ph&ugrave; hợp?</h2>\n\n<p>Do t&iacute;nh cạnh tranh cao v&agrave; kh&ocirc;ng ph&acirc;n biệt tuổi t&aacute;c như đề cập ph&iacute;a tr&ecirc;n, ở Việt Nam, m&igrave;nh thường thấy hầu hết mọi người l&agrave;m &quot;kỹ thuật&quot; trong ng&agrave;ng CNTT th&ocirc;ng thường chỉ l&agrave;m khoảng chục năm hoặc &iacute;t hơn, sau đ&oacute; chuyển hướng qua &quot;quản l&yacute;&quot; hay &quot;kinh doanh&quot;, một l&agrave; v&igrave; kh&ocirc;ng theo kịp thế hệ trẻ đi sau, cảm thấy mệt mỏi, hao m&ograve;n, hai l&agrave; nếu kh&ocirc;ng &quot;thăng chức&quot; sẽ bị coi l&agrave; k&eacute;m cỏi v&igrave; m&atilde;i chỉ l&agrave;m kỹ thuật. Nhưng theo m&igrave;nh, d&ugrave; l&agrave;m kỹ thuật, quản l&yacute;, kinh doanh... đều l&agrave; c&aacute;c &quot;nghề&quot; kh&aacute;c nhau, y&ecirc;u cầu c&aacute;c kỹ năng kh&aacute;c nhau v&agrave; ph&ugrave; hợp với từng c&aacute; nh&acirc;n kh&aacute;c nhau. Tiếp x&uacute;c với c&aacute;c c&ocirc;ng ty nước ngo&agrave;i sẽ thấy điều n&agrave;y rất r&otilde;, l&agrave;m lập tr&igrave;nh vi&ecirc;n, hay l&agrave;m quản l&yacute; dự &aacute;n đều l&agrave; c&aacute;c nghề, v&agrave; người ta sẽ l&agrave;m m&atilde;i nghề đ&oacute; nếu thấy c&ograve;n ph&ugrave; hợp với bản th&acirc;n, cả về sở th&iacute;ch, năng lực lẫn thu nhập. L&agrave;m quản l&yacute; kh&ocirc;ng c&oacute; nghĩa l&agrave; thu nhập tốt hơn, hay c&oacute; địa vị cao hơn, n&oacute; chỉ l&agrave; c&ocirc;ng việc với t&iacute;nh chất kh&aacute;c. Đồng nghiệp v&agrave; l&agrave; quản l&yacute; trực tiếp l&agrave;m việc h&agrave;ng ng&agrave;y với m&igrave;nh l&agrave; một anh người &Yacute;, nhiều năm l&agrave;m việc ở khắp c&aacute;c nước tr&ecirc;n thế giới: H&agrave; Lan, Mỹ, Canada, Singapore, gần 50 tuổi, v&agrave; vẫn đang l&agrave;m kỹ thuật thuần tu&yacute;. M&igrave;nh cũng c&oacute; hỏi về vấn đề n&agrave;y, anh &yacute; trả lời: &ldquo;Anh kh&ocirc;ng giỏi l&agrave;m quản l&yacute;, gi&aacute;m s&aacute;t c&aacute;c th&agrave;nh vi&ecirc;n trong nh&oacute;m, anh chỉ th&iacute;ch nghi&ecirc;n cứu v&agrave; l&agrave;m kỹ thuật, được cập nhật c&ocirc;ng nghệ h&agrave;ng ng&agrave;y. V&agrave; tr&iacute; nhớ v&agrave; suy nghĩ của t&ocirc;i vẫn hoạt động tốt, chừng n&agrave;o vẫn c&ograve;n nhớ tốt th&igrave; vẫn sẽ l&agrave;m kỹ thuật&rdquo;, v&agrave; anh n&agrave;y l&agrave; một đội trưởng kỹ thuật rất tốt, đạo tạo, huấn luyện v&agrave; truyển cảm hứng học hỏi cho đội. Hay hồi qua Mỹ c&ocirc;ng t&aacute;c nửa năm, m&igrave;nh c&oacute; l&agrave;m việc c&ugrave;ng những đồng nghiệp hơn 60 tuổi, vẫn h&agrave;ng ng&agrave;y thiết kế mạch, lập tr&igrave;nh vi điều khiển, v&agrave; rất uy&ecirc;n b&aacute;c về mọi c&ocirc;ng nghệ, xu hướng hiện đại.</p>\n\n<p>M&igrave;nh muốn nhấn mạnh ở đ&acirc;y l&agrave; chọn nghề kh&ocirc;ng n&ecirc;n qu&aacute; theo đuổi xu hướng, m&agrave; quan trọng hơn l&agrave;: trong những xu hướng đ&oacute;, lựa chọn c&ocirc;ng việc ph&ugrave; hợp với m&igrave;nh. Vậy những ai ph&ugrave; hợp với CNTT? Theo m&igrave;nh, những người ph&ugrave; hợp với CNTT l&agrave; những người:</p>\n\n<ul>\n\t<li>Th&iacute;ch c&ocirc;ng nghệ. Dấu hiệu: th&iacute;ch đồ mua, đọc đ&aacute;nh gi&aacute;, ngắm ngh&iacute;a c&aacute;c đồ c&ocirc;ng nghệ, th&iacute;ch chơi game, hay t&igrave;m t&ograve;i, thử nghiệm c&aacute;c t&iacute;nh năng phần mềm, trang web...</li>\n\t<li>Tư duy logic tốt v&agrave; th&iacute;ch logic chặt chẽ. Dấu hiệu: th&iacute;ch học to&aacute;n, th&iacute;ch lập tr&igrave;nh (th&iacute;ch hơn học to&aacute;n), th&iacute;ch c&aacute;c tr&ograve; chơi logic, c&aacute;c b&agrave;i test IQ...</li>\n\t<li>Th&iacute;ch thử th&aacute;ch. Dấu hiệu: tự v&agrave;o c&aacute;c trang mạng giải to&aacute;n, giải b&agrave;i c&aacute;c b&agrave;i lập tr&igrave;nh, th&iacute;ch chế độ thi đấu trực tuyến, chơi c&aacute;c tr&ograve; chơi tr&iacute; tuệ....</li>\n\t<li>Cầu to&agrave;n. Dấu hiệu: Lu&ocirc;n kh&ocirc;ng ưng &yacute; với những g&igrave; đang c&oacute;, lu&ocirc;n muốn n&acirc;ng cấp, sửa đổi từ những thứ nhỏ nhất.</li>\n</ul>\n\n<h2>Một số việc l&agrave;m c&oacute; nhu cầu cao trong ng&agrave;nh c&ocirc;ng nghệ</h2>\n\n<ul>\n\t<li>Lập tr&igrave;nh vi&ecirc;n (Dev - Developer)</li>\n\t<li>Nh&agrave; khoa học dữ liệu (Data Scientist)</li>\n\t<li>Kỹ sư học m&aacute;y/tr&iacute; tuệ nh&acirc;n tạo (AI/ML Engineer)</li>\n\t<li>Kỹ sự DevOps (DevOps engineer)</li>\n\t<li>Kỹ sư c&aacute;c hệ thống đ&aacute;m m&acirc;y (Cloud systems engineer)</li>\n\t<li>Chuy&ecirc;n gia bảo mật (Security professionals)</li>\n\t<li>Chuy&ecirc;n vi&ecirc;n ph&acirc;n t&iacute;ch nghiệp vụ (BA - Business Analyst)</li>\n\t<li>Chuy&ecirc;n vi&ecirc;n tr&iacute; tuệ doanh nghiệp (BI - Business Intelligence Analyst)</li>\n\t<li>Quản trị hệ thống v&agrave; mạng (SA - System Administrators)</li>\n\t<li>Quản trị CDSL (DBA - Database Administrator)</li>\n\t<li>Freelancer (Viết blog,&nbsp;<a href=\"https://tienaocenter.com/\">kiếm tiền online</a>,&nbsp;<a href=\"https://zenco.com.vn/\">Zenco blog</a>...)</li>\n</ul>\n\n<p>C&ocirc;ng việc cụ thể của c&aacute;c vị tr&iacute; n&agrave;y nằm ngo&agrave;i phạm vi của b&agrave;i viết n&agrave;y, m&igrave;nh sẽ viết cụ thể hơn ở một b&agrave;i kh&aacute;c, mọi người c&oacute; thể tham khảo link cuối b&agrave;i để biết th&ecirc;m th&ocirc;ng tin.</p>\n\n<p>Trong số đ&oacute; một số nghề mới trở n&ecirc;n phổ biến gần đ&acirc;y, c&ugrave;ng với sự b&ugrave;ng nổ của cuộc c&aacute;ch mạng c&ocirc;ng nghiệp lần thứ 4, v&agrave; chắc chắn sẽ vẫn l&agrave; c&aacute;c nghề hot trong một thời gian tới như Data Scientist, AI/ML Engineer, Business Intelligence Analyst&hellip;</p>\n\n<p>Một số việc kh&aacute;c c&oacute; thể sẽ th&agrave;nh &quot;hot trend&quot; trong tương lại kh&ocirc;ng xa c&oacute; thể kể đến như: kỹ sư vạn vật kết nối (IoT Engineer); kỹ sư nh&agrave; th&ocirc;ng minh (Smart Home Engineer); kỹ sư xe tự l&aacute;i, xe bay, robot; kỹ sư c&ocirc;ng nghệ xử l&yacute; r&aacute;c thải, nước thải; kỹ sư thực tế ảo...</p>\n\n<h2>Thế hệ trẻ cần chuẩn bị g&igrave; để bước v&agrave;o ng&agrave;nh CNTT trong tương lai</h2>\n\n<ul>\n\t<li>L&agrave;m quen, sử dụng c&aacute;c phần mềm m&aacute;y t&iacute;nh (kh&ocirc;ng phải game) c&agrave;ng nhiều c&agrave;ng tốt: Paint, Word, Powerpoint, Excel, Windows, Photoshop, Illustrator, Algodoo... (từ Tiểu học)</li>\n\t<li>Tiếp x&uacute;c, học c&agrave;ng nhiều c&agrave;ng tốt c&aacute;c kho&aacute; học STEM (online hoặc offline): lập tr&igrave;nh, thuật to&aacute;n robotics, s&aacute;ng tạo c&ocirc;ng nghệ... (từ Tiểu học)</li>\n\t<li>Học chắc chắn c&aacute;c m&ocirc;n to&aacute;n, v&agrave; tiếp x&uacute;c, học nhiều về c&aacute;c m&ocirc;n to&aacute;n đặc biệt cần thiết cho ng&agrave;nh khoa học m&aacute;y t&iacute;nh. Ở Tiểu học v&agrave; THCS: c&aacute;c m&ocirc;n to&aacute;n trong trường phổ th&ocirc;ng, logic, đồ thị (graph), tập hợp, to&aacute;n tổ hợp, x&aacute;c suất... Ở c&aacute;c cấp cao hơn: to&aacute;n rời rạc, x&aacute;c suất, thống k&ecirc;, đại số tuyến t&iacute;nh, giải th&iacute;ch h&agrave;m nhiều biến&hellip;</li>\n\t<li>Tiếp x&uacute;c với lập tr&igrave;nh thuật to&aacute;n, lập tr&igrave;nh ứng dụng c&agrave;ng nhiều c&agrave;ng tốt.</li>\n\t<li>Tham gia l&agrave;m sản phẩm c&ocirc;ng nghệ th&ocirc;ng tin (phần mềm, website, sản phẩm c&ocirc;ng nghệ...) trong c&aacute;c cuộc thi s&aacute;ng tạo, tin học trẻ..., v&agrave; tự l&agrave;m c&aacute;c sản phẩm c&ocirc;ng nghệ, phần mềm phục vụ ch&iacute;nh nhu cầu của m&igrave;nh v&agrave; những người xung quanh.</li>\n\t<li>Tham gia, tương t&aacute;c tr&ecirc;n c&aacute;c cộng đồng c&ocirc;ng nghệ, lập tr&igrave;nh trực tuyến</li>\n</ul>\n\n<p>Nội dung, lộ tr&igrave;nh, t&agrave;i liệu học lập tr&igrave;nh cụ thể cho c&aacute;c bạn nhỏ từ cấp 2 trở l&ecirc;n m&igrave;nh đ&atilde; post trước đ&oacute;. Nội dung v&agrave; t&agrave;i liệu cho c&aacute;c bạn nhỏ hơn (tiểu học, tiền tiểu học) m&igrave;nh sẽ chia sẻ ở một b&agrave;i post kh&aacute;c.</p>\n\n<p>Source:&nbsp;<a href=\"https://justinvo.com/\">justinvo.com</a></p>\n",
      "category_id": 1,
      "total_views": 100,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "profession", "career"
      ]
    },
    {
      "title": "Spring JPA fetch test",
      "content": "<p>I used Spring boot, Hibernate few times back then at University, I&#39;v started using it again recently.</p>\n\n<p>In this&nbsp;<a href=\"https://github.com/tienducitt/test-spring-jpa\">project</a>, I want to check how Spring JPA loads an entity and its relationships. How it deals with&nbsp;<code>@xToOne</code>&nbsp;and&nbsp;<code>@xToMany</code>&nbsp;relationships.</p>\n\n<h2>Data diagram:</h2>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://github.com/tienducitt/test-spring-jpa/raw/master/schema.png\"><img alt=\"\" src=\"https://github.com/tienducitt/test-spring-jpa/raw/master/schema.png\" /></a></p>\n\n<p><code>Order</code>&nbsp;have many relationships, some is&nbsp;<code>@ManyToOne</code>, 1 is&nbsp;<code>@OneToMany</code>.</p>\n\n<h2>Test with findById()</h2>\n\n<p>Here is the logs when we execute findById(orderId)</p>\n\n<pre>\n<code>Hibernate: \n    select\n        order0_.id as id1_4_0_,\n        order0_.customer_id as customer3_4_0_,\n        order0_.name as name2_4_0_,\n        user1_.id as id1_7_1_,\n        user1_.card_id as card_id3_7_1_,\n        user1_.city_id as city_id4_7_1_,\n        user1_.name as name2_7_1_,\n        idcard2_.id as id1_2_2_,\n        idcard2_.card_number as card_num2_2_2_,\n        idcard2_.type_id as type_id3_2_2_,\n        city3_.id as id1_0_3_,\n        city3_.country_id as country_3_0_3_,\n        city3_.name as name2_0_3_ \n    from\n        orders order0_ \n    left outer join\n        user user1_ \n            on order0_.customer_id=user1_.id \n    left outer join\n        idcard idcard2_ \n            on user1_.card_id=idcard2_.id \n    left outer join\n        city city3_ \n            on user1_.city_id=city3_.id \n    where\n        order0_.id=?\nHibernate: \n    select\n        idcardtype0_.id as id1_3_0_,\n        idcardtype0_.name as name2_3_0_ \n    from\n        idcard_type idcardtype0_ \n    where\n        idcardtype0_.id=?\nHibernate: \n    select\n        country0_.id as id1_1_0_,\n        country0_.name as name2_1_0_,\n        country0_.union_id as union_id3_1_0_,\n        union1_.id as id1_6_1_,\n        union1_.name as name2_6_1_ \n    from\n        country country0_ \n    left outer join\n        unions union1_ \n            on country0_.union_id=union1_.id \n    where\n        country0_.id=?\n</code></pre>\n\n<p>Spring boot load all the&nbsp;<code>@ManyToOne</code>&nbsp;relationships using 1 join query.<br />\nBut it can not load all the thing at 1 query, the relationship&nbsp;<code>order.customer.city</code>&nbsp;have it owns relationship is&nbsp;<code>Country</code>, 1 extra query is executed for&nbsp;<code>Country</code>, and another one for&nbsp;<code>IDCardType</code>.</p>\n\n<h2>Test with findAll()</h2>\n\n<p>Here is the logs when we execute findAll():</p>\n\n<pre>\n<code>Hibernate: \n    select\n        order0_.id as id1_4_,\n        order0_.customer_id as customer3_4_,\n        order0_.name as name2_4_ \n    from\n        orders order0_\nHibernate: \n    select\n        user0_.id as id1_7_0_,\n        user0_.card_id as card_id3_7_0_,\n        user0_.city_id as city_id4_7_0_,\n        user0_.name as name2_7_0_,\n        idcard1_.id as id1_2_1_,\n        idcard1_.card_number as card_num2_2_1_,\n        idcard1_.type_id as type_id3_2_1_,\n        idcardtype2_.id as id1_3_2_,\n        idcardtype2_.name as name2_3_2_,\n        city3_.id as id1_0_3_,\n        city3_.country_id as country_3_0_3_,\n        city3_.name as name2_0_3_,\n        country4_.id as id1_1_4_,\n        country4_.name as name2_1_4_,\n        country4_.union_id as union_id3_1_4_ \n    from\n        user user0_ \n    left outer join\n        idcard idcard1_ \n            on user0_.card_id=idcard1_.id \n    left outer join\n        idcard_type idcardtype2_ \n            on idcard1_.type_id=idcardtype2_.id \n    left outer join\n        city city3_ \n            on user0_.city_id=city3_.id \n    left outer join\n        country country4_ \n            on city3_.country_id=country4_.id \n    where\n        user0_.id=?\nHibernate: \n    select\n        union0_.id as id1_6_0_,\n        union0_.name as name2_6_0_ \n    from\n        unions union0_ \n    where\n        union0_.id=?\n</code></pre>\n\n<p>We have 1 query for all orders, and 1 extra query for each relationship of order.<br />\nEven if we change the fetch mode to JOIN&nbsp;<code>@Fetch(FetchMode.JOIN)</code>, Spring JPA still behaves the same way.</p>\n\n<h2>Test with custom functions:</h2>\n\n<p>I tested with some custom functions belove, the result is the same with&nbsp;<code>findAll</code>&nbsp;and&nbsp;<code>findById</code>.</p>\n\n<pre>\n<code>    @Query(&quot;SELECT o FROM orders o WHERE o.id IN ?1&quot;)\n    List&lt;Order&gt; findByIds(List&lt;Integer&gt; ids);\n\n    @Query(&quot;SELECT o FROM orders o WHERE o.name = ?1&quot;)\n    Order findByName(String name);\n</code></pre>\n\n<h2>So:</h2>\n\n<ul>\n\t<li>Spring JPA does not work as my assumtion, I thought default fetch type is always LAZY. But Default fetch type of&nbsp;<code>@ManyToOne</code>&nbsp;and&nbsp;<code>@OneToOne</code>&nbsp;relationships is EAGERly, while default of&nbsp;<code>@OneToMany</code>&nbsp;and&nbsp;<code>@ManyToMany</code>&nbsp;is LAZYly.</li>\n\t<li>findById() will load all the EAGER relationship by using join, some extra queries can be executed for complex relationships.</li>\n\t<li>findAll() will load all the EAGER relationship by using a separate query,no matter the fetch mode is defined or not (which is not good). This is a kind of N+1 problem I think.</li>\n\t<li>With complex model with hundred of entities, Spring JPA may be load many entities with just a simple function like&nbsp;<code>findById()</code></li>\n</ul>\n\n<h3>Question:</h3>\n\n<p>What is the best practice here? For small application, this is not a big deal, but for medium or big application, this will increase the database load a lot.</p>\n\n<p>Should we fetch all the relationship LAZYly? and manually defind the query only load the information that we need?</p>\n\n<p>Rey 20-01-2019</p>\n",
      "category_id": 1,
      "total_views": 100,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "spring", "jpa"
      ]
    },
    {
      "title": "Cách học DỐT tiếng anh cho lập trình viên",
      "content": "<p>google c&aacute;ch học tốt tiếng anh th&igrave; ra h&agrave;ng đống kết quả nhưng đảm bảo kh&ocirc;ng c&oacute; c&aacute;i n&agrave;o d&ugrave;ng được (nếu d&ugrave;ng được th&igrave; bạn đ&atilde; tiến bộ rồi phải kh&ocirc;ng). Vậy thay v&igrave; t&igrave;m c&aacute;ch học tốt h&atilde;y đọc thử những c&aacute;ch học DỐT sau đ&acirc;y xem sao.</p>\n\n<p>Lưu &yacute;: những b&agrave;i viết thể hiện quan điểm như n&agrave;y vốn kh&ocirc;ng c&oacute; sự đ&uacute;ng sai tuyệt đối, mọi hệ lụy xảy ra đều l&agrave; do cơ địa của bạn&nbsp;<img alt=\":smile:\" src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\" style=\"height:20px; width:20px\" title=\":smile:\" /></p>\n\n<h1>1. Xem/đọc BBC, CNN, xem thời sự, đọc b&aacute;o thanh ni&ecirc;n b&aacute;o tuổi trẻ, American Voice People hay c&aacute;i g&igrave; ấy m&igrave;nh kh&ocirc;ng nhớ t&ecirc;n....v...v</h1>\n\n<p>B&iacute; k&iacute;p học dốt tiếng anh đầu ti&ecirc;n, l&agrave; h&atilde;y lao v&agrave;o đọc/xem những thứ bạn kh&ocirc;ng quan t&acirc;m, nh&agrave;m ch&aacute;n thiếu th&uacute; vị, chỉ cốt để nhồi nh&eacute;t tiếng Anh v&agrave;o đầu, c&ocirc;ng dụng duy nhất l&agrave; dễ ngủ, M&igrave;nh đ&atilde; thử v&agrave; th&agrave;nh c&ocirc;ng.</p>\n\n<p>Mấy trang kia mang t&iacute;nh chất&nbsp;<strong>v&iacute; dụ</strong>, h&atilde;y thay thế cụm trang đ&oacute; bằng trang n&agrave;o bạn kh&ocirc;ng th&iacute;ch, ch&acirc;n l&yacute; vẫn giữ nguy&ecirc;n.</p>\n\n<h1>2. Đ&agrave;o bới khắp th&agrave;nh phố t&igrave;m trung t&acirc;m tiếng anh n&agrave;o cho ngon.</h1>\n\n<p>Chưa thấy ở đ&acirc;u lắm trung t&acirc;m tiếng anh như ở việt nam, chưa thấy ở đ&acirc;u c&aacute;c Trung t&acirc;m d&aacute;m&nbsp;<strong>TO C&Ograve;I</strong>&nbsp;h&ocirc; h&agrave;o khẩu hiệu, thần k&igrave; hiệu quả chữa b&aacute;ch bệnh như ăn thịt Đường Tăng như ở VIệt Nam. Rồi đăng l&ecirc;n mấy c&aacute;i tấm gương th&agrave;nh c&ocirc;ng do học ở trung t&acirc;m m&agrave; ra, t&igrave;m hiểu mới biết đều l&agrave; người du học hay học trường quốc tế, kh&ocirc;ng th&igrave; cũng l&agrave; tự giỏi từ trước rồi.</p>\n\n<p>Học ở lớp học hay trung t&acirc;m c&oacute; t&aacute;c dụng khi bạn ho&agrave;n to&agrave;n m&ugrave; chữ + kh&ocirc;ng c&oacute; khả năng tự học + qu&aacute; lo lắng kh&ocirc;ng biết l&agrave;m quen tiếng anh như n&agrave;o + qu&aacute; tự kỉ kh&ocirc;ng thể ngồi học một m&igrave;nh th&ecirc;m nữa + muốn giao lưu kết b&egrave; kết bạn ngắm g&aacute;i xinh. C&ograve;n đ&acirc;u th&igrave; muốn tiến bộ&nbsp;<strong>nhiều</strong>&nbsp;th&igrave; c&aacute;ch tốt nhất l&agrave;&nbsp;<strong>TỰ TH&Acirc;N</strong>.</p>\n\n<h1>3. Cứ kiếm hết c&aacute;ch học n&agrave;y đến c&aacute;ch học kia, nhưng kh&ocirc;ng nghe lời ai cả</h1>\n\n<p>Đ&atilde; hỏi c&aacute;ch học th&igrave; &iacute;t nhất h&atilde;y tạm tin v&agrave; l&agrave;m theo xem sao đ&atilde;. Nếu một thời gian sau thấy kh&ocirc;ng hiệu quả th&igrave; đổi sang c&aacute;ch kh&aacute;c v&igrave; kh&ocirc;ng ai giống ai. Đừng hoang mang lo ngại l&agrave; l&agrave;m thế n&agrave;y được kh&ocirc;ng l&agrave;m thế kia được kh&ocirc;ng. V&igrave; chung quy lại th&igrave; l&agrave;m g&igrave; cũng sẽ giỏi l&ecirc;n th&ocirc;i. C&aacute;ch duy nhất để dốt đi l&agrave; c&aacute;ch bạn đang l&agrave;m: hoang mang chong ch&oacute;ng hết c&aacute;ch n&agrave;y c&aacute;ch kia m&agrave; kh&ocirc;ng thực sự bắt tay v&agrave;o c&aacute;ch n&agrave;o cả.</p>\n\n<h1>4. Download thật nhiều t&agrave;i liệu, mua thật nhiều s&aacute;ch, down app về chật n&iacute;ch m&aacute;y</h1>\n\n<p>Ngoại trừ từ điển chỉ cần 1 c&aacute;i v&agrave; c&oacute; khi c&ograve;n tra. Chứ s&aacute;ch vở c&aacute;c thứ th&igrave; mở ra dược mấy lần? X&oacute;a đi để bộ nhớ m&agrave; tải phim.</p>\n\n<h1>5. L&agrave;m thật nhiều &quot;b&agrave;i tập&quot;</h1>\n\n<p>Tiếng anh chứ c&oacute; phải to&aacute;n đ&acirc;u m&agrave; học c&aacute;i kiểu cộng cộng trừ trừ. S + V-ng + O... cộng cộng suốt ng&agrave;y đến l&uacute;c cần th&igrave; trong đầu cũng kh&ocirc;ng nhớ nổi.</p>\n\n<h1>6. C&aacute;i g&igrave; cũng hỏi tại sao</h1>\n\n<p>Tại sao chỗ n&agrave;y lại viết như thế, tại sao người ta lại n&oacute;i như thế.</p>\n\n<p>C&acirc;u trả lời kiểu &quot;khoa học h&oacute;a tiếng anh&quot; sẽ l&agrave;:</p>\n\n<ul>\n\t<li>ở v&igrave; đ&acirc;y l&agrave; th&igrave; hiện tại ho&agrave;n th&agrave;nh tiếp diễn, m&agrave; th&igrave; n&agrave;y được d&ugrave;ng diễn tả một việc đ&atilde; xảy ra v&agrave; chưa kết th&uacute;c m&agrave; bla bla bla</li>\n\t<li>ờ v&igrave; -ing d&ugrave;ng cho vật c&ograve;n -ed d&ugrave;ng cho người....</li>\n</ul>\n\n<p>Rất tiếc, sự giải th&iacute;ch tiếng anh chỉ c&oacute; ứng dụng đ&ocirc;i ch&uacute;t trong khi những thứ kh&ocirc;ng giải th&iacute;ch được rất nhiều.</p>\n\n<p>C&acirc;u trả lời đ&uacute;ng của &quot;tại sao như thế&quot; l&agrave;:</p>\n\n<p><strong>V&igrave; người Anh th&iacute;ch như thế.</strong></p>\n\n<p>N&ecirc;n nhớ, v&igrave; người Anh n&oacute;i như thế n&ecirc;n mấy quy tắc n&agrave;y được sinh ra, chứ kh&ocirc;ng phải v&igrave; c&oacute; mấy quy tắc n&agrave;y n&ecirc;n người ta phải n&oacute;i như thế.</p>\n\n<p>Vậy n&ecirc;n đừng hỏi tại sao nữa, v&igrave; những g&igrave; kh&ocirc;ng thể hỏi tại sao mới l&agrave; phần lớn của ng&ocirc;n ngữ, th&ocirc;ng qua sinh hoạt qua lịch sử m&agrave; h&igrave;nh th&agrave;nh n&ecirc;n chứ kh&ocirc;ng cần l&iacute; do n&agrave;o cả. N&oacute;i nhiều th&agrave;nh quen th&ocirc;i.</p>\n\n<p>Bạn muốn hỏi l&iacute; do để c&oacute; thể nhớ, như những m&ocirc;n học kh&aacute;c, hiểu mới nhớ. Đ&aacute;ng tiếc l&agrave; ng&ocirc;n ngữ th&igrave; kh&ocirc;ng như vậy. D&ugrave;ng mới nhớ.</p>\n\n<p>&mdash;&gt; Suy luận chỉ c&oacute; t&aacute;c dụng với 1 số &iacute;t chủ điểm ngữ ph&aacute;p, tầm 1% của tổng số lượng kiến thức cần học. Nếu cứ bắt người học TA như học To&aacute;n, dựa v&agrave;o suy luận, th&igrave; cả đời kh&ocirc;ng n&oacute;i nổi 1 c&acirc;u hội thoại ho&agrave;n chỉnh. C&aacute;ch duy nhất l&agrave; tiếp x&uacute;c thật nhiều, trong một cường độ cao (th&igrave; thời gian r&uacute;t nhắn lại), hoặc thư thả (th&igrave; thời gian d&agrave;i ra), th&igrave; ng&ocirc;n ngữ ngấm v&agrave;o người v&agrave; tự n&oacute;i đ&uacute;ng tự biết sai ở đ&acirc;u. C&oacute; 99% vấn đề kh&ocirc;ng thể suy luận m&agrave; ra được, khiến người học cứ mải miết t&igrave;m c&aacute;ch suy luận v&agrave; dựa dẫm v&agrave;o suy luận thay v&igrave; ch&uacute; &yacute; nạp kiến thức v&agrave; c&aacute;c v&iacute; dụ, chủ quan cho rằng cứ thế học v&agrave;i ba ngữ ph&aacute;p trong s&aacute;ch gi&aacute;o khoa hay kh&oacute;a học đưa ra l&agrave; ngon, c&oacute; thể d&ugrave;ng v&agrave;i mưu m&ocirc; để trở th&agrave;nh một người sử dụng tiếng Anh th&agrave;nh thạo, ỷ lại để kh&ocirc;ng cần tiếp x&uacute;c TA nhiều, v&agrave; rồi như thế kh&ocirc;ng bao giờ tiến bộ được. Ngo&agrave;i ra n&oacute; ngăn trở người học được vui vẻ khi học tiếng anh v&igrave; cứ suy nghĩ m&atilde;i v&agrave; qu&aacute; chăm ch&uacute; v&agrave;o việc &quot;học&quot; cho đ&uacute;ng quy củ trong khi sợ h&atilde;i rằng việc xem phim, đọc s&aacute;ch b&aacute;o, nghe nhạc, chat chit... kh&ocirc;ng phải l&agrave; &quot;học&quot;</p>\n\n<h1>thế phải l&agrave;m g&igrave; đ&acirc;y?</h1>\n\n<h1>1. Th&iacute;ch c&aacute;i g&igrave;, đọc c&aacute;i đ&oacute;.</h1>\n\n<p>Th&iacute;ch b&oacute;ng đ&aacute;? L&ecirc;n web b&oacute;ng đ&aacute;, diễn đ&agrave;n b&oacute;ng đ&aacute;, Reddit b&oacute;ng đ&aacute;. Th&iacute;ch c&acirc;y cối chim mu&ocirc;ng, đọc về c&acirc;y cối chim mu&ocirc;ng bằng tiếng anh. Th&iacute;ch khoa học th&igrave; đọc wikipedia, c&aacute;c web khoa học. Th&iacute;ch truyện tranh th&igrave; l&ecirc;n kissmanga, app naver webtoon. Th&iacute;ch m&aacute;y t&iacute;nh đọc về m&aacute;y t&iacute;nh... Th&iacute;ch kinh dị creepy l&ecirc;n t&igrave;m tr&ecirc;n tumblr hoặc mấy web kinh dị. Th&iacute;ch xem thi&ecirc;n hạ ch&eacute;m gi&oacute; l&ecirc;n đọc comment tr&ecirc;n những video youtube bạn th&iacute;ch.</p>\n\n<p>Nhiều người hỏi kh&oacute; lắm biết g&igrave; đ&acirc;u m&agrave; đọc. Kh&oacute; qu&aacute; c&oacute; thể đọc truyện tranh, mẩu tin ngắn thay v&igrave; d&agrave;i. Dần dần n&acirc;ng cao l&ecirc;n.</p>\n\n<h1>2. Bỏ hết phụ đề việt đi, xem phụ đề anh</h1>\n\n<p>Phim l&agrave; thứ m&agrave; 100% nh&acirc;n loại đều th&iacute;ch. Tại sao kh&ocirc;ng tận dụng. Đừng k&ecirc;u kh&ocirc;ng hiểu nữa. Kh&ocirc;ng hiểu nhiều th&igrave; hiểu &iacute;t. Kh&ocirc;ng hiểu th&igrave; biết c&aacute;ch ph&aacute;t &acirc;m. Kh&ocirc;ng hiểu th&igrave; pause lại tra từ. Kh&ocirc;ng hiểu th&igrave; ghi ra để sau n&agrave;y hiểu. Kh&ocirc;ng hiểu th&igrave; bật song song 2 loại phụ đề việt-anh l&ecirc;n.</p>\n\n<p>Hi sinh &quot;kh&ocirc;ng hiểu&quot; v&agrave;i bộ phim để học tiếng anh cũng c&oacute; l&agrave;m sao nhỉ?</p>\n\n<p>C&oacute; những phim c&ograve;n sử dụng tiếng Nhật - một ng&ocirc;n ngữ m&agrave; kh&oacute; hơn cả tiếng anh nữa m&agrave; mọi người vẫn hiểu vẫn xem ầm ầm đ&oacute; th&ocirc;i.</p>\n\n<p>Ngo&agrave;i ra th&igrave; xem phim Nhật, phim H&agrave;n, phim Th&aacute;i, phim Việt...phụ đề Anh cũng c&oacute; t&aacute;c dụng nh&eacute;. D&ugrave; kh&ocirc;ng bổ sung được phần nghe n&oacute;i nhưng c&oacute; t&aacute;c dụng đọc hiểu.</p>\n\n<p>Xem ở đ&acirc;u?</p>\n\n<ul>\n\t<li>down về rồi d&ugrave;ng phần mềm như KMPLayer gh&eacute;p 2 phụ đề song song Anh-Việt v&agrave;o xem. down phim bằng torrent ở&nbsp;<a href=\"https://thepiratebay.org/\">Vịnh cướp biển</a>, down phụ đề tv series ở&nbsp;<a href=\"http://quitestupid.com/\">Addic7ed</a>, phụ đề phim lẻ ở&nbsp;<a href=\"https://subscene.com/browse/latest/film/1\">Subscene</a></li>\n\t<li>xem online ở&nbsp;<a href=\"http://movies.hdviet.com/\">HD Việt</a>&nbsp;hoặc&nbsp;<a href=\"http://hdonline.vn/\">HD Online</a>&nbsp;c&oacute; sẵn phụ đề Anh v&agrave; việt nhưng hay die link, nhiều quảng c&aacute;o. Được c&aacute;i đỡ phải down. Hoặc&nbsp;<a href=\"http://www.studyphim.vn/\">Study Phim</a>&nbsp;ngo&agrave;i phụ đề trong video c&ograve;n ghi th&ecirc;m phụ đề r&otilde; r&agrave;ng ra b&ecirc;n cạnh v&agrave; dịch lu&ocirc;n, tua phim bằng phụ đề,... hơi &iacute;t phim v&agrave; h&igrave;nh như c&oacute; hạn chế số lượng xem h&agrave;ng ng&agrave;y... m&igrave;nh kh&ocirc;ng nhớ</li>\n\t<li>xem online trong ứng dụng&nbsp;<a href=\"https://terrariumtvappdownloads.com/\">Terrarium TV</a>&nbsp;hoặc&nbsp;<a href=\"https://popcorn-time.to/\">Popcorn Time</a>&nbsp;chủ yếu l&agrave; phụ đề tiếng anh, kho phim đồ sộ phim g&igrave; cũng c&oacute;.</li>\n</ul>\n\n<h1>3. Chơi game server nước ngo&agrave;i, t&igrave;m ch&eacute;m gi&oacute; với người chơi ở mỹ, anh, xem stream...</h1>\n\n<p>M&ograve;e kh&ocirc;ng chơi n&ecirc;n kh&ocirc;ng biết l&agrave; cụ thể game g&igrave; v&agrave; server n&agrave;o để m&agrave; n&oacute;i, nhưng muốn t&igrave;m c&oacute; lẽ kh&ocirc;ng kh&oacute;. Bạn m&ograve;e học tiếng anh từ Dota cho rằng Dota l&agrave; một trong những game hỗ trợ &quot;chat chit n&oacute;i chuyện&quot; tốt nhất.</p>\n\n<p>Ngo&agrave;i ra c&oacute; thể xem stream chơi game của bọn n&oacute;i tiếng anh, hoặc xem mấy c&aacute;i video clip chế lại từ game, c&oacute; phụ đề tiếng anh nhưng n&oacute;i tiếng việt, hoặc n&oacute;i bằng tiếng anh đều được. Khi xem nhớ ghi ch&uacute; lại&nbsp;<strong>từ mới, c&acirc;u n&oacute;i</strong>&nbsp;những g&igrave; cảm thấy sau n&agrave;y cần d&ugrave;ng</p>\n\n<h1>4. Từ nay đừng google với từ kh&oacute;a tiếng việt nữa</h1>\n\n<p>bất kể l&agrave; c&aacute;i g&igrave; đừng t&igrave;m bằng tiếng việt nữa. Tập t&igrave;m bằng tiếng anh. Nếu kh&ocirc;ng biết từ kh&oacute;a l&agrave; g&igrave; th&igrave; tra từ điển c&aacute;i từ kh&oacute;a rồi d&ugrave;ng từ kh&oacute;a để tra lại google. Đọc kết quả bằng tiếng anh. C&aacute;i n&agrave;y đặc biệt c&ocirc;ng hiệu v&igrave; đ&atilde; t&igrave;m nghĩa l&agrave; bạn quan t&acirc;m. Quan t&acirc;m th&igrave; sẽ tập trung. Tập trung th&igrave; nhớ nhanh + nhớ l&acirc;u.</p>\n\n<h1>5. Giao lưu kết bạn tr&ograve; chuyện ch&eacute;m gi&oacute; chat chit với người việt giỏi tiếng anh hoặc người anh mĩ</h1>\n\n<p>Ở đ&acirc;u &agrave;?</p>\n\n<p><a href=\"https://discord.me/\">discord.me</a>&nbsp;l&ecirc;n đ&acirc;y join v&agrave;o c&aacute;i server n&agrave;o đ&ocirc;ng hoặc g&otilde; từ kh&oacute;a v&agrave;o t&igrave;m kiếm server n&agrave;o ưng &yacute; m&igrave;nh. Discord l&agrave; một platform chat text + voice&nbsp;<strong>RẤT Đ&Ocirc;NG</strong>, v&ocirc; c&ugrave;ng rộng lớn, khắp tr&ecirc;n thế giới, đủ mọi chủ đề, kh&ocirc;ng t&igrave;m được cạ ở đ&acirc;y th&igrave; chắc cũng chẳng c&ograve;n chỗ n&agrave;o dễ t&igrave;m hơn thế cả.</p>\n\n<p>M&ograve;e th&igrave; hay nằm ở server&nbsp;<a href=\"https://discord.me/coding\">Programmer&#39;s Hangout</a>&nbsp;v&igrave; hay l&ecirc;n đ&acirc;y hỏi về lập tr&igrave;nh, mấy người ở đ&acirc;y vừa năng nổ gi&uacute;p đỡ vừa c&oacute; t&iacute;nh c&aacute;ch hay, thoải m&aacute;i. H&ocirc;m bữa chui v&agrave;o voice room cả nh&oacute;m đang n&oacute;i chuyện th&igrave; c&oacute; &ocirc;ng tự kỉ ngồi chơi piano theo chủ đề c&acirc;u chuyện. V&iacute; dụ khi M&ograve;e n&oacute;i tới c&agrave;i win th&igrave; ổng chơi piano lu&ocirc;n bản nhạc khởi động windows,... n&oacute;i tới phim th&igrave; ổng đ&aacute;nh lu&ocirc;n nhạc nền phim đ&oacute;&nbsp;<img alt=\":smile:\" src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\" style=\"height:20px; width:20px\" title=\":smile:\" />&nbsp;Nhiều người dị m&agrave; dễ thương thật.</p>\n\n<p>Ai m&agrave; hay troll th&igrave;&nbsp;<strong>đừng</strong>&nbsp;v&agrave;o Programmer&#39;s Hangout m&agrave; h&atilde;y v&agrave;o 2 c&aacute;i n&agrave;y:&nbsp;<a href=\"https://discord.me/daddy69\">Daddy</a>&nbsp;v&agrave;&nbsp;<a href=\"https://discord.me/gaydayz\">GayDayz</a>&nbsp;cực k&igrave; đ&ocirc;ng đ&uacute;c v&agrave; tấp nập, ở đ&acirc;y hầu như l&uacute;c n&agrave;o cũng c&oacute; người n&oacute;i chuyện tr&ecirc;n c&aacute;c voice room để m&agrave; h&oacute;ng. C&aacute;i GayDayz t&ecirc;n Gay nhưng trong n&agrave;y đủ thứ m&agrave; thẳng c&ograve;n nhiều hơn gay. C&aacute;i Daddy th&igrave; nghe t&ecirc;n daddy69 c&oacute; vẻ kh&ocirc;ng trong s&aacute;ng cho lắm. N&oacute;i chung 2 server n&agrave;y đủ loại người, tốt xấu c&oacute; cả. C&oacute; l&uacute;c th&igrave; gặp những người rất lịch sự c&oacute; l&uacute;c th&igrave; đ&ugrave;a bậy. Kh&ocirc;ng thuần như Programmer&#39;s Hangout n&ecirc;n mo&egrave; chủ yếu lui tới Programmer&#39;s Hangout v&agrave; một số server của bạn b&egrave; m&ograve;e th&ocirc;i. Tốt nhất mỗi người n&ecirc;n tự t&igrave;m lấy đ&aacute;m đ&ocirc;ng m&agrave; m&igrave;nh cảm thấy ph&ugrave; hợp.</p>\n\n<p>Ai k&ecirc;u kh&ocirc;ng hiểu kh&ocirc;ng biết n&oacute;i g&igrave;, c&aacute;i g&igrave; cũng phải từ từ v&agrave; bền bỉ. Kh&ocirc;ng biết th&igrave; tra, kh&ocirc;ng biết th&igrave; hỏi.</p>\n\n<p>C&oacute; c&aacute;i server n&agrave;y của người việt n&oacute;i tiếng anh v&agrave; dạy tiếng việt cho người nước ngo&agrave;i&nbsp;<a href=\"https://discord.me/learn_vietnamese\">Learn Vietnamese-English</a>&nbsp;c&oacute; thể v&agrave;o đ&acirc;y nếu cảm thấy muốn n&oacute;i tiếng anh với người việt.</p>\n\n<p>Ngo&agrave;i discord ra c&ograve;n c&oacute;&nbsp;<a href=\"https://xat.com/\">Xat</a>&nbsp;cũng rất nhiều room đủ thể loại nhưng tr&ecirc;n n&agrave;y trẻ tr&acirc;u l&agrave; nhiều.</p>\n\n<p>V&agrave;&nbsp;<a href=\"https://en.wikipedia.org/wiki/Internet_Relay_Chat\">IRC</a>&nbsp;l&agrave; một mạng lưới c&ograve;n đ&ocirc;ng gấp vạn lần discord v&agrave; Xat, quả nhiều server, nhưng kh&ocirc;ng c&oacute; một b&oacute;ng d&aacute;ng việt nam n&agrave;o v&agrave; chỉ hỗ trợ text chat, nhưng d&acirc;n lập tr&igrave;nh chắc sẽ th&iacute;ch v&igrave; n&oacute; sử dụng giao thức IRC, phải c&agrave;i client để sử dụng được triệt để v&agrave; khi đăng nhập phải nhập port number c&aacute;c thứ,...đem lại cảm gi&aacute;c b&iacute; hiểm.</p>\n\n<p>Ngo&agrave;i ra hầu như c&aacute;c&nbsp;<strong>phần mềm, hệ điều h&agrave;nh nổi tiếng</strong>&nbsp;đều c&oacute; 1 k&ecirc;nh IRC ch&iacute;nh thức. M&ograve;e hay lui tới server của&nbsp;<a href=\"https://community.linuxmint.com/tutorial/view/12\">Linux Mint</a>. C&oacute; server của&nbsp;<a href=\"https://www.python.org/community/irc/\">Python</a>, của&nbsp;<a href=\"https://wiki.mozilla.org/IRC\">Mozilla</a>,&nbsp;<a href=\"https://wiki.ubuntu.com/IRC/ChannelList\">Ubuntu</a>,&nbsp;<a href=\"https://fedoraproject.org/wiki/IRC\">Fedora</a>,&nbsp;<a href=\"https://www.gnu.org/server/irc-rules.en.html\">GNU</a>,&nbsp;<a href=\"https://wiki.openstack.org/wiki/IRC\">Open Stack</a>,&nbsp;<a href=\"https://help.twitch.tv/customer/portal/articles/1302780-twitch-irc\">Twitch</a>...</p>\n\n<h1>6. Phải thật l&igrave;</h1>\n\n<p>Kh&ocirc;ng được sợ h&atilde;i, sợ sai. Mấy đứa bảng cửu chương c&ograve;n kh&ocirc;ng thuộc n&oacute; vẫn google translate để t&aacute;n trai t&acirc;y kiếm thẻ xanh ầm ầm k&igrave;a, c&aacute;c lập tr&igrave;nh vi&ecirc;n th&ocirc;ng minh c&oacute; g&igrave; phải sợ? Nếu bị người kh&aacute;c sửa lỗi đừng c&aacute;u kỉnh hay tự ti v&igrave; ai giỏi cũng đ&atilde; từng ngu. Đau mới thấm.</p>\n\n<h1>7. N&oacute;i c&ograve;n ch&acirc;m chước, nhưng viết th&igrave; phải cẩn thận v&agrave; c&oacute; tr&aacute;ch nhiệm với những g&igrave; m&igrave;nh viết ra</h1>\n\n<p>C&oacute; những lỗi sai cơ bản rất đơn giản v&agrave; kh&ocirc;ng y&ecirc;u cầu cao si&ecirc;u g&igrave; th&igrave; tr&aacute;nh mắc. Khi viết n&oacute;i chuyện với người kh&aacute;c hay ngay cả viết linh tinh l&ecirc;n facebook cũng phải tự so&aacute;t lỗi để tr&aacute;nh th&agrave;nh th&oacute;i quen xấu kh&oacute; bỏ. Học h&agrave;nh từ mới cấu tr&uacute;c... đao to b&uacute;a lớn l&agrave;m g&igrave; khi m&agrave; ch&iacute;nh những thứ nhỏ nhặt mới l&agrave; thứ thể hiện tr&igrave;nh độ của bạn:</p>\n\n<ul>\n\t<li>yesterday i go toilet 6 time a day</li>\n\t<li>she like me</li>\n\t<li>but i only want love man</li>\n</ul>\n\n<p>C&aacute;i g&igrave; m&agrave; bạn kh&ocirc;ng d&aacute;m đảm bảo l&agrave; đ&uacute;ng (chưa viết quen, chưa kiểm nghiệm) th&igrave; google xem&nbsp;<strong>viết như thế l&agrave; đ&uacute;ng hay sai</strong>, bỏ từ kh&oacute;a trong ngoặc k&eacute;p . Nếu thấy&nbsp;<strong>kh&ocirc;ng</strong>&nbsp;ai hoặc&nbsp;<strong>&iacute;t</strong>&nbsp;ai n&oacute;i thế m&agrave; to&agrave;n người linh tinh kiểu comment/t&ecirc;n nick chứ kh&ocirc;ng c&oacute; kết quả n&agrave;o từ&nbsp;<strong>b&agrave;i b&aacute;o ch&iacute;nh thức</strong>&nbsp;tức l&agrave; sai rồi viết lại th&ocirc;i.</p>\n\n<h1>8. Khi đọc, xem, n&oacute;i chuyện... lưu &yacute; lại hoặc ghi ch&uacute; lại những g&igrave; m&agrave; đo&aacute;n l&agrave; sau n&agrave;y cần</h1>\n\n<p>một cụm từ, một c&acirc;u n&oacute;i, một thứ m&agrave; bạn nghĩ bạn sẽ d&ugrave;ng, một thứ bạn lu&ocirc;n muốn t&igrave;m c&aacute;ch diễn đạt m&agrave; l&acirc;u nay kh&ocirc;ng biết giờ mới thấy, hay thứ m&agrave; bạn nghĩ kh&aacute;c b&acirc;y giờ mới biết m&igrave;nh sai... sẽ tr&ocirc;i qua ngay nếu kh&ocirc;ng t&igrave;m c&aacute;ch lưu lại để mở ra &ocirc;n lại.</p>\n\n<h1>9. Đọc s&aacute;ch tiếng anh</h1>\n\n<p>Ai m&agrave; tiếng anh mức trung b&igrave;nh trở l&ecirc;n c&oacute; thể t&igrave;m đọc s&aacute;ch tiếng anh. S&aacute;ch giấy hoặc s&aacute;ch điện tử. M&ograve;e hay đọc s&aacute;ch điện tử v&igrave; dễ kiếm hơn l&agrave; s&aacute;ch giấy v&agrave; c&ograve;n c&oacute; thể tra ngay trong khi đọc bằng c&aacute;ch nhấn giữ v&agrave;o từ.</p>\n\n<p>C&oacute; thể mua Kindle hoặc tải app đọc s&aacute;ch như&nbsp;<a href=\"https://play.google.com/store/apps/details?id=com.flyersoft.moonreader&amp;hl=en\">Moon Reader</a>,&nbsp;<a href=\"https://play.google.com/store/apps/details?id=org.geometerplus.zlibrary.ui.android\">FB Reader</a>&nbsp;để đọc file prc, file epub... D&ugrave;ng k&egrave;m với từ điển&nbsp;<a href=\"https://drive.google.com/open?id=1g0AxoRyR09Q1dQqFSRiewfDiA84K-be8\">MSP Dict</a>&nbsp;để hỗ trợ tra từ bằng nhấn chuột trong khi đọc</p>\n\n<p>S&aacute;ch th&igrave; down tr&ecirc;n&nbsp;<a href=\"http://gen.lib.rus.ec/\">Gen Lib</a>&nbsp;tr&ecirc;n n&agrave;y trừ s&aacute;ch mới xuất bản v&agrave;i th&aacute;ng, c&ograve;n đ&acirc;u th&igrave; s&aacute;ch g&igrave; cũng c&oacute;. Hoặc trang của việt nam l&agrave;&nbsp;<a href=\"http://tve-4u.org/\">TVE-4U</a>&nbsp;cũng nhiều.</p>\n\n<p>(nhớ khi n&agrave;o c&oacute; điều kiện h&atilde;y mua s&aacute;ch giấy hoặc donate để ủng hộ t&aacute;c giả)</p>\n\n<hr />\n<p>Ai c&ograve;n g&igrave; hay h&atilde;y c&ugrave;ng chia sẻ link để mọi người c&ugrave;ng biết nh&oacute;e!</p>\n",
      "category_id": 1,
      "total_views": 220,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "english", "approach"
      ]
    },
    {
      "title": "Biên niên sử về bố cục trong trang web",
      "content": "<h2>Giới thiệu</h2>\n\n<p>B&agrave;i viết b&agrave;n về c&ocirc;ng nghệ c&aacute;c lập tr&igrave;nh vi&ecirc;n web &aacute;p dụng để thiết kế bố cục trong trang web (website layout) - qua c&aacute;c thời kỳ: table, float, block-inline, flexbox, JS, Twitter Bootstrap v&agrave; grid.</p>\n\n<p><br />\n<br />\n&nbsp;</p>\n\n<p><a href=\"http://namluu.com/wp-content/uploads/2018/01/website-1597382_640.jpg\"><img alt=\"Biên niên sử về bố cục trong trang web\" src=\"http://namluu.com/wp-content/uploads/2018/01/website-1597382_640.jpg\" style=\"width:600px\" /></a></p>\n\n<p><br />\n&nbsp;</p>\n\n<h2>Thời trước 2010</h2>\n\n<p>Đ&acirc;y l&agrave; thời kỳ tối cổ với c&ocirc;ng nghệ website, người ta hầu như &iacute;t đầu tư giao diện web, việc dựng bố cục, xương sườn cho trang web sử dụng thẻ HTML&nbsp;<code>&lt;table&gt;</code>&nbsp;l&agrave; ch&iacute;nh.</p>\n\n<p><br />\n<br />\n&nbsp;</p>\n\n<p><a href=\"http://namluu.com/wp-content/uploads/2018/01/yyou-1.jpg\"><img alt=\"\" src=\"http://namluu.com/wp-content/uploads/2018/01/yyou-1.jpg\" style=\"width:943px\" /></a></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://namluu.com/wp-content/uploads/2018/01/yyou-2.jpg\"><img alt=\"\" src=\"http://namluu.com/wp-content/uploads/2018/01/yyou-2.jpg\" style=\"width:953px\" /></a></p>\n\n<p><br />\n<br />\n<br />\nLayout Table rất đơn giản, với 1 table 3 rows, 1 row l&agrave;m header, 1 row l&agrave;m content, c&aacute;i cuối l&agrave;m footer.<br />\n<strong>Nhược điểm</strong>&nbsp;của layout table l&agrave;: rất kh&oacute; khăn khi t&aacute;i cấu tr&uacute;c lại bố cục, kh&oacute; khăn khi thiết kế v&igrave; table mục đ&iacute;ch ch&iacute;nh l&agrave; biểu diễn dữ liệu. C&aacute;c cột c&oacute; chiều rộng cố định kh&ocirc;ng linh hoạt, nan giải khi xử l&yacute; tr&ecirc;n nhiều k&iacute;ch thước m&agrave;n h&igrave;nh.<br />\nNăm 2012, khi mới ra trường, c&ocirc;ng việc đầu ti&ecirc;n của t&ocirc;i l&agrave; đập bỏ v&agrave; thay thế c&aacute;c layout dạng table. Tới nay th&igrave; kh&ocirc;ng c&ograve;n ai nghĩ tới việc việc thiết kế layout bằng table nữa.<br />\nTuy nhi&ecirc;n c&ograve;n rất nhiều t&agrave;i liệu trong c&aacute;c trường đại học chưa được cập nhật n&ecirc;n đừng ngạc nhi&ecirc;n khi bạn được dạy thiết kế layout bằng thẻ table nh&eacute;.<br />\n&nbsp;</p>\n\n<h2>Từ 2012 - Float lật đổ Table</h2>\n\n<p>Khi layout table qu&aacute; bất cập th&igrave; giải ph&aacute;p thay thế tuyệt vời nhất trong giai đoạn n&agrave;y l&agrave; d&ugrave;ng c&aacute;c thẻ HTML&nbsp;<code>&lt;div&gt;</code>&nbsp;kết hợp với CSS property: Float.<br />\nC&aacute;c khối (<a href=\"http://namluu.com/frontend/kinh-nghiem-html/\">block</a>) sẽ được t&aacute;ch ra v&agrave; &quot;tr&ocirc;i&quot; qua tr&aacute;i, phải, t&ugrave;y theo &yacute; muốn của lập tr&igrave;nh vi&ecirc;n.</p>\n\n<p><br />\n<br />\n&nbsp;</p>\n\n<p><a href=\"http://namluu.com/wp-content/uploads/2018/01/stopdesign-float.jpg\"><img alt=\"\" src=\"http://namluu.com/wp-content/uploads/2018/01/stopdesign-float.jpg\" style=\"height:435px; width:500px\" /></a></p>\n\n<p><br />\n<br />\n<br />\n<strong>Ưu điểm</strong>: code sạch sẽ hơn khi d&ugrave;ng table, dễ thay đổi chỉnh sửa, linh hoạt tr&ecirc;n nhiều k&iacute;ch thước m&agrave;n h&igrave;nh.<br />\n<strong>Khuyết điểm</strong>: dễ bị &quot;vỡ trang&quot;, nếu lập tr&igrave;nh vi&ecirc;n chưa l&agrave;m chủ được float, chưa biết c&aacute;ch sử dụng c&aacute;c tuyệt chi&ecirc;u như: clear, overflow... Lạm dụng float tr&ecirc;n c&aacute;c bố cục phức tạp.<br />\n&nbsp;</p>\n\n<h2>2013 - thời của c&aacute;c CSS Frameworks</h2>\n\n<p>V&agrave;o giai đoạn n&agrave;y, c&aacute;c CSS Frameworks như&nbsp;<a href=\"https://getbootstrap.com/\">Bootstrap</a>,&nbsp;<a href=\"https://foundation.zurb.com/\">Foundation</a>,...<br />\nC&aacute;c thư viện n&agrave;y hỗ trợ rất đắc lực cho c&aacute;c lập tr&igrave;nh vi&ecirc;n, dễ sử dụng, dễ thiết kế bố cục, chỉ cần gắn c&aacute;c class ph&ugrave; hợp. B&ecirc;n cạnh đ&oacute; ch&uacute;ng c&ograve;n li&ecirc;n tục cập nhật v&agrave; cải tiến kh&ocirc;ng ngừng.<br />\nPhải n&oacute;i trong thời gian đ&oacute;, c&aacute;c CSS Frameworks nhất l&agrave; Bootstrap, trở th&agrave;nh 1 xu hướng tới mức khi đi phỏng vấn code web, chắc ăn thế n&agrave;o họ cũng hỏi bạn v&agrave;i c&acirc;u.<br />\nĐể d&ugrave;ng tốt Bootstrap, bạn phải học c&aacute;c kh&aacute;i niệm như Grid View System, học thuộc c&aacute;c class th&ocirc;ng dụng , tận dụng tối đa c&aacute;c chức năng c&oacute; sẵn, người giỏi nhất l&uacute;c n&agrave;y l&agrave; người code CSS, style &iacute;t nhất.<br />\nHạn chế của c&aacute;c CSS Framework n&agrave;y l&agrave; qu&aacute; kềnh c&agrave;ng nếu ta kh&ocirc;ng tận dụng hết chức năng (c&oacute; thể khắc phục bằng bản t&ugrave;y chỉnh).<br />\nN&acirc;ng cấp phi&ecirc;n bản cần sửa đổi lại t&ecirc;n c&aacute;c class (v2 x&agrave;i span1 - span12, v3 x&agrave;i col-, v4 x&agrave;i col- ).</p>\n\n<p><br />\n<br />\n&nbsp;</p>\n\n<p><a href=\"http://namluu.com/wp-content/uploads/2018/01/frontend-development-frameworks.jpg\"><img alt=\"\" src=\"http://namluu.com/wp-content/uploads/2018/01/frontend-development-frameworks.jpg\" style=\"width:760px\" /></a></p>\n\n<p><br />\n&nbsp;</p>\n\n<blockquote>Ng&agrave;y nay c&aacute;c CSS Frameworks như Bootstrap đ&atilde; ph&aacute;t triển hơn kh&aacute;i niệm CSS rất nhiều, ta n&ecirc;n gọi n&oacute; với t&ecirc;n&nbsp;<strong>front-end component library</strong>, v&igrave; n&oacute; c&ograve;n t&iacute;ch hợp nhiều thư viện JavaScript b&ecirc;n trong.&nbsp;<a href=\"https://usablica.github.io/front-end-frameworks/compare.html?v=2.0\">Số lượng c&aacute;c front-end libraries ng&agrave;y nay</a></blockquote>\n\n<p>&nbsp;</p>\n\n<h2>2015 - CSS3 v&agrave; Flexbox</h2>\n\n<p>CSS3 đ&atilde; hỗ trợ một c&ocirc;ng nghệ thiết kế layout mới, hiện đại hơn Float đ&oacute; ch&iacute;nh l&agrave; Flexbox. Đ&uacute;ng như t&ecirc;n gọi flexible (linh hoạt), n&oacute; thực sự rất mạnh.</p>\n\n<ul>\n\t<li>Flexbox sẽ gi&uacute;p bạn điều khiển được kh&ocirc;ng những chiều ngang (horizontal) m&agrave; c&ograve;n chiều dọc (vertical) điều m&agrave; CSS thường với position rất cứng nhắc.</li>\n\t<li>Flexbox c&oacute; thể điều khiển được c&aacute;c phần tử b&ecirc;n trong, gi&uacute;p bạn dễ d&agrave;ng biểu diễn nội dung v&agrave; bố cục tr&ecirc;n c&aacute;c thiết bị di động.\n\t<p><a href=\"http://namluu.com/wp-content/uploads/2018/01/fl-1024x687.jpg\"><img alt=\"Biên niên sử về bố cục trong trang web\" src=\"http://namluu.com/wp-content/uploads/2018/01/fl-1024x687.jpg\" style=\"height:687px; width:1024px\" /></a></p>\n\t<br />\n\t<strong>Khuyết điểm</strong>: flexbox mạnh v&agrave; mới n&ecirc;n bạn phải bỏ nhiều c&ocirc;ng sức để học v&agrave; l&agrave;m chủ được n&oacute;, kh&oacute; hơn so với d&ugrave;ng float v&agrave; Bootstrap.&nbsp;<a href=\"https://jakearchibald.com/2014/dont-use-flexbox-for-page-layout/\">Kh&ocirc;ng khuyến kh&iacute;ch d&ugrave;ng flexbox</a>&nbsp;để l&agrave;m bố cục to&agrave;n trang trừ trường hợp đặc biệt, chỉ d&ugrave;ng để bố cục c&aacute;c th&agrave;nh phần b&ecirc;n trong. L&yacute; do v&igrave; flexbox phụ thuộc v&agrave;o nội dung b&ecirc;n trong n&oacute;, n&ecirc;n khi b&agrave;i viết d&agrave;i ngắn c&oacute; thể l&agrave;m &quot;biến dạng&quot; bố cục website của bạn, chưa kể t&igrave;nh huống khi web load chưa kịp.</li>\n</ul>\n\n<blockquote>Kết hợp kh&ocirc;n ngoan l&agrave; d&ugrave;ng grid system để l&agrave;m bố cục b&ecirc;n ngo&agrave;i, những phần bố cục cần sự linh hoạt th&igrave; d&ugrave;ng flexbox. Bootstrap 4 đ&atilde; t&iacute;ch hợp flexbox v&agrave;o grid view của m&igrave;nh, chứng tỏ sức mạnh của flexbox v&agrave; kh&ocirc;ng thể b&agrave;n c&atilde;i, đồng thời cho thấy c&aacute;i tiện lợi khi d&ugrave;ng Bootstrap.</blockquote>\n\n<h2>2017 - CSS Grid</h2>\n\n<p>Grid v&agrave; 1 thuộc t&iacute;nh CSS rất mới, ra đời 3-2017. Tuy nhi&ecirc;n n&oacute; đ&atilde; v&agrave; đang được giới c&ocirc;ng nghệ web đặc biệt quan t&acirc;m v&igrave; những t&iacute;nh năng ưu việt.<br />\nNếu như Flexbox ph&acirc;n bố c&aacute;c phần tử theo 1 chiều duy nhất th&igrave; Grid cho ph&eacute;p bạn điểu khiển phần tử theo 2 chiều - ngang v&agrave; dọc.<br />\nV&igrave; đ&acirc;y l&agrave; 1 c&ocirc;ng nghệ mới, n&ecirc;n c&aacute;c&nbsp;<a href=\"https://medium.com/tag/grid-layout\">t&agrave;i liệu chất lượng</a>&nbsp;về n&oacute; hầu hết l&agrave; bằng tiếng anh, sắp tới m&igrave;nh sẽ c&oacute; b&agrave;i viết về c&ocirc;ng nghệ n&agrave;y, mới c&aacute;c bạn theo d&otilde;i.</p>\n\n<p><br />\n<br />\n&nbsp;</p>\n\n<p><a href=\"http://namluu.com/wp-content/uploads/2018/01/1_phV0oLsKV_qVjFVv5lY1vw.png\"><img alt=\"\" src=\"http://namluu.com/wp-content/uploads/2018/01/1_phV0oLsKV_qVjFVv5lY1vw.png\" style=\"width:699px\" /></a></p>\n\n<p>B&agrave;i viết từ nguồn&nbsp;<a href=\"http://namluu.com/frontend/bien-nien-su-ve-bo-cuc-trong-trang-web/\">blog c&aacute; nh&acirc;n</a><br />\nCảm ơn c&aacute;c bạn đ&atilde; đọc b&agrave;i.</p>\n",
      "category_id": 1,
      "total_views": 220,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "front end", "css3"
      ]
    },
    {
      "title": "Layout - Làm thế nào để lên khung layout, và hỗ trợ responsive",
      "content": "<h3>B&agrave;i to&aacute;n:</h3>\n\n<p>Tự học ReactJS bằng c&aacute;ch l&agrave;m one-page app đơn giản (<a href=\"https://github.com/ngminhtrung/react-draw-spirograph\">v&iacute; dụ</a>), vấn đề m&igrave;nh đau đầu nhất l&agrave; (1) l&ecirc;n layout, v&agrave; (2) l&agrave;m style cho app. Chưa đề cập đến vụ style, ri&ecirc;ng c&aacute;i layout chỉnh m&atilde;i m&agrave; c&aacute;c thẻ div, c&aacute;c element kh&ocirc;ng thẳng với nhau theo như bản mockup ban đầu. M&igrave;nh cũng từng đi 1 lượt c&aacute;c b&agrave;i tập&nbsp;<a href=\"https://www.w3schools.com/css/\">CSS của W3School</a>&nbsp;nhưng khi bảo tự l&agrave;m từ đầu 1 c&aacute;i cho bản th&acirc;n th&igrave; cảm thấy ngợp.</p>\n\n<p>C&aacute;i m&igrave;nh học tr&ecirc;n W3School chỉ như l&agrave; nh&igrave;n thấy c&acirc;y, m&agrave; kh&ocirc;ng nh&igrave;n thấy rừng. Được chỉ c&aacute;ch chỉnh từng phần tử con, nhưng kh&ocirc;ng được chỉ c&aacute;ch lắp gh&eacute;p c&aacute;c phần tử con th&agrave;nh một ng&ocirc;i nh&agrave; theo tưởng tượng.&nbsp;<em>M&igrave;nh muốn biết về c&aacute;ch l&agrave;m, về workflow, về c&aacute;ch tư duy khi đụng v&agrave;o layout một c&aacute;ch tổng thể, l&ecirc;n layout như thế n&agrave;o, sao bắt n&oacute; hỗ trợ responsive</em>. Vậy phải l&agrave;m thế n&agrave;o?</p>\n\n<h3>Giải quyết:</h3>\n\n<p>Khi hỏi cậu em, th&igrave; được chỉ 1 mẹo l&agrave;: &quot;<strong>H&atilde;y xử l&yacute; phần layout trước v&agrave; chỉ layout m&agrave; th&ocirc;i. T&ocirc; m&agrave;u cho từng v&ugrave;ng, kiểm tra xem c&oacute; v&ugrave;ng n&agrave;o đ&egrave; v&agrave;o nhau, padding, margin, border, k&iacute;ch thước chuẩn chưa, khi chuyển sang mobile view th&igrave; c&oacute; dịch chuyển như &yacute; m&igrave;nh muốn hay kh&ocirc;ng. Khi n&agrave;o ngon l&agrave;nh phần khung, th&igrave; mới bắt đầu đi v&agrave;o chi tiết</strong>&quot;. Lời khuy&ecirc;n n&agrave;y rất đ&uacute;ng, n&oacute; gi&uacute;p ta l&agrave;m đến đ&acirc;u gọn đến đấy, c&ocirc; lập từng v&ugrave;ng. Tr&aacute;nh việc phần khung chưa ổn, đ&atilde; đi v&agrave;o chi tiết, sau c&oacute; khi mất c&ocirc;ng đập hết đi l&agrave;m lại. Đ&acirc;y đ&uacute;ng l&agrave; 1 phần của workflow m&agrave; m&igrave;nh đang t&igrave;m. Tuy nhi&ecirc;n, n&oacute; vẫn chưa trả lời c&acirc;u hỏi l&agrave; l&agrave;m thế n&agrave;o để l&ecirc;n được layout.</p>\n\n<p>H&ocirc;m nay đọc được mục Responsive Web Design của Goolge tại&nbsp;<a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/\">đ&acirc;y</a>&nbsp;, thấy đ&oacute; l&agrave; c&acirc;u trả lời m&igrave;nh đang đi t&igrave;m.</p>\n\n<ul>\n\t<li>Họ giải th&iacute;ch tại sao cần d&ugrave;ng thẻ&nbsp;<code>meta</code>&nbsp;ngay đầu file&nbsp;<code>html</code>, mối quan hệ giữa DIP (Device Independent Pixels) với Hardware Pixels.</li>\n\t<li>Quan trọng hơn, họ n&oacute;i về tư duy &quot;start small&quot; v&agrave; 4 patterns để thiết kế layout.</li>\n</ul>\n\n<h3>Start small l&agrave; g&igrave;?</h3>\n\n<ul>\n\t<li>L&agrave; nghĩ v&agrave; thiết kế layout d&agrave;nh cho mobile ngay từ đầu, thay v&igrave; nghĩ đến n&oacute; như 1 trang sẽ hiển thị tr&ecirc;n m&agrave;n h&igrave;nh m&aacute;y t&iacute;nh.</li>\n\t<li>Việc ph&acirc;n bố layout l&agrave; phải để t&ocirc;n l&ecirc;n nội dung của website, chứ kh&ocirc;ng phải v&igrave; k&iacute;ch thước thiết bị.</li>\n\t<li>Sau đ&oacute;, mở rộng bề ngang tr&igrave;nh duyệt dần dần, từng cấp một. Tại mỗi cấp, nghĩ xem layout n&ecirc;n được bố tr&iacute; lại như thế n&agrave;o l&agrave; ph&ugrave; hợp với content v&agrave; user experience. Đặt break point cho cấp đ&oacute;.</li>\n</ul>\n\n<p>Ưu điểm của việc n&agrave;y qu&aacute; r&otilde; r&agrave;ng kh&ocirc;ng c&ograve;n g&igrave; phải b&agrave;n c&atilde;i. Trước đ&acirc;y m&igrave;nh to&agrave;n đi ngược, l&agrave;m hết sức để layout cho m&agrave;n h&igrave;nh rộng tr&ocirc;ng ưng ưng mắt. Nhưng sau đ&oacute; mới lại test xem responsive ra sao, c&oacute; khi hiện tr&ecirc;n mobile kh&ocirc;ng ngon, lại phải chỉnh lại từ đầu. M&agrave; cứ chỉnh đi chỉnh lại một c&aacute;ch m&ugrave; qu&aacute;ng.</p>\n\n<h3>Patterns để l&agrave;m layout l&agrave; g&igrave;?</h3>\n\n<p>Hầu hết c&aacute;c patterns đề sử dụng&nbsp;<code>flexbox</code>&nbsp;l&agrave;m c&ocirc;ng cụ ch&iacute;nh để thực hiện &yacute; đồ, bao gồm:</p>\n\n<h4>1. Mostly Fluid</h4>\n\n<p>Kh&ocirc;ng biết dịch l&agrave; g&igrave;. N&oacute; chỉ c&aacute;c khối trong layout cứ như c&aacute;c khối chất lỏng kh&aacute;c m&agrave;u chảy trong 1 đường ống. T&ugrave;y v&agrave;o độ rộng hẹp của đường ống hẹp th&igrave; c&aacute;c khối n&agrave;y xếp đ&egrave; l&ecirc;n nhau một c&aacute;ch tự nhi&ecirc;n.</p>\n\n<p>C&aacute;ch n&agrave;y ph&ugrave; hợp với người mới bắt đầu như m&igrave;nh. Ảnh minh họa lấy từ b&agrave;i của Google.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/mostly-fluid.svg\"><img alt=\"MostlyFluid\" src=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/mostly-fluid.svg\" /></a></p>\n\n<h4>2. Column drop</h4>\n\n<p>Chưa biết m&ocirc; tả c&aacute;ch n&agrave;y ntn.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/column-drop.svg\"><img alt=\"ColumnDrop\" src=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/column-drop.svg\" /></a></p>\n\n<h4>3. Layout shifter</h4>\n\n<p>C&aacute;ch n&agrave;y phải đảo component của layout (tr&aacute;i phải, tr&ecirc;n dưới) t&ugrave;y v&agrave;o từng cấp độ rộng của browser.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/column-drop.svg\"><img alt=\"LayoutShifter\" src=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/column-drop.svg\" /></a></p>\n\n<h4>4. Tiny tweaks</h4>\n\n<p>Chỉ c&oacute; v&agrave;i thay đổi nhỏ so với c&aacute;ch tr&ecirc;n</p>\n\n<h4>5. Off canvas</h4>\n\n<p>C&aacute;ch n&agrave;y d&ugrave;ng khi cần c&oacute; navigation bar đưa ra đưa v&agrave;o t&ugrave;y độ rộng của browser. C&aacute;ch n&agrave;y l&agrave; kh&oacute; nhất.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/off-canvas.svg\"><img alt=\"OffCanvas\" src=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/imgs/off-canvas.svg\" /></a></p>\n\n<h3>Kết luận</h3>\n\n<p>Vậy l&agrave; hướng đi step by step đ&atilde; c&oacute;, rất logic, m&agrave; vẫn c&oacute; t&iacute;nh &quot;nghệ thuật&quot;, đủ để người mới học v&agrave; l&agrave;m theo, c&oacute; được những layout đem lại behavior hợp l&yacute;.</p>\n\n<p>Với m&igrave;nh, việc layout đạt được t&iacute;nh responsive như &yacute; muốn l&agrave; một y&ecirc;u cầu tối thiểu khi l&agrave;m front-end, kể cả với người muốn chuy&ecirc;n về JavaScript. Style sao cho đẹp hơn, UX tốt hơn l&agrave; vấn đề kh&aacute;c, đ&ograve;i hỏi skill v&agrave; kiến thức kh&aacute;c.</p>\n",
      "category_id": 1,
      "total_views": 220,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "front end", "css3", "flex box"
      ]
    },
    {
      "title": "ReactJS - Form validation với một hoặc nhiều inputs",
      "content": "<h3>B&agrave;i to&aacute;n: Validate form</h3>\n\n<p>Bắt chước t&iacute;nh năng validate form như h&igrave;nh dưới (bắt chước theo thegioididong.com):</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/ge5iju4pp0_Peek-2018-04-21-10-42.gif\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/ge5iju4pp0_Peek-2018-04-21-10-42.gif\" /></a></p>\n\n<p><strong>Y&ecirc;u cầu</strong>:</p>\n\n<ol>\n\t<li>Chỉ cần kiểm tra xem số điện thoại nhập v&agrave;o c&oacute; bao gồm 10 đến 11 chữ số hay kh&ocirc;ng.</li>\n\t<li>Việc kiểm tra chỉ được thực hiện khi chuyển ra ngo&agrave;i v&ugrave;ng nhập điện thoại (v&iacute; dụ khi click chuột ra chỗ kh&aacute;c, hoặc tab chuyển sang v&ugrave;ng kh&aacute;c).</li>\n\t<li>Th&ocirc;ng b&aacute;o m&agrave;u đỏ &quot;<em>Số điện thoại phải c&oacute; 10 - 11 chữ số</em>&quot; hiện b&ecirc;n dưới khi c&oacute; lỗi, v&agrave; biến mất khi kh&ocirc;ng c&oacute; lỗi.</li>\n</ol>\n\n<p><strong>tldr;</strong>&nbsp;<strong>(D&agrave;i qu&aacute;, ứ đọc)</strong>:</p>\n\n<ul>\n\t<li>B&agrave;i viết th&iacute;ch hợp cho những người mới học ReactJS, muốn tham khảo về c&aacute;ch để validate cho 01 input, hoặc từ 02 input trở l&ecirc;n.</li>\n\t<li>Việc validate form sẽ gi&uacute;p đụng v&agrave;o c&aacute;c phần cơ bản của ReactJS cũng như JavaScript\n\t<ul>\n\t\t<li>component, props, v&agrave; state.</li>\n\t\t<li>render component theo điều kiện (xem mục&nbsp;<a href=\"https://reactjs.org/docs/conditional-rendering.html\">Conditional Rendering</a>)</li>\n\t\t<li>&ocirc;n lại phần HTML form event</li>\n\t\t<li>thử c&aacute;c c&aacute;ch để copy object, thay đổi object&nbsp;<code>state</code>&nbsp;ở những tầng nằm s&acirc;u th&ocirc;ng qua&nbsp;<code>setState()</code>&nbsp;cũng như c&uacute; ph&aacute;p xử l&yacute; object của ES6.</li>\n\t\t<li>&ocirc;n lại c&aacute;ch d&ugrave;ng regular expression để kiểm tra chuỗi đầu v&agrave;o t&ugrave;y theo y&ecirc;u cầu.</li>\n\t</ul>\n\t</li>\n\t<li>Việc hiển thị th&ocirc;ng b&aacute;o lỗi b&ecirc;n dưới input, kh&ocirc;ng chi 1 input, m&agrave; 2 hoặc nhiều hơn, sẽ cần thực h&agrave;nh về CSS layout (v&iacute; dụ float, flexbox, grid).</li>\n\t<li>Demo sản phẩm cuối ở&nbsp;<a href=\"https://ngminhtrung.github.io/react-form-shopping-cart/\">đ&acirc;y</a></li>\n</ul>\n\n<h3>Thực hiện: Validate 1 field &quot;phonenumber&quot;</h3>\n\n<p>Với 2 y&ecirc;u cầu tr&ecirc;n, hướng l&agrave;m chung l&agrave;:</p>\n\n<ul>\n\t<li>\n\t<p><strong>Y&ecirc;u cầu 1</strong>: Sử dụng regular expression để kiểm tra chuỗi. Tạo method&nbsp;<code>validateInput()</code>&nbsp;dựa v&agrave;o regular expression n&oacute;i tr&ecirc;n, nhận v&agrave;o l&agrave; string, trả về kết quả l&agrave; 1 object&nbsp;<code>{isInputValid: boolean, errorMessage: string}</code>.</p>\n\n\t<pre>\n<code>const validateInput = (checkingText) =&gt; {\n    /* reg exp để kiểm tra xem chuỗi c&oacute; chỉ bao gồm 10 - 11 chữ số hay kh&ocirc;ng */\n\n    const regexp = /^\\d{10,11}$/;\n    const checkingResult = regexp.exec(checkingText);\n    if (checkingResult !== null) {\n        return { isInputValid: true,\n                 errorMessage: &#39;&#39;};\n    } else {\n        return { isInputValid: false,\n                 errorMessage: &#39;Số điện thoại phải c&oacute; 10 - 11 chữ số.&#39;};\n    }\n}\n</code></pre>\n\t</li>\n\t<li>\n\t<p><strong>Y&ecirc;u cầu 2</strong>:</p>\n\n\t<ul>\n\t\t<li>Việc kiểm tra sẽ dựa v&agrave;o event handler&nbsp;<a href=\"https://www.w3schools.com/jsref/obj_focusevent.asp\">&quot;onBlur&quot; trong d&atilde;y FocusEvent Object</a>.</li>\n\t\t<li>Truyền h&agrave;m callback v&agrave;o event handler&nbsp;<code>onBlur</code>&nbsp;của&nbsp;<code>&lt;input&gt;</code>, callback n&agrave;y ch&iacute;nh l&agrave; method&nbsp;<code>validateInput</code>&nbsp;n&oacute;i tr&ecirc;n.</li>\n\t\t<li>H&agrave;m callback n&agrave;y sẽ nhận v&agrave;o value của input th&ocirc;ng qua&nbsp;<code>this.state.value</code>. State n&agrave;y l&agrave; của component cha chứa&nbsp;<code>&lt;input&gt;</code>.</li>\n\t\t<li>Để h&agrave;m callback lu&ocirc;n nhận value mới nhất của input, th&igrave; bản th&acirc;n input cũng phải c&oacute; event handler&nbsp;<code>onChange</code>, cập nhật li&ecirc;n tục input value v&agrave;o state (th&ocirc;ng qua&nbsp;<code>setState()</code>).</li>\n\t\t<li>Trong state, ngo&agrave;i thuộc t&iacute;nh&nbsp;<code>value</code>, c&ograve;n cần c&oacute; thuộc t&iacute;nh&nbsp;<code>isInputValid</code>, v&agrave;&nbsp;<code>errorMessage</code>&nbsp;để chứa kết quả trả về sau khi validate nội dung.</li>\n\t</ul>\n\n\t<pre>\n<code>&lt;!-- Setup component input v&agrave; FormError--&gt;\n&lt;input\n    name=&quot;fullname&quot;\n    onChange={this.handleInput}\n    onBlur={this.handleInputValidation} /&gt;\n</code></pre>\n\n\t<pre>\n<code>/* Tạo object state trong constructor của component cha chứa input */\n\n    this.state = { \n        value: &#39;&#39;,\n        isInputValid: true, \n        errorMessage: &#39;&#39;\n    }, \n</code></pre>\n\n\t<pre>\n<code>/* Tạo method handleInput để cập nhật gi&aacute; trị trong &ocirc; input v&agrave;o state */\nhandleInput = event =&gt; {\n    const { value } = event.target;\n    this.setState({value});\n}\n</code></pre>\n\n\t<pre>\n<code>/* Tạo method handleInputValidation để kiểm tra nội dung input, rồi cập nhật trạng th&aacute;i v&agrave;o state*/\n\nhandleInputValidation = event =&gt; {\n    const { isInputValid, errorMessage } = validateInput(this.state.value);\n    this.setState({\n        isInputValid: isInputValid,\n        errorMessage: errorMessage\n    })\n}\n</code></pre>\n\t</li>\n\t<li>\n\t<p><strong>Y&ecirc;u cầu 3</strong>: Tạo 1 component (dạng function)&nbsp;<code>&lt;FormError /&gt;</code>&nbsp;đặt b&ecirc;n dưới của&nbsp;<code>&lt;input&gt;</code>. Component&nbsp;<code>&lt;FormError /&gt;</code>&nbsp;sẽ nhận 2 props:</p>\n\n\t<ul>\n\t\t<li>Prop&nbsp;<code>isHidden</code>&nbsp;(g&aacute;n bằng&nbsp;<code>this.state.isInputValid</code>):\n\n\t\t<ul>\n\t\t\t<li>Nếu&nbsp;<code>isHidden = true</code>&nbsp;th&igrave; ẩn form đi.</li>\n\t\t\t<li>Nếu&nbsp;<code>isHidden = false</code>, th&igrave; hiện form ra.</li>\n\t\t</ul>\n\t\t</li>\n\t\t<li>Prop&nbsp;<code>errorMessage</code>&nbsp;(g&aacute;n bằng&nbsp;<code>this.state.errorMessage</code>). Nội dung trong form l&agrave; của&nbsp;<code>props.errorMessage</code>.</li>\n\t</ul>\n\n\t<pre>\n<code>&lt;!-- setup component input v&agrave; FormError--&gt;\n&lt;input ... /&gt;\n&lt;FormError \n    isHidden={this.state.isInputValid} \n    errorMessage={this.state.errorMessage} /&gt;\n</code></pre>\n\n\t<pre>\n<code>function FormError(props) {\n    /* nếu isHidden = true, return null ngay từ đầu */\n    if (props.isHidden) { return null;}\n\n    return ( &lt;div&gt;{props.errorMessage}&lt;/div&gt;)\n}\n</code></pre>\n\t</li>\n</ul>\n\n<p>Sample code xem tại đ&acirc;y:</p>\n\n<p>&nbsp;</p>\n\n<p>See the Pen</p>\n\n<p><iframe frameborder=\"no\" src=\"https://codepen.io/ngminhtrung/embed/odXXzo/?height=500\"></iframe></p>\n\n<p>&nbsp;</p>\n\n<h3>Nếu cần validate từ 2 input trở l&ecirc;n?</h3>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/ax9799mksj_Peek.gif\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/ax9799mksj_Peek.gif\" /></a></p>\n\n<p>Nếu muốn validate kh&ocirc;ng những&nbsp;<em>phonenumber</em>&nbsp;m&agrave; cả&nbsp;<em>fullname</em>&nbsp;(Họ v&agrave; t&ecirc;n kh&ocirc;ng được c&oacute; k&yacute; tự số), hoặc nhiều input nữa trong 1 cụm? Về logic vẫn l&agrave;m theo c&aacute;ch tr&ecirc;n, nhưng ch&uacute; &yacute; th&ecirc;m về:</p>\n\n<ol>\n\t<li>\n\t<p>Setup html, 2&nbsp;<code>&lt;input&gt;</code>&nbsp;với attribute&nbsp;<code>name</code>&nbsp;r&otilde; r&agrave;ng, k&egrave;m theo 2 component&nbsp;<code>&lt;FormError /&gt;</code>:</p>\n\n\t<pre>\n<code>&lt;!-- Setup component input v&agrave; FormError--&gt;\n&lt;input\n    name=&quot;fullname&quot;\n    onChange={this.handleInput}\n    onBlur={this.handleInputValidation} /&gt;\n&lt;FormError\n    type=&quot;fullname&quot;\n    isHidden={this.state.fullname.isInputValid} \n    errorMessage={this.state.fullname.errorMessage} /&gt;\n&lt;input\n    name=&quot;phonenumber&quot;\n    onChange={this.handleInput}\n    onBlur={this.handleInputValidation} /&gt;\n&lt;FormError\n    type=&quot;fullname&quot;\n    isHidden={this.state.fullname.isInputValid} \n    errorMessage={this.state.fullname.errorMessage} /&gt;\n</code></pre>\n\t</li>\n\t<li>\n\t<p>Cấu tr&uacute;c lại object&nbsp;<code>state</code>&nbsp;để việc&nbsp;<code>setState()</code>&nbsp;cho những tầng s&acirc;u b&ecirc;n dưới của object&nbsp;<code>state</code>&nbsp;được thuận lợi.</p>\n\n\t<p>L&uacute;c đầu m&igrave;nh đặt object&nbsp;<code>state</code>&nbsp;kh&aacute; lủng củng, n&ecirc;n kh&ocirc;ng sao truyền được gi&aacute; trị mới cho những thuộc t&iacute;nh m&igrave;nh cần. C&aacute;ch tạo object đề nghị cho phần n&agrave;y:</p>\n\n\t<pre>\n<code>/* Tạo object state trong constructor của component cha chứa input */\n\n    this.state = { \n            phonenumber: {\n                value: &#39;&#39;,\n                isInputValid: true, \n                errorMessage: &#39;&#39;\n            },\n            fullname: {\n                value : &#39;&#39;,\n                isInputValid: true, \n                errorMessage: &#39;&#39;\n            }\n        }\n    }, \n</code></pre>\n\t</li>\n\t<li>\n\t<p>H&agrave;m&nbsp;<code>validateInput</code>&nbsp;sẽ phải viết lại, bổ sung th&ecirc;m việc kiểm tra&nbsp;<code>type</code>&nbsp;(l&agrave;&nbsp;<em>phonenumber</em>&nbsp;hay&nbsp;<em>fullname</em>), v&agrave; th&ecirc;m regular expression để kiểm tra ri&ecirc;ng cho&nbsp;<em>fullname</em>).</p>\n\n\t<pre>\n<code>const validateInput = (type, checkingText) =&gt; {\n    if (type === &quot;phonenumber&quot;) {\n        /* Kiểm tra phonenumber */\n    }\n\n    if (type === &quot;fullname&quot;) {\n        /* Kiểm tra fullname */\n    }\n}\n</code></pre>\n\t</li>\n\t<li>\n\t<p>Sau c&ugrave;ng, điều chỉnh&nbsp;<code>handleInput</code>&nbsp;v&agrave;&nbsp;<code>handleInputValidation</code>&nbsp;để c&oacute; thể setState một c&aacute;ch tổng quan, kh&ocirc;ng phải quan t&acirc;m đến&nbsp;<code>name</code>&nbsp;của từng&nbsp;<code>&lt;input&gt;</code>. Đoạn n&agrave;y m&igrave;nh google theo keyworld &quot;<strong>ReactJS setstate deeply nested</strong>&quot;. Những b&agrave;i như&nbsp;<a href=\"https://stackoverflow.com/questions/43040721/how-to-update-a-nested-state-in-react\">How to update a nested state in React</a>, hay b&agrave;i&nbsp;<a href=\"https://stackoverflow.com/questions/18933985/this-setstate-isnt-merging-states-as-i-would-expect\">this.setState isn&#39;t merging states as I would expect</a><br />\n\t, c&oacute; n&oacute;i đến c&aacute;c phương ph&aacute;p như:</p>\n\n\t<ul>\n\t\t<li>D&ugrave;ng&nbsp;<code>react-addon-update</code></li>\n\t\t<li>D&ugrave;ng library&nbsp;<code>immutability-helper</code></li>\n\t\t<li>D&ugrave;ng h&agrave;m&nbsp;<code>_merge()</code>&nbsp;trong thư viện&nbsp;<code>lodash</code>.</li>\n\t\t<li>D&ugrave;ng&nbsp;<code>Object.assign({}, .....)</code></li>\n\t</ul>\n\n\t<p>Sau c&ugrave;ng, quyết định:</p>\n\n\t<ul>\n\t\t<li>tạo th&ecirc;m 1 dummy object,</li>\n\t\t<li>sử dụng spread operator</li>\n\t</ul>\n\n\t<p>để copy (shallow copy) state v&agrave;o dummy object, sau đ&oacute; truyền ngược trở lại v&agrave;o state như tham khảo ở 1 c&acirc;u&nbsp;<a href=\"https://stackoverflow.com/questions/43040721/how-to-update-a-nested-state-in-react?answertab=votes#tab-top\">trả lời</a>.</p>\n\n\t<pre>\n<code>\nhandleInput = event =&gt; {\n    const { name, value } = event.target;\n    const newState = {...this.state[name]}; /* dummy object */\n    newState.value = value;\n    this.setState({[name]: newState});\n}\n\nhandleInputValidation = event =&gt; {\n    const { name } = event.target;\n    const { isInputValid, errorMessage } = validateInput(name, this.state[name].value);\n    const newState = {...this.state[name]}; /* dummy object */\n    newState.isInputValid = isInputValid;\n    newState.errorMessage = errorMessage;\n    this.setState({[name]: newState})\n}\n</code></pre>\n\t</li>\n\t<li>\n\t<p>Vấn đề styling cần phải t&ugrave;y chỉnh t&ugrave;y theo nhu cầu.</p>\n\t</li>\n</ol>\n\n<h3>Kết luận</h3>\n\n<ul>\n\t<li>Vẫn cần t&igrave;m hiểu c&aacute;c &quot;best practices&quot; vụ form validation để so s&aacute;nh với c&aacute;ch l&agrave;m tr&ecirc;n. Về mặt l&yacute; thuyết, c&aacute;ch l&agrave;m tr&ecirc;n tương đối ch&acirc;n phương, kh&ocirc;ng c&oacute; g&igrave; đặc sắc.</li>\n\t<li>B&agrave;i&nbsp;<a href=\"https://learnetto.com/blog/how-to-do-simple-form-validation-in-reactjs\">How to do Simple Form Validation in #Reactjs</a>&nbsp;hoặc bản dịch (ẩu) sang tiếng Việt &quot;<a href=\"https://viblo.asia/p/simple-form-validation-in-reactjs-1VgZvxoM5Aw\">Simple Form Validation in Reactjs</a>&quot; cũng tr&igrave;nh b&agrave;y c&aacute;ch validate 2 inputs c&ugrave;ng 1 l&uacute;c. Nhưng họ tận dụng ngay event handler &quot;onChange&quot;, đặt callback b&ecirc;n trong callback của ongChange. Việc n&agrave;y khiến cho qu&aacute; tr&igrave;nh validation l&uacute;c n&agrave;o cũng phải thực hiện khi c&oacute; bất kỳ thay đổi của input. Hơn nữa, việc sắp xếp object&nbsp;<code>state</code>&nbsp;cũng kh&ocirc;ng khoa học.</li>\n\t<li>Tham khảo sau n&agrave;y b&agrave;i&nbsp;<a href=\"https://levelup.gitconnected.com/how-exactly-does-react-handles-events-71e8b5e359f2\">The React and React Native Event System Explained: A Harmonious Coexistence</a>&nbsp;trong đ&oacute; t&aacute;c giả tr&igrave;nh t&igrave;m hiểu source code của React, rồi tr&igrave;nh b&agrave;y cơ chế m&agrave; ReactJS d&ugrave;ng để xử l&yacute; c&aacute;c events.</li>\n</ul>\n\n<h3>Cập nhật</h3>\n\n<p>Theo g&oacute;p &yacute; của Mr. Nguyễn B&igrave;nh, group Pure React, những phần sau c&oacute; thể cải tiến:</p>\n\n<ol>\n\t<li>\n\t<p>Validation m&igrave;nh sẽ đẩy xuống đến level của input: tạo một component bao gồm cả input v&agrave; FormError, sau đ&oacute; truyền c&aacute;c validator v&agrave;o. Component n&agrave;y tự xử l&yacute; vấn đề validate của ch&iacute;nh n&oacute;.</p>\n\n\t<p>Phản hồi: Chuẩn. Phần component sẽ viết th&agrave;nh&nbsp;<code>&lt;FormInput&gt;</code>&nbsp;kiểu mới như sau. Tr&ocirc;ng code của component cha chứa&nbsp;<code>&lt;FormInput&gt;</code>&nbsp;sẽ gọn g&agrave;ng sạch sẽ hơn nhiều. Chưa kể phần xử l&yacute; layout sẽ gọn hơn, bởi mảng n&agrave;o đi mảng đấy. Nếu t&aacute;ch ri&ecirc;ng&nbsp;<code>&lt;input&gt;</code>&nbsp;v&agrave;&nbsp;<code>&lt;FormError&gt;</code>&nbsp;ngay từ b&ecirc;n ngo&agrave;i, th&igrave; xử l&yacute; responsive layout ri&ecirc;ng cho&nbsp;<code>&lt;FormError&gt;</code>&nbsp;hơi mệt.</p>\n\n\t<pre>\n<code>    &lt;!-- Kiểu cũ --&gt;\n    &lt;input ... /&gt;\n    &lt;FormError \n        isHidden={this.state.isInputValid} \n        errorMessage={this.state.errorMessage} /&gt;\n\n    &lt;!-- Viết lại th&agrave;nh --&gt;\n    &lt;FormInput name=&quot;phonenumber&quot; /&gt;\n</code></pre>\n\t</li>\n\t<li>\n\t<p>isInputValid bản chất nội suy từ errorMessage, kh&ocirc;ng cần thiết trong trường hợp n&agrave;y.</p>\n\n\t<p>Phản hồi: Chuẩn.&nbsp;<code>isInputValid</code>&nbsp;c&oacute; thể nội suy từ&nbsp;<code>length</code>&nbsp;của&nbsp;<code>errorMessage</code>.</p>\n\n\t<pre>\n<code>const isInputValid = (errorMessage.length &gt; 0) ? false : true; \n</code></pre>\n\t</li>\n\t<li>\n\t<p>bạn n&ecirc;n bắt một l&uacute;c nhiều validation cho một trường. V&iacute; dụ trường email vừa l&agrave; required, vừa l&agrave; email format. khi hiện ra nhiều validation c&ugrave;ng l&uacute;c sẽ gi&uacute;p UX tuyệt hơn (v&igrave; họ biết hết c&aacute;c validate họ gặp phải m&agrave; ko phải solve one by one).</p>\n\n\t<p>Phản hồi: Chuẩn.</p>\n\t</li>\n\t<li>\n\t<p>d&ugrave;ng HOF để validate cũng l&agrave; một điều kh&ocirc;ng tồi :D</p>\n\n\t<p>Phản hồi: Phải đọc th&ecirc;m HOF.</p>\n\t</li>\n</ol>\n\n<p>B&agrave;i viết được đăng tr&ecirc;n blog của t&aacute;c giả tại&nbsp;<a href=\"https://travisnguyen.net/ReactJS/2018/04/21/form-validation-multiple-inputs/\">đ&acirc;y</a></p>\n",
      "category_id": 1,
      "total_views": 440,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "reactjs", "validation", "front end"
      ]
    },
    {
      "title": "Đóng gói và triển khai ứng dụng Nodejs bằng Docker",
      "content": "<p><a href=\"https://blog.duyetdev.com/2015/12/docker-la-gi-co-ban-ve-docker.html#.VyYMd4N94_M\">Docker ra đời</a>&nbsp;cho giải ph&aacute;p đ&oacute;ng g&oacute;i, vận chuyển v&agrave; triển khai ứng dụng hết sức nhanh ch&oacute;ng v&agrave; đơn giản. Với Docker, c&aacute;c th&agrave;nh vi&ecirc;n trong team (cũng như với người muốn trải nghiệm thử project) sẽ triển khai ngay được m&ocirc;i trường ứng dụng m&agrave; kh&ocirc;ng phải mất nhiều thời gian, c&ocirc;ng việc của SysAdmin cũng nhẹ nh&agrave;ng hơn.</p>\n\n<p>Sau m&igrave;nh sẽ hướng dẫn c&aacute;ch đ&oacute;ng g&oacute;i build image docker cho ứng dụng Nodejs một c&aacute;ch cơ bản nhất.</p>\n\n<p>B&agrave;i viết được viết tại blog của m&igrave;nh, gửi qua đ&acirc;y để mọi người c&ugrave;ng biết:<br />\n<a href=\"https://blog.duyetdev.com/2016/05/dockerizing-nodejs.html#.Vyh96oN94_M\">Đ&oacute;ng g&oacute;i v&agrave; triển khai ứng dụng Nodejs bằng Docker</a></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/1-_MtS4HqN2srTcrSyet61DQ.jpeg_9m4awzzsek\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/1-_MtS4HqN2srTcrSyet61DQ.jpeg_9m4awzzsek\" /></a></p>\n\n<p><br />\n(Ảnh: Airpair)</p>\n\n<h1>C&agrave;i đặt Docker</h1>\n\n<p>M&igrave;nh sử dụng Ubuntu, xem c&aacute;ch c&agrave;i Docker tr&ecirc;n Ubuntu (<a href=\"https://blog.duyetdev.com/2016/05/cai-dat-docker-tren-ubuntu.html\">https://blog.duyetdev.com/2016/05/cai-dat-docker-tren-ubuntu.html</a>) . Với c&aacute;c nền tảng kh&aacute;c, xem tại trang Guide tại trang chủ Docker (<a href=\"https://docs.docker.com/engine/installation/\">https://docs.docker.com/engine/installation/</a>).</p>\n\n<h1>Chuẩn bị ứng dụng cần đ&oacute;ng g&oacute;i</h1>\n\n<p>Bạn chuẩn bị ứng dụng Nodejs cần đ&oacute;ng g&oacute;i v&agrave; triển khai. Ở đ&acirc;y m&igrave;nh sẽ sử dụng&nbsp;<a href=\"https://github.com/saveto-co/saveto\">source</a>&nbsp;của trang&nbsp;<a href=\"https://saveto.co/\">https://saveto.co</a>&nbsp;viết bằng Koajs l&agrave;m v&iacute; dụ. M&atilde; nguồn tải về ở đ&acirc;y:&nbsp;<a href=\"https://github.com/saveto-co/saveto\">https://github.com/saveto-co/saveto</a></p>\n\n<p>Mỗi ứng dụng viết bằng Nodejs bắt buộc đều phải c&oacute;&nbsp;<code>package.json</code>, lưu th&ocirc;ng tin về c&aacute;c g&oacute;i cần thiết, nhiều th&ocirc;ng tin kh&aacute;c về t&ecirc;n, phi&ecirc;n bản, ...</p>\n\n<pre>\n<code>{\n  &quot;name&quot;: &quot;quick-koa&quot;,\n  &quot;version&quot;: &quot;1.0.0&quot;,\n  &quot;description&quot;: &quot;Quick by Koa&quot;,\n  &quot;main&quot;: &quot;app.js&quot;,\n  &quot;scripts&quot;: {\n    &quot;start&quot;: &quot;node app.js&quot;\n  },\n  &quot;keywords&quot;: [\n    &quot;Quick&quot;,\n    &quot;shorten&quot;,\n    &quot;link&quot;,\n    &quot;jslab&quot;,\n    &quot;duyetdev&quot;\n  ],\n  &quot;homepage&quot;: &quot;http://saveto.co&quot;,\n  &quot;repository&quot;: &quot;git://github.com/duyetdev/quick.git&quot;,\n  &quot;author&quot;: &quot;Van-Duyet Le &lt;me@duyetdev.com&gt;&quot;,\n  &quot;license&quot;: &quot;MIT&quot;,\n  &quot;dependencies&quot;: {\n    &quot;bcrypt-nodejs&quot;: &quot;0.0.3&quot;,\n    &quot;co&quot;: &quot;^4.6.0&quot;,\n    ...\n    &quot;validator&quot;: &quot;^4.8.0&quot;\n  },\n  &quot;devDependencies&quot;: {\n    &quot;nodemon&quot;: &quot;^1.8.1&quot;\n  }\n}\n</code></pre>\n\n<p><a href=\"https://saveto.co/\">saveto.co</a>&nbsp;c&ograve;n c&oacute; th&ecirc;m&nbsp;<code>bower.json</code>&nbsp;m&ocirc; tả những thư viện frontend n&agrave;o sẽ được sử dụng.</p>\n\n<h1>Tạo Dockerfile</h1>\n\n<p><code>Dockerfile</code>&nbsp;sẽ m&ocirc; tả c&aacute;c bước để Docker build ảnh của ứng dụng, gồm c&aacute;c layer n&agrave;o.</p>\n\n<pre>\n<code>touch Dockerfile\n</code></pre>\n\n<p>Mở file Dockerfile bằng Editor. Đầu ti&ecirc;n, cần định nghĩa ứng dụng sẽ build tr&ecirc;n image n&agrave;o. Do saveto.co y&ecirc;u cầu&nbsp;<strong>Nodejs &gt;= v4.0</strong>, m&igrave;nh sẽ sử dụng bản&nbsp;<strong>Nodejs 5.11</strong>&nbsp;ổn định. Danh s&aacute;ch c&aacute;c image Nodejs c&oacute;&nbsp;<a href=\"https://hub.docker.com/_/node/\">tại đ&acirc;y</a>.</p>\n\n<pre>\n<code>FROM node:5.11\n</code></pre>\n\n<p>Maintainer m&ocirc; tả về người build docker image</p>\n\n<pre>\n<code>MAINTAINER Van-Duyet Le &lt;me@duyetdev.com&gt;\n</code></pre>\n\n<p>Kế tiếp, ta tạo thư mục chứa source code trong Docker container:</p>\n\n<pre>\n<code># Create app directory\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n</code></pre>\n\n<p>Docker Image gốc l&agrave; Nodejs n&ecirc;n sẽ c&oacute; sẵn NPM, tiếp m&igrave;nh sẽ copy&nbsp;<code>package.json</code>&nbsp;v&agrave;o v&agrave; c&agrave;i đặt c&aacute;c package ứng dụng y&ecirc;u cầu:</p>\n\n<pre>\n<code># Install app dependencies\nCOPY package.json /usr/src/app/\nRUN npm install\n</code></pre>\n\n<p>Sử dụng&nbsp;<code>COPY</code>&nbsp;để đưa hết source code v&agrave;o container:</p>\n\n<pre>\n<code># Bundle app source\nCOPY . /usr/src/app\n</code></pre>\n\n<p>C&agrave;i th&ecirc;m&nbsp;<code>Bower</code>&nbsp;v&agrave; chạy Bower để c&agrave;i c&aacute;c thư viện frontend</p>\n\n<pre>\n<code># Install and run Bower\nRUN npm install -g bower\nRUN bower install\n</code></pre>\n\n<p><a href=\"https://saveto.co/\">saveto.co</a>&nbsp;mặc định chạy ở port&nbsp;<code>6969</code>, sử dụng&nbsp;<code>EXPOSE</code>&nbsp;để mở&nbsp;<strong>PORT 6969</strong>&nbsp;tr&ecirc;n Container, thay&nbsp;<code>6969</code>&nbsp;bằng port ứng dụng của bạn:</p>\n\n<pre>\n<code>EXPOSE 6969\n</code></pre>\n\n<p>Cuối c&ugrave;ng quan trọng nhất l&agrave; lệnh để khởi động ứng dụng Nodejs, lệnh&nbsp;<code>CMD</code>&nbsp;sẽ chạy&nbsp;<code>npm start</code>, cũng như start&nbsp;<code>node app.js</code>&nbsp;được định nghĩa trong package.json</p>\n\n<pre>\n<code>CMD [ &quot;npm&quot;, &quot;start&quot; ]\n</code></pre>\n\n<p>Cuối c&ugrave;ng được&nbsp;<code>Dockerfile</code>&nbsp;ho&agrave;n chỉnh như thế n&agrave;y:</p>\n\n<pre>\n<code>FROM node:5.11\n\nMAINTAINER Van-Duyet Le &lt;me@duyetdev.com&gt;\n\n# Create app directory\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n# Install NPM\nCOPY package.json /usr/src/app/\nRUN npm install\n\n# Bundle app source\nCOPY . /usr/src/app\n\n# Install and run Bower\nRUN npm install -g bower\nRUN bower install\n\nEXPOSE 6969\n\nCMD [&quot;npm&quot;,&quot;start&quot;]\n</code></pre>\n\n<h1>Build image</h1>\n\n<p>Cd đến thư mục chứa&nbsp;<code>Dockerfile</code>, chạy lệnh b&ecirc;n dưới để build image.&nbsp;<code>--tag</code>&nbsp;d&ugrave;ng để đặt t&ecirc;n cho ảnh dễ nhớ, nhớ đừng bỏ x&oacute;t dấu chấm ở cuối</p>\n\n<pre>\n<code>$ docker build -t duyetdev/saveto .\n</code></pre>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://4.bp.blogspot.com/-jD52kEZB4-8/VyYuFInnraI/AAAAAAAAUZ0/-c21J642VJoPF0pHN44nNf1owMfg7F1rACLcB/s1600/Screenshot%2Bfrom%2B2016-05-01%2B23-25-04.png\"><img alt=\"\" src=\"https://4.bp.blogspot.com/-jD52kEZB4-8/VyYuFInnraI/AAAAAAAAUZ0/-c21J642VJoPF0pHN44nNf1owMfg7F1rACLcB/s1600/Screenshot%2Bfrom%2B2016-05-01%2B23-25-04.png\" /></a></p>\n\n<p>Sau khi build th&agrave;nh c&ocirc;ng, xem lại danh s&aacute;ch Docker image bằng:</p>\n\n<pre>\n<code>root@duyetdev:~/saveto# docker images \n\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nnode                               5.11                8593e962b570        9 days ago          644.3 MB\nduyetdev/saveto                    latest              5e8c25e32c8b        5 minutes ago       1.067 GB\n</code></pre>\n\n<h1>Run the image</h1>\n\n<p>Run docker image với t&ugrave;y chọn&nbsp;<code>-d</code>&nbsp;sẽ chạy container dưới background, t&ugrave;y chọn&nbsp;<code>-p</code>&nbsp;sẽ mapping&nbsp;<code>port</code>&nbsp;của&nbsp;<strong>m&aacute;y thật</strong>&nbsp;(public) với port của&nbsp;<strong>container</strong>&nbsp;(private)</p>\n\n<pre>\n<code>root@duyetdev:~/saveto# docker run -p 6969:6969 -d duyetdev/saveto\n62cd21863c2fce3a1e9076d07c68fb32c0172d37c5fb9f2ea536a16a12fa527b\n</code></pre>\n\n<p><code>62cd21863c2fce3a1e9076d07c68fb32c0172d37c5fb9f2ea536a16a12fa527b</code>&nbsp;l&agrave; ID của container.<br />\nXem danh s&aacute;ch c&aacute;c container v&agrave; log đang chạy:</p>\n\n<pre>\n<code># Get container ID\n$ docker ps\n\n# Print app output\n$ docker logs &lt;container id&gt;\n</code></pre>\n\n<p>Nếu cần truy cập v&agrave;o container đang chạy, sử dụng:</p>\n\n<pre>\n<code># Enter the container\n$ docker exec -it &lt;container id&gt; /bin/bash\n</code></pre>\n\n<p>Test: truy cập thử ứng dụng bằng tr&igrave;nh duyệt:&nbsp;<a href=\"http://localhost:6969/\">http://localhost:6969</a></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://4.bp.blogspot.com/-lBI9EPH-ck4/VyYy72_trTI/AAAAAAAAUaM/O8qnBPlgyv4oWGDEqs2O5zXiE6aRIfmHwCLcB/s1600/Screenshot%2Bfrom%2B2016-05-01%2B23-45-24.png\"><img alt=\"\" src=\"https://4.bp.blogspot.com/-lBI9EPH-ck4/VyYy72_trTI/AAAAAAAAUaM/O8qnBPlgyv4oWGDEqs2O5zXiE6aRIfmHwCLcB/s1600/Screenshot%2Bfrom%2B2016-05-01%2B23-45-24.png\" /></a></p>\n\n<p>Ch&uacute;c bạn th&agrave;nh c&ocirc;ng.</p>\n\n<h1>Tham khảo</h1>\n\n<ul>\n\t<li><a href=\"https://blog.duyetdev.com/2016/05/dockerizing-nodejs.html#.Vyh96oN94_M\">Đ&oacute;ng g&oacute;i v&agrave; triển khai ứng dụng Nodejs bằng Docker.</a></li>\n\t<li><a href=\"https://nodejs.org/en/docs/guides/nodejs-docker-webapp/\">Dockerizing a Node.js web app.</a></li>\n\t<li><a href=\"https://blog.duyetdev.com/2015/12/docker-la-gi-co-ban-ve-docker.html#.VyYMd4N94_M\">Docker l&agrave; g&igrave;? Cơ bản về Docker.</a></li>\n\t<li><a href=\"http://blog.duyetdev.com/2016/05/cai-dat-docker-tren-ubuntu.html\">C&agrave;i đặt Docker tr&ecirc;n Ubuntu.</a></li>\n</ul>\n\n<p>&nbsp;</p>\n",
      "category_id": 1,
      "total_views": 444,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "server", "docker"
      ]
    },
    {
      "title": "Module trong NodeJS - viết một lần thôi",
      "content": "<p>&nbsp;</p>\n\n<p>Như những b&agrave;i viết kh&aacute;c của m&igrave;nh, trước khi bắt tay v&agrave;o, m&igrave;nh đ&atilde; t&igrave;m kiếm tr&ecirc;n kipalog v&agrave; kh&ocirc;ng thấy b&agrave;i viết n&agrave;o n&oacute;i về vấn đề n&agrave;y. Trọng t&acirc;m của b&agrave;i viết n&agrave;y l&agrave; c&aacute;ch&nbsp;<strong>l&agrave;m sao viết một module chạy được tr&ecirc;n cả client lẫn server với nodejs</strong>, v&agrave; b&agrave;i viết n&agrave;y chỉ ph&ugrave; hợp cho những ai mới l&agrave;m quen nodejs như m&igrave;nh :)</p>\n\n<h2>Ứng dụng thực tế</h2>\n\n<p>M&igrave;nh lu&ocirc;n đặt c&acirc;u hỏi n&agrave;y đầu ti&ecirc;n. Ứng dụng của c&aacute;ch l&agrave;m n&agrave;y đ&oacute; ch&iacute;nh l&agrave; tận dụng, khỏi viết đi viết lại những đoạn code giống nhau, đơn giản vậy th&ocirc;i. Chắc c&aacute;c bạn đ&atilde; quen với việc validate form người d&ugrave;ng nhập, ở cả server lẫn client. Nếu như server v&agrave; client d&ugrave;ng hai ng&ocirc;n ngữ kh&aacute;c nhau, chẳng hạn PHP v&agrave; javascript, bạn sẽ phải viết đi viết lại (&iacute;t nhất l&agrave; 2 lần) để kiểm tra những gi&aacute; trị của người d&ugrave;ng nhập v&agrave;o. Kh&ocirc;ng phải b&agrave;n c&atilde;i về sự phiền phức khi thay đổi điều kiện validate. V&agrave; ở đ&acirc;y, nếu ch&uacute;ng ta d&ugrave;ng nodejs ở ph&iacute;a server, th&igrave; c&oacute; c&aacute;ch để chỉ viết một lần th&ocirc;i, v&igrave; cả hai ph&iacute;a đều l&agrave; ng&ocirc;n ngữ javascript cả m&agrave; :))</p>\n\n<p>Giả sử như bạn đ&atilde; biết c&aacute;ch tạo module trong nodejs, ch&uacute;ng ta sử dụng h&agrave;m&nbsp;<em>require</em>&nbsp;v&agrave;&nbsp;<em>module.exports</em>&nbsp;để import một module v&agrave; xuất một module. V&iacute; dụ một module kiểm tra gi&aacute; trị form người d&ugrave;ng nhập v&agrave;o, đoạn code n&agrave;y nằm trong file bar.js:</p>\n\n<pre>\n<code>//bar.js\nvar bar = {};\n\n//Others variables and functions\n\nmodule.exports = bar;\n</code></pre>\n\n<p>Thật l&agrave; tuyệt vời nếu như ch&uacute;ng ta c&oacute; thể đơn giản ch&egrave;n file bar.js v&agrave;o tr&igrave;nh duyệt như những file js kh&aacute;c, đồng nghĩa với việc bạn muốn sử dụng những đoạn code nằm trong chỗ&nbsp;<em>Others variables and functions</em>&nbsp;ở chỗ xử l&yacute; sự kiện n&uacute;t submit chẳng hạn (dĩ nhi&ecirc;n kh&ocirc;ng phải l&agrave; copy paste lại). Tuy nhi&ecirc;n, mọi thứ kh&ocirc;ng tươi đẹp như vậy, tr&igrave;nh duyệt sẽ kh&ocirc;ng thể hiểu được&nbsp;<em>require</em>&nbsp;l&agrave; h&agrave;m ở đ&acirc;u ra v&agrave;&nbsp;<em>module.exports</em>&nbsp;cũng thế v&agrave; sẽ b&aacute;o lỗi undefined, v&acirc;ng, lỗi kinh điển của javascript. Dĩ nhi&ecirc;n về ph&iacute;a server, n&oacute; hiểu v&igrave; nodejs n&oacute; hỗ trợ hai c&aacute;i n&agrave;y. Nếu vậy,&nbsp;<strong>cốt l&otilde;i ở đ&acirc;y ch&iacute;nh l&agrave;, hiện tại tr&igrave;nh duyệt chưa hỗ trợ h&agrave;m require v&agrave; module, cũng như module.exports</strong>.</p>\n\n<p>Kh&ocirc;ng lẽ anh em dev ch&uacute;ng ta b&oacute; tay chỉ v&igrave; một l&yacute; do như thế? Dĩ nhi&ecirc;n l&agrave; kh&ocirc;ng, v&agrave; đ&acirc;y l&agrave; giải ph&aacute;p, rất dễ, đ&oacute; ch&iacute;nh l&agrave; x&agrave;i if else, nếu như l&agrave; ở tr&igrave;nh duyệt th&igrave; gắn v&agrave;o một biến global, v&iacute; dụ&nbsp;<em>window</em>, c&ograve;n nếu l&agrave; ph&iacute;a server th&igrave; require, exports b&igrave;nh thường.</p>\n\n<pre>\n<code>(function() {\n  var bar = (function() {\n        //Others variables and functions\n  })();\n\n  if (typeof module !== &#39;undefined&#39; &amp;&amp; typeof module.exports !== &#39;undefined&#39;)\n        module.exports = bar;\n  else\n        window.bar = bar;\n})();\n</code></pre>\n\n<p>V&agrave; để sử dụng tr&ecirc;n ph&iacute;a server, ta chỉ việc gọi h&agrave;m require b&igrave;nh thường, c&ograve;n ph&iacute;a tr&igrave;nh duyệt, bạn c&oacute; thể đơn giản d&ugrave;ng thẻ&nbsp;<em>script</em></p>\n\n<pre>\n<code>&lt;script src=&quot;bar.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Xong. C&aacute; nh&acirc;n m&igrave;nh thấy đ&acirc;y l&agrave; một điều khiến nodejs ghi điểm th&ecirc;m với m&igrave;nh, v&agrave; cực kỳ hữu &iacute;ch, bảo sao cộng đồng javascript ng&agrave;y c&agrave;ng ph&aacute;t triển. C&ograve;n một c&aacute;ch nữa l&agrave; d&ugrave;ng tới RequireJS, hẹn ở b&agrave;i viết kh&aacute;c. Hi vọng b&agrave;i viết c&oacute; &iacute;ch cho tất cả mọi người. Cảm ơn tất cả c&aacute;c bạn đ&atilde; đọc :)</p>\n\n<p>Nguồn</p>\n\n<blockquote>\n<p><a href=\"http://www.matteoagosti.com/blog/2013/02/24/writing-javascript-modules-for-both-browser-and-node/\">http://www.matteoagosti.com/blog/2013/02/24/writing-javascript-modules-for-both-browser-and-node/</a><br />\n<a href=\"https://stackoverflow.com/questions/3225251/how-can-i-share-code-between-node-js-and-the-browser\">https://stackoverflow.com/questions/3225251/how-can-i-share-code-between-node-js-and-the-browser</a></p>\n</blockquote>\n",
      "category_id": 1,
      "total_views": 321,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "nodejs", "javascript", "js"
      ]
    },
    {
      "title": "NodeJS - require, exports, module.exports",
      "content": "<h4>1. Javascript FUNCTIONAL OR OBJECT ORIENTED?</h4>\n\n<h4>2. JavaScript, object oriented?</h4>\n\n<h4>3. Nodejs require exports vs module.exports</h4>\n\n<h4>4. Referrence</h4>\n\n<p>Trả lời:</p>\n\n<h2>1. Javascript FUNCTIONAL OR OBJECT ORIENTED?</h2>\n\n<ul>\n\t<li>&quot;JAVASCRIPT: FUNCTIONAL OR OBJECT ORIENTED?&quot;</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/JS.png_3j601iiuj2\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/JS.png_3j601iiuj2\" /></a></p>\n\n<ul>\n\t<li>\n\t<p>Vậy nghĩa l&agrave; Javascript(JS) l&agrave; ng&ocirc;n ngữ hỗ cả FUNCTIONAL ORIENTED, OBJECT ORIENTED v&agrave; nhiều kiến tr&uacute;c kh&aacute;c nữa.</p>\n\t</li>\n\t<li>\n\t<p>V&iacute; dụ về c&aacute;c framework đ&atilde; sử dụng JS.</p>\n\n\t<ul>\n\t\t<li>Jquery : thư viện JS hỗ trợ Frontend web được ph&aacute;t triển theo functional programing.</li>\n\t\t<li>Ext.js l&agrave; thư viện được ph&aacute;t triển theo 100% object oriented.</li>\n\t</ul>\n\t</li>\n\t<li>\n\t<p>Việc &aacute;p dụng JS theo hướng Object hay Functional phụ thuộc v&agrave;o kỹ năng của dev, y&ecirc;u cầu của kh&aacute;ch h&agrave;ng, hay dựa v&agrave;o đặc điểm của dự &aacute;n.</p>\n\t</li>\n\t<li>\n\t<p>Trong b&agrave;i n&agrave;y em sẽ tập trung v&agrave;o việc JS code theo OBJECT ORIENTED.</p>\n\t</li>\n</ul>\n\n<h2>2. JavaScript, object oriented?</h2>\n\n<ul>\n\t<li>\n\t<p>Oject-oriented programing(OOP) l&agrave; m&ocirc; h&igrave;nh lập tr&igrave;nh dựa tr&ecirc;n kh&aacute;i niệm &quot;object&quot;, trong thế giới của OOP mọi thứ đều l&agrave; object.</p>\n\t</li>\n\t<li>\n\t<p>Một object bao gồm 2 th&agrave;nh phần:</p>\n\n\t<ul>\n\t\t<li>attributes</li>\n\t\t<li>methods</li>\n\t</ul>\n\t</li>\n\t<li>\n\t<p>Class mục đ&iacute;ch l&agrave; định nghĩa ra những th&agrave;nh phần của một object</p>\n\t</li>\n\t<li>\n\t<p>OOP sử dụng classes v&agrave; objects để m&ocirc; phỏng to&agrave;n bộ những b&agrave;i to&aacute;n trong thế giới thực th&agrave;nh những th&agrave;n phần trong lập tr&igrave;nh</p>\n\n\t<ul>\n\t\t<li>C&aacute;ch khởi tọa object trong JS</li>\n\t\t<li>C&aacute;ch 1:</li>\n\t</ul>\n\t</li>\n</ul>\n\n<pre>\n<code>    var x = new object();       // Khởi tạo một object c&oacute; t&ecirc;n l&agrave; x\n    x.name =&quot;x&quot;;                // add thuộc t&iacute;nh &quot;name&quot; cho object\n    x.tellName = function (){   // add th&ecirc;m function &quot;tellName&quot; cho object x\n        alert(this.name)\n    };\n</code></pre>\n\n<ul>\n\t<li>C&aacute;ch 2:</li>\n</ul>\n\n<pre>\n<code>    // Trong JS k&iacute; hiệu {} đại diện cho object\n    // k&iacute; hiệu [] đại diện cho array\n\n    var x = {\n     name : &quot;x&quot;,\n     tellName : function(){\n            alert(&quot;my name is &quot; + this.name)\n          }\n    };\n</code></pre>\n\n<p><code>+ Trong JS k&iacute; hiệu {} đại diện cho object</code></p>\n\n<p><code>+ k&iacute; hiệu [] đại diện cho array</code></p>\n\n<h3>3. Nodejs - require exports vs module.exports</h3>\n\n<h4>A: require, exports, module.exports</h4>\n\n<ul>\n\t<li>\n\t<p>Node l&agrave; framework hỗ trợ run JS code ở server side.</p>\n\t</li>\n\t<li>\n\t<p>Để hỗ trợ nhiều hơn trong việc object h&oacute;a, Nodejs sử dụng 3 keywork đ&oacute; l&agrave;:</p>\n\n\t<ul>\n\t\t<li>require(&quot;path/to/file/js&quot;)</li>\n\t\t<li>module.exports</li>\n\t\t<li>exports</li>\n\t</ul>\n\t</li>\n\t<li>\n\t<p>Em xin giải th&iacute;ch một ch&uacute;t về 3 keyword ph&iacute;a tr&ecirc;n:</p>\n\n\t<ul>\n\t\t<li>3 từ kh&oacute;a t&ecirc;n được sử dụng rất nhiều trong nodejs, như em đ&atilde; n&oacute;i, mục đ&iacute;ch của 3 từ kh&oacute;a tr&ecirc;n l&agrave; để việc object h&oacute;a một file trong javascript</li>\n\t\t<li><code>Ch&uacute; &yacute;: Khi Nodejs execute bất kỳ một file js n&agrave;o th&igrave; tr&igrave;nh bi&ecirc;n dịch sẽ dịch một file như sau:</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<pre>\n<code>    var module = { exports: {} };\n    var exports = module.exports;\n\n    // your code\n\n    return module.exports;\n</code></pre>\n\n<ul>\n\t<li>Bất k&igrave; một file code n&agrave;o khi được dịch th&igrave; to&agrave;n bộ đoạn code của file đ&oacute; sẽ được đặt ở phần&nbsp;<code>// your code</code>&nbsp;như v&iacute; dụ tr&ecirc;n. Nghĩa l&agrave; nodejs tự động ch&egrave;n th&ecirc;m 2 d&ograve;ng\n\n\t<ul>\n\t\t<li><code>var module = { exports: {} };</code></li>\n\t\t<li><code>var exports = module.exports;</code>&nbsp;ở ph&iacute;a đầu file.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>v&agrave; d&ograve;ng</p>\n\n<ul>\n\t<li><code>return module.exports;</code>&nbsp;ở cuối file</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/nodejscompile.png_ludcg7thz5\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/nodejscompile.png_ludcg7thz5\" /></a></p>\n\n<ul>\n\t<li>\n\t<p><code>return module.exports;</code>&nbsp;: module.exports l&agrave; một object, object n&agrave;y được return ở cuối của mọi file trong nodejs, vậy object n&agrave;y trả về cho ai, trả về khi n&agrave;o<br />\n\t=&gt; object module.exports n&agrave;y trả về khi require() được gọi.</p>\n\t</li>\n\t<li>\n\t<p><code>require(&quot;path/to/file/abc.js&quot;)</code>&nbsp;: nhận về object&nbsp;<code>module.exports</code>&nbsp;được trả lại trong file abc.js</p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/objec.png_9qhjaukv4l\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/objec.png_9qhjaukv4l\" /></a></p>\n\n<ul>\n\t<li>\n\t<p><code>x</code>&nbsp;l&agrave; một object được g&aacute;n bằng object&nbsp;<code>module.exports</code></p>\n\t</li>\n\t<li>\n\t<p>Bằng c&aacute;ch l&agrave;m như tr&ecirc;n của Nodejs, mỗi file js c&oacute; để được object h&oacute;a ho&agrave;n to&agrave;n, l&uacute;c n&agrave;y ta c&oacute; thể coi mỗi file .js như một object với những thuộc t&iacute;nh v&agrave; function ri&ecirc;ng, đảm nhiệm một chức năng ri&ecirc;ng, sau đ&oacute; gọi v&agrave; sử dụng c&aacute;c object n&agrave;y bằng c&aacute;ch require()</p>\n\t</li>\n</ul>\n\n<h4>Demo:</h4>\n\n<ul>\n\t<li>Tạo một file c&oacute; t&ecirc;n test.js</li>\n</ul>\n\n<pre>\n<code>    \\\\create a file with name is test.js\n\n    var name = &quot;Tuan LM&quot;;\n\n    var getName = function(){\n      return name\n    }\n\n\n    module.exports.name = name;        // add th&ecirc;m v&agrave;o object module.exports biến name\n    module.exports.getName = getName;  // add th&ecirc;m v&agrave;o object module.exports h&agrave;m getName\n</code></pre>\n\n<ul>\n\t<li>Trong node console ta&nbsp;<code>require(&quot;./test&quot;)</code>&nbsp;=&gt; sẽ nhận lại object với một biến v&agrave; một h&agrave;m ch&iacute;nh l&agrave; biến v&agrave; h&agrave;m ta đ&atilde; add v&agrave;o object&nbsp;<code>module.exports</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A12%3A53.png_ewp1endl0y\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A12%3A53.png_ewp1endl0y\" /></a></p>\n\n<ul>\n\t<li>G&aacute;n require() cho một oibect kh&aacute;c v&agrave; gọi ra c&aacute;c th&agrave;nh phần trong object nhận lại:</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/ecccccb6dc35f41e05c70fa555f8e4ab59e69ac5.png_b1qhjr545d\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/ecccccb6dc35f41e05c70fa555f8e4ab59e69ac5.png_b1qhjr545d\" /></a></p>\n\n<ul>\n\t<li>Nếu ta kh&ocirc;ng add th&ecirc;m th&agrave;nh phần v&agrave;o biến&nbsp;<code>module.exports</code>&nbsp;hay kh&ocirc;ng g&aacute;n module.exports bằng một object n&agrave;o đ&oacute; th&igrave; hiển nhi&ecirc;n module.exports sẽ kh&ocirc;ng chứa bất kỳ dữ liệu g&igrave;, v&agrave; kết qủa require() nhận lại được sẽ l&agrave; một object rỗng.</li>\n</ul>\n\n<pre>\n<code>// file test.js\n\nvar name = &quot;Tuan LM&quot;;\n\nvar getName = function(){\n  return name\n}\n\n</code></pre>\n\n<p>=&gt; Kết quả khi require() file test.js m&agrave; file n&agrave;y k g&aacute;n gi&aacute; trị v&agrave;o biến&nbsp;<code>module.exports</code>:</p>\n\n<p>(Sẽ l&agrave; một object rỗng như b&ecirc;n dưới)</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A20%3A49.png_6unwjd42n7\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A20%3A49.png_6unwjd42n7\" /></a></p>\n\n<h3>B: exports, module.exports</h3>\n\n<ul>\n\t<li>C&acirc;u hỏi:&nbsp;<code>Đ&atilde; c&oacute; module.exports rồi v&agrave; khi require một file ta cũng chỉ nhận lại được object module.exports vậy thế exports sinh ra với mục đ&iacute;ch g&igrave;?</code></li>\n</ul>\n\n<p>=&gt; Trả lời em cũg k hiểu tại sao n&oacute; lại đẻ ra 2 object(c&ugrave;ng troe v&agrave;o 1 v&ugrave;ng nhớ) trong khi đ&oacute; chỉ cần return về duy nhất object l&agrave;&nbsp;<code>module.exports</code>.</p>\n\n<h4><code>Ch&uacute; &yacute; khi sử dụng 2 biến module.exports v&agrave; exports</code></h4>\n\n<ul>\n\t<li>\n\t<p>2 biến exports v&agrave; module.exports đều c&ugrave;ng trỏ v&agrave;o một vị tr&iacute; nhớ, v&igrave; vậy khi ta add th&ecirc;m trường hoặc function bằng một trong hai biến đ&oacute; th&igrave; v&ugrave;ng nhớ A sẽ được c&oacute; th&ecirc;m c&aacute;c th&agrave;nh phần được add</p>\n\t</li>\n\t<li>\n\t<p>exports.name = &quot;hello&quot; =&gt; V&ugrave;ng nhớ A sẽ c&oacute; th&ecirc;m một biến name = &quot;hello&quot;</p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A35%3A31.png_tf5xa3t437\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A35%3A31.png_tf5xa3t437\" /></a></p>\n\n<ul>\n\t<li>Nhưng khi ta kh&ocirc;ng add th&ecirc;m th&agrave;nh phần v&agrave;o m&agrave; g&aacute;n exports bằng một biến kh&aacute;c th&igrave; l&uacute;c n&agrave;y exports sẽ trỏ đến v&ugrave;ng nhớ ho&agrave;n to&agrave;n kh&aacute;c (Kh&ocirc;ng phải v&ugrave;ng nhớ A), v&igrave; thế kết quả trả về m&agrave; ta nhận được kh&ocirc;ng hề c&oacute; th&agrave;nh phần của exports</li>\n</ul>\n\n<p>v&iacute; dụ:</p>\n\n<pre>\n<code>    var name = &quot;Tuan LM&quot;;\n\n    var getName = function(){\n      return name\n    }\n\n\n    exports = name;\n    module.exports.getName = getName;\n\n</code></pre>\n\n<p>=&gt; Kết quả nhận về chỉ h&agrave;m getName được add bởi&nbsp;<code>module.exports.getName = getName;</code><br />\nl&uacute;c n&agrave;y&nbsp;<code>exports</code>&nbsp;đ&atilde; trỏ đến một nới ho&agrave;n to&agrave;n mới k c&ograve;n li&ecirc;n quan g&igrave; đến&nbsp;<code>module.exports</code></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2012%3A58%3A28.png_kalx2fv9yc\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2012%3A58%3A28.png_kalx2fv9yc\" /></a></p>\n\n<p>V&agrave; kết quả ta nhận về khi require cũng chỉ l&agrave; những th&agrave;nh phần m&agrave; object&nbsp;<code>module.exports</code>&nbsp;trỏ tới</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A42%3A05.png_1kjxczsxc6\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/Screenshot%20from%202016-05-03%2011%3A42%3A05.png_1kjxczsxc6\" /></a></p>\n\n<h3>4. Referrence</h3>\n\n<ul>\n\t<li><a href=\"http://stackoverflow.com/questions/16383795/difference-between-module-exports-and-exports-in-the-commonjs-module-system\">http://stackoverflow.com/questions/16383795/difference-between-module-exports-and-exports-in-the-commonjs-module-system</a></li>\n\t<li><a href=\"http://stackoverflow.com/questions/7137397/module-exports-vs-exports-in-node-js\">http://stackoverflow.com/questions/7137397/module-exports-vs-exports-in-node-js</a></li>\n\t<li>\n\t<p><a href=\"http://stackoverflow.com/questions/5311334/what-is-the-purpose-of-node-js-module-exports-and-how-do-you-use-it/5311377#5311377\">http://stackoverflow.com/questions/5311334/what-is-the-purpose-of-node-js-module-exports-and-how-do-you-use-it/5311377#5311377</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"http://thoughtsonscripts.blogspot.com/2011/11/javascript-functional-or-object.html\">http://thoughtsonscripts.blogspot.com/2011/11/javascript-functional-or-object.html</a></p>\n\t</li>\n</ul>\n\n<p>Thank you so much, please leave some comments if I have anything misunderstood.</p>\n\n<blockquote>\n<p>&nbsp;</p>\n</blockquote>\n",
      "category_id": 1,
      "total_views": 443,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "nodejs", "javascript", "js", "type script"
      ]
    },
    {
      "title": "NOSQL có đồng nghĩa với NO Injection?",
      "content": "<h2>NOSQL c&oacute; đồng nghĩa với NO Injection?</h2>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://minhlv.ga/2016/12/06/NOSQL-co-dong-nghia-voi-NO-Ijection/jsql-injection-1000x571.jpg\"><img alt=\"\" src=\"http://minhlv.ga/2016/12/06/NOSQL-co-dong-nghia-voi-NO-Ijection/jsql-injection-1000x571.jpg\" /></a></p>\n\n<p>Chắc hẳn ch&uacute;ng ta đ&atilde; kh&aacute; quen thuộc với kh&aacute;i niệm&nbsp;<strong><code>SQL Injection</code></strong>&nbsp;đ&acirc;y l&agrave; một lỗi hổng phổ biến nhất cũng như nguy hiểm nhất với c&aacute;c trang web tr&ecirc;n Internet. &quot;Gần đ&acirc;y&quot; với sự phất triển của những loại database mới như&nbsp;<strong><code>graph database</code></strong>&nbsp;v&agrave;&nbsp;<strong><code>NoSql</code></strong>&nbsp;đ&atilde; l&agrave;m phong ph&uacute; hơn lựa chọn dataabase của c&aacute;c dự &aacute;n ph&agrave;n mềm.</p>\n\n<p>Với những ưu điểm của m&igrave;nh như:</p>\n\n<ul>\n\t<li>M&atilde; nguồn mở</li>\n\t<li>khả năng mở rộng linh hoạt</li>\n\t<li>Ph&ugrave; hợp với điện to&aacute;n đ&aacute;m m&acirc;y v&agrave; bigData.</li>\n</ul>\n\n<p>c&aacute;c csld NoSql như&nbsp;<code>MongoDb</code>&nbsp;hay&nbsp;<code>redis</code>&nbsp;l&agrave; những lựa chọn đ&aacute;ng để c&acirc;n nhắc với những hệ thống lớn, những một kh&iacute;a cạnh c&oacute; lẽ kh&ocirc;ng được nhắc đến nhất l&agrave; ở Việ Nam m&igrave;nh đ&oacute; ch&iacute;nh l&agrave; t&iacute;nh bảo mật của những csld n&agrave;y, cuối tuần rảnh rỗi sinh n&ocirc;ng nổi m&igrave;nh quyết định viết một b&agrave;i để đ&aacute;nh gi&aacute; t&iacute;nh bảo mật của csld&nbsp;<strong><code>NoSQL</code></strong>.</p>\n\n<p>Trước khi bắt đầu để tr&aacute;nh gạch đ&aacute; m&igrave;nh xin l&agrave;m r&otilde; một vắn để l&agrave; bản th&acirc;n CSLD chỉ l&agrave;: &quot;một tập hợp th&ocirc;ng tin c&oacute; cấu tr&uacute;c. Tuy nhi&ecirc;n, thuật ngữ n&agrave;y thường d&ugrave;ng trong c&ocirc;ng nghệ th&ocirc;ng tin v&agrave; n&oacute; thường được hiểu r&otilde; hơn dưới dạng một tập hợp li&ecirc;n kết c&aacute;c dữ liệu, thường đủ lớn để lưu tr&ecirc;n một thiết bị lưu trữ như đĩa hay băng. Dữ liệu n&agrave;y được duy tr&igrave; dưới dạng một tập hợp c&aacute;c tập tin trong hệ điều h&agrave;nh hay được lưu trữ trong c&aacute;c hệ quản trị cơ sở dữ liệu.&quot; vậy n&ecirc;n nếu vọi v&agrave;ng đ&aacute;nh gi&aacute; csld n&agrave;y an to&agrave;n csld kia kh&ocirc;ng an to&agrave;n chưa hẳn đ&atilde; ch&iacute;nh x&aacute;c m&agrave; một nh&acirc;n tố v&ocirc; c&ugrave;ng quan trọng nữa l&agrave; hện quản trị CSDL (HQTCSDL) ta sử dụng cũng như driver m&agrave; ta sử dụng để giao tiếp với HQTCSDL, nội b&agrave;i biết n&agrave;y m&igrave;nh sẽ giới thiệu một b&agrave;i lỗ hổng thường gặp trong c&aacute;c HQTCSDL NoSQL., m&agrave; cụ thể l&agrave;&nbsp;<strong><code>MongoDb</code></strong>&nbsp;HQTCCSDL NoSQL phổ biến nhất hiện nay.</p>\n\n<h3>Cơ Chế Hoạt Động</h3>\n\n<p>Ngay tr&ecirc;n trang&nbsp;<a href=\"https://www.mongodb.com/blog/post/securing-mongodb-part-4-environmental-control-and-database-management\">MongoDB Developer FAQ</a>&nbsp;c&oacute; n&oacute;i:</p>\n\n<blockquote>\n<p>&quot;... with MongoDB we are not building queries from strings, so traditional SQL injection attacks are not a&nbsp;problem.&quot;</p>\n</blockquote>\n\n<p>tức l&agrave; MongoDb c&oacute; thể tr&aacute;nh được tất cả c&aacute;c loại SQL injection truyển thống, thay v&agrave;o đ&oacute; c&aacute;c hacker lại sự dụng một k&yacute; thuật đặc th&ugrave; cho NoSql đ&oacute; l&agrave;&nbsp;<strong><code>NoSQL Injection</code></strong>.</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/8wv4as2wkw_Untitled.png\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/8wv4as2wkw_Untitled.png\" /></a></p>\n\n<p>cũng như&nbsp;<strong><code>SQL injection</code></strong>&nbsp;để c&oacute; thể thực hiện&nbsp;<strong><code>NoSQL Injection</code></strong>&nbsp;hacker cũng phải truy vấn l&ecirc;n server, dựa v&agrave;o request từ client server sẽ truy vấn đến Database v&agrave; nhận lại kết quả từ database để trả cho client. Nhiệm vụ của hacker l&agrave; phải l&agrave;m sao để hiểu sai request dẫn đến thực hiện một c&acirc;u truy vấn kh&ocirc;ng mong muốn đến database cuối c&ugrave;ng hacker sẽ lấy được th&ocirc;ng tin mong mốn hoặc ngi&ecirc;m trọng hơn l&agrave; tthay đổi thậm ch&iacute; l&agrave; x&oacute;a dự liệu trong csdl.</p>\n\n<p>điểm kh&aacute;c của&nbsp;<strong><code>NoSQL Injection</code></strong>&nbsp;so với&nbsp;<strong><code>SQL Injection</code></strong>&nbsp;truyển thống l&agrave;:</p>\n\n<ul>\n\t<li>c&acirc;u truy vấn cho khối dữ liệu kh&ocirc;ng cấu tr&uacute;c.</li>\n\t<li>c&aacute;c HQTCSDL rất đa dạng v&agrave; kh&aacute;c biệ nhau kh&aacute; nhiều trong cachs tổ chức dữ liệu cũng như truy vấn.</li>\n\t<li>cho ph&eacute;p truy cập trực tiếp client-database th&ocirc;ng qua RESTfull API.</li>\n</ul>\n\n<h3>C&aacute;c Loại Tấn C&ocirc;ng</h3>\n\n<p>c&oacute; 3 loại tấn c&ocirc;ng **<code>NoSQL Injection</code>&nbsp;chủ y&ecirc;u l&agrave;:</p>\n\n<ul>\n\t<li>Login bypass for MongoDB on PHP and NodeJS</li>\n\t<li>String concatenation</li>\n\t<li>Escaping flaws of drivers</li>\n</ul>\n\n<h4>1. LOGIN BYPASS</h4>\n\n<p>đ&acirc;y l&agrave; loại tấn c&ocirc;ng rất nguy hiểm v&igrave; hacker c&oacute; thể bỏ qua quy tr&igrave;nh đăng nhập v&agrave; gi&agrave;nh qu&ecirc;n một c&aacute;ch kh&ocirc;ng mất kh&oacute; khăn.</p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/oweob0dteu_Bypass-Login-sql-injection.png\"><img alt=\"alt text\" src=\"https://s3-ap-southeast-1.amazonaws.com/kipalog.com/oweob0dteu_Bypass-Login-sql-injection.png\" /></a></p>\n\n<p>giả sử ta c&oacute; một đoạn login sử dụng NodeJs - express.js - mongodb như sau:</p>\n\n<pre>\n<code>// NodeJS with Express.js\ndb.collection(&#39;users&#39;).find({\n&quot;user&quot;: req.query.user,\n&quot;password&quot;: req.query.password\n});\n</code></pre>\n\n<p>ở đ&acirc;y ta sử dụng lu&ocirc;n tham số trong request của client để thuwchj hiện c&acirc;u truy vấn đ&ecirc;n database. với dự đo&aacute;n than số m&agrave; người d&ugrave;ng gửi l&ecirc;n sẽ dạng như n&agrave;y:</p>\n\n<p><code>✔ https://example.org/login?user=patrick&amp;password=1234</code><br />\ntrong trường hợp n&agrave;y nếu &ocirc;ng hacker vui t&iacute;nh n&agrave;o đ&oacute; gửi l&ecirc;n một request dang như n&agrave;y th&igrave; chuyện g&igrave; sẽ sảy ra:<br />\n<code>⚡ https://example.org/login?user=patrick&amp;password[%24ne]=</code></p>\n\n<p>khi đ&oacute; c&acirc;u query của ch&uacute;ng ta sẽ như thế n&agrave;y</p>\n\n<pre>\n<code>// NodeJS with Express.js\ndb.collection(&#39;users&#39;).find({\n&quot;user&quot;: &quot;patrick&quot;,\n&quot;password&quot;: {&quot;&amp;ne&quot;: &quot;&quot;}\n});\n</code></pre>\n\n<p>serlector&nbsp;<code>&amp;ne</code>&nbsp;(not equals) sẽ t&igrave;m những bản g&igrave; khong bằng gi&aacute; trị &quot;&quot; tức l&agrave; trường password sẽ lu&ocirc;n lu&ocirc;n true, hacker đ&atilde; by pass thanh c&ocirc;ng.</p>\n\n<h3>2. String Concat</h3>\n\n<p>Tương tự như&nbsp;<strong><code>SQL Injection</code></strong>&nbsp;vấn đề nối chuỗi (string concat) vẫn l&agrave; một vấn đề, nếu dev code cẩu thả th&igrave; hacker c&oacute; thể lợi dụng để injectect những đoạn k&yacute; tự đặc biệt l&agrave;m c&acirc;u query bị thực thui sai mục địch.</p>\n\n<p>vẫn l&agrave; chức năng đăng nhập tr&ecirc;n l&agrave;n n&agrave;y ta chọn một c&aacute;ch c&agrave;i đặt kh&aacute;c như sau:</p>\n\n<pre>\n<code>// nodejs example\nvar string query = &ldquo;{ username: &lsquo;&ldquo; + user + &ldquo;&rsquo;, password: &lsquo;&rdquo; + password + &ldquo;&rsquo; }&rdquo;\n\n</code></pre>\n\n<p>một đoạn c&oacute; tr&ocirc;ng c&oacute; vẻ ng&acirc;y thơ v&ocirc; tội nhỉ? nhưng với hacker th&igrave; đ&acirc;y đ&uacute;ng l&agrave; một cơ hội v&agrave;ng.</p>\n\n<p><code>⚡ https://example.org/login?username=admin&rsquo;, $or: [ {}, { &lsquo;a&rsquo;:&rsquo;a&amp;password=&rsquo; } ], $comment:&rsquo;hacked&rsquo;</code></p>\n\n<p>với request tr&ecirc;n c&acirc;u query của ch&uacute;ng ta sẽ biến th&agrave;nh thế n&agrave;y:</p>\n\n<pre>\n<code>\n{ username: &lsquo;tolkien&rsquo; , $or: [ {}, { &lsquo;a&rsquo;: &lsquo;a&rsquo;, password: &lsquo;&rsquo; } ], $comment: &lsquo;hacked&rsquo; }\n\n</code></pre>\n\n<p>OMG, một lần nữa ch&uacute;ng ta đ&atilde; bypass được login với biểu thức to&aacute;n tử&nbsp;<code>$or : [true, false ]</code>&nbsp;sex trar laij keets quar true :D</p>\n\n<p>Ngo&agrave;i ra c&ograve;n kh&aacute; nhiều kỹ thuật tấn c&ocirc;ng kh&aacute;c nếu hứng th&uacute; anh em c&oacute; thể hỏi b&aacute;c gut gồ nh&eacute;.</p>\n\n<p>MinhLucVan 09-07-2017</p>\n\n<blockquote>\n<p>&nbsp;</p>\n</blockquote>\n",
      "category_id": 1,
      "total_views": 1000,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "database", "nosql", "mongodb"
      ]
    },
    {
      "title": "Những điểm khác nhau quan trọng giữa Python 2.x và Python 3.x",
      "content": "<h2>1. Division operator</h2>\n\n<p>Nếu bạn đang c&oacute; một c&ocirc;ng việc n&acirc;ng cấp phi&ecirc;n bản Python, vậy h&atilde;y ch&uacute; &yacute; tới ph&eacute;p chia. Xem v&iacute; dụ sau đ&acirc;y nh&eacute;.</p>\n\n<pre>\n<code>print 7 / 5\nprint -7 / 5   \n</code></pre>\n\n<pre>\n<code>Output in Python 2.x:\n1\n-2\n\nOutput in Python 3.x:\n1.4\n-1.4\n</code></pre>\n\n<h2>2. Print function</h2>\n\n<p>Đ&acirc;y l&agrave; một trong những sự thay đổi được biết đến nhiều nhất từ bản Python 2.x l&ecirc;n Python 3.x</p>\n\n<pre>\n<code>print &#39;Hello, Geeks&#39;      # Python 3.x doesn&#39;t support\nprint(&#39;Hope You like these facts&#39;)\n</code></pre>\n\n<pre>\n<code>Output in Python 2.x:\nHello, Geeks\nHope You like these facts\n\nOutput in Python 3.x:\nFile &quot;a.py&quot;, line 1\n    print &#39;Hello, Geeks&#39;\n                       ^\nSyntaxError: invalid syntax\n</code></pre>\n\n<h2>3. Unicode</h2>\n\n<p>Trong Python 2.x, kiểu mặc định của String l&agrave; ASCII, nhưng ở Python 3.x kiểu mặc định của String l&agrave; Unicode</p>\n\n<pre>\n<code>print(type(&#39;default string &#39;))\nprint(type(u&#39;string with b &#39;))\n</code></pre>\n\n<pre>\n<code>Output in Python 2.x (Unicode and str are different):\n&lt;type &#39;str&#39;&gt;\n&lt;type &#39;unicode&#39;&gt;\n\nOutput in Python 3.x (Unicode and str are same):\n&lt;class &#39;str&#39;&gt;\n&lt;class &#39;str&#39;&gt;\n</code></pre>\n\n<h2>4. Xrange</h2>\n\n<pre>\n<code>for x in xrange(1, 5):\n    print(x),\n\nfor x in range(1, 5):\n    print(x),\n</code></pre>\n\n<pre>\n<code>Output in Python 2.x:\n1 2 3 4 1 2 3 4\n\nOutput in Python 3.x:\nNameError: name &#39;xrange&#39; is not defined\n</code></pre>\n\n<h2>5. Error Handling</h2>\n\n<p>Đ&acirc;y l&agrave; một thay đổi nhỏ tr&ecirc;n phi&ecirc;n bản 3.x, từ kho&aacute; as đ&atilde; trở th&agrave;nh bắt buộc</p>\n\n<p>Kiểm tra kh&ocirc;ng c&oacute; từ kho&aacute; as trong 2 phi&ecirc;n bản Python</p>\n\n<pre>\n<code>try:\n    trying_to_check_error\nexcept NameError, err:\n    print err, &#39;Error Caused&#39;   # Would not work in Python 3.x\n</code></pre>\n\n<pre>\n<code>Output in Python 2.x:\nname &#39;trying_to_check_error&#39; is not defined Error Caused\n\nOutput in Python 3.x :\nFile &quot;a.py&quot;, line 3\n    except NameError, err:\n                    ^\nSyntaxError: invalid syntax\n</code></pre>\n\n<p>Kiểm tra khi c&oacute; từ kho&aacute; as trong 2 phi&ecirc;n bản Python</p>\n\n<pre>\n<code>try:\n     trying_to_check_error\nexcept NameError as err: # &#39;as&#39; is needed in Python 3.x\n     print (err, &#39;Error Caused&#39;)\n</code></pre>\n\n<pre>\n<code>Output in Python 2.x:\n(NameError(&quot;name &#39;trying_to_check_error&#39; is not defined&quot;,), &#39;Error Caused&#39;)\n\nOutput in Python 3.x:\nname &#39;trying_to_check_error&#39; is not defined Error Caused</code></pre>\n\n<blockquote>\n<p>&nbsp;</p>\n</blockquote>\n",
      "category_id": 1,
      "total_views": 345,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "python"
      ]
    },
    {
      "title": "Hướng dẫn cài đặt Java 8 trên Ubuntu",
      "content": "<h1>Hướng dẫn c&agrave;i đặt Java 8 tr&ecirc;n Ubuntu</h1>\n\n<p>Trong b&agrave;i viết n&agrave;y m&igrave;nh sẽ hướng dẫn c&aacute;c bạn c&agrave;i đặt Java 8 tr&ecirc;n Ubuntu 16.04.</p>\n\n<hr />\n<ol>\n\t<li>\n\t<p>Th&ecirc;m PPA repository v&agrave;o hệ thống</p>\n\n\t<pre>\n<code>$ sudo add-apt-repository ppa:webupd8team/java\n</code></pre>\n\n\t<p>Repository PPA sẽ gi&uacute;p ch&uacute;ng ta tự động download v&agrave; c&agrave;i đặt JDK từ trang chủ của Oracle.</p>\n\t</li>\n\t<li>\n\t<p>Update c&aacute;c package</p>\n\n\t<pre>\n<code>$ sudo apt-get update\n</code></pre>\n\t</li>\n\t<li>\n\t<p>C&agrave;i đặt Java 8</p>\n\n\t<pre>\n<code>$ sudo apt-get install oracle-java8-installer\n</code></pre>\n\n\t<p>Bạn c&oacute; thể thay&nbsp;<code>java8</code>&nbsp;th&agrave;nh&nbsp;<code>java6</code>&nbsp;hoặc&nbsp;<code>java7</code>&nbsp;nếu bạn muốn.</p>\n\t</li>\n\t<li>\n\t<p>Sau khi c&agrave;i đặt xong, ch&uacute;ng ta sẽ kiểm tra lại version của Java:</p>\n\n\t<pre>\n<code>$ java -version\n</code></pre>\n\n\t<p>V&agrave; đ&acirc;y l&agrave; kết qủa nếu c&agrave;i đặt th&agrave;nh c&ocirc;ng:</p>\n\n\t<pre>\n<code>java version &quot;1.8.0_111&quot;\nJava(TM) SE Runtime Environment (build 1.8.0_111-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)\n</code></pre>\n\t</li>\n\t<li>\n\t<p>Th&ecirc;m biến m&ocirc;i trường JAVA_HOME (option)</p>\n\n\t<pre>\n<code> $ export JAVA_HOME=&quot;/usr/lib/jvm/java-8-oracle&quot;\n $ export PATH=$JAVA_HOME/bin:$PATH</code></pre>\n\t</li>\n</ol>\n\n<blockquote>\n<p>&nbsp;</p>\n</blockquote>\n",
      "category_id": 1,
      "total_views": 346,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "java8", "ubuntu"
      ]
    },
    {
      "title": "「Java」Vì sao nên sử dụng StringBuffer",
      "content": "<p>Hẳn những ai biết tới&nbsp;<code>Java</code>&nbsp;th&igrave; kh&ocirc;ng c&ograve;n xa lạ g&igrave; với việc gh&eacute;p c&aacute;c&nbsp;<code>String</code>&nbsp;với nhau.</p>\n\n<pre>\n<code>String s = &quot;Hello&quot;;\ns+= &quot; world&quot;;\nSystem.out.println(s +&quot;!!!&quot;);\n</code></pre>\n\n<p>Đ&acirc;y l&agrave; một kiến thức cực k&igrave; cực k&igrave; cơ bản. Tuy nhi&ecirc;n, nếu ch&uacute;ng ta tăng số lượng ph&eacute;p&nbsp;<code>nối x&acirc;u</code>&nbsp;n&agrave;y l&ecirc;n th&igrave; sẽ c&oacute; hệ quả g&igrave;.</p>\n\n<p>C&ugrave;ng xem v&iacute; dụ n&agrave;y nh&eacute;:</p>\n\n<pre>\n<code>long start = System.nanoTime();\n\nString s = &quot;Hello&quot;;\nfor (int i = 0; i &lt; 1000; i++) {\n    s += &quot; world&quot;;\n}\nlong end = System.nanoTime();\nSystem.out.println(&quot;Total time: &quot;+(end-start));\n\n// Kết quả:\n// Total time: 17495917 ns\n// = 17.4 ms (Milliseconds)\n</code></pre>\n\n<p>B&acirc;y giờ, vẫn l&agrave; chương tr&igrave;nh tương tự, m&igrave;nh sử sụng&nbsp;<code>String Buffer</code></p>\n\n<pre>\n<code>long start = System.nanoTime();\n\nStringBuffer sb = new StringBuffer(&quot;Hello&quot;);\nfor (int i = 0; i &lt; 1000; i++) {\n    sb.append(&quot; world&quot;);\n}\nString s = sb.toString();\nlong end = System.nanoTime();\nSystem.out.println(&quot;Total time: &quot;+(end-start));\n\n// Kết quả:\n// Total time: 461198 ns\n// = 0.46 ms\n</code></pre>\n\n<p><code>String Buffer</code>&nbsp;nhanh hơn gấp&nbsp;<strong>38 lần</strong>.</p>\n\n<p>Hiệu năng được chạy tr&ecirc;n Mac Pro 2017, tại m&aacute;y bạn c&oacute; thể sẽ kh&aacute;c, nhưng chắc chắn rằng&nbsp;<code>StringBuffer</code>&nbsp;lu&ocirc;n nhanh hơn!</p>\n\n<h3>G&oacute;c giải th&iacute;ch</h3>\n\n<p>C&oacute; một điều &iacute;t bạn học lập tr&igrave;nh&nbsp;<code>Java</code>&nbsp;để &yacute;, đ&oacute; l&agrave;&nbsp;<code>String</code>&nbsp;l&agrave;&nbsp;<code>immutable</code>. Tức nội dung trong&nbsp;<code>String</code>&nbsp;l&agrave; kh&ocirc;ng được quyền thay đổi.</p>\n\n<p>Nhiều bạn lầm tưởng rằng việc nối x&acirc;u l&agrave; bạn thay đổi nội dung của&nbsp;<code>String</code>, nhưng thực chất bạn đang tạo ra một đối tượng ho&agrave;n to&agrave;n mới:</p>\n\n<pre>\n<code>String s = &quot;A&quot;;\ns+=&quot;B&quot;;\n// Complier sẽ tạo ra một đối tượng mới l&agrave; &quot;AB&quot;\n// V&agrave; g&aacute;n v&agrave;o `s`\n// Bản chất `s` b&acirc;y giờ l&agrave; một đối tượng mới chứ bạn kh&ocirc;ng hề thay đổi nội dung ban đầu của `s`.\n\n// Đ&acirc;y l&agrave; những g&igrave; ở dưới Compiler sẽ l&agrave;m:\nStringBuffer sb = new StringBuffer(&quot;A&quot;); // Compiler Vẫn phải x&agrave;i tới StringBuffer\nsb.append(&quot;B&quot;);\ns = sb.toString();\n</code></pre>\n\n<p>V&igrave; vậy khi nối x&acirc;u trong&nbsp;<code>Java</code>, việc bạn thực hiện n&oacute; li&ecirc;n tục, sẽ tương đương với việc khởi tạo li&ecirc;n tục v&agrave; nối 2 x&acirc;u lại rồi trả về đối tượng&nbsp;<code>String</code>&nbsp;mới dẫn tới chi ph&iacute; lớn.</p>\n\n<p><code>StringBuffer</code>&nbsp;cho ph&eacute;p ch&uacute;ng ta thao t&aacute;c tr&ecirc;n một đối tượng duy nhất v&agrave; thay đổi được nội dung trong n&oacute;. Nếu ban đầu nội dung l&agrave;&nbsp;<code>&quot;A&quot;</code>, bạn muốn nối th&ecirc;m&nbsp;<code>&quot;B&quot;</code>&nbsp;v&agrave;o. Th&igrave; n&oacute; chỉ cần gắn chuỗi&nbsp;<code>bytes</code>&nbsp;của&nbsp;<code>&quot;B&quot;</code>&nbsp;v&agrave;o liền kề ngay sau&nbsp;<code>&quot;A&quot;</code>&nbsp;l&agrave; xong. (V&igrave; n&oacute; c&oacute; thể thay đổi, kh&aacute;c với&nbsp;<code>String</code>&nbsp;l&agrave;&nbsp;<code>immutable</code>).</p>\n\n<p>Tới đ&acirc;y bạn đ&atilde; hiểu r&otilde; v&agrave;i tr&ograve; của&nbsp;<code>StringBuffer</code>&nbsp;trong&nbsp;<code>Java</code>, v&igrave; thế h&atilde;y tận dụng n&oacute; một c&aacute;ch tối ưu, thay v&igrave; việc cộng c&aacute;c&nbsp;<code>String</code>&nbsp;như th&ocirc;ng thường.</p>\n\n<blockquote>\n<p>&nbsp;</p>\n</blockquote>\n",
      "category_id": 1,
      "total_views": 123,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "java8", "java core"
      ]
    },
    {
      "title": "Functional programming in Java - Function composition",
      "content": "<h2>Code</h2>\n\n<pre>\n<code>import java.util.*;\nimport java.lang.*;\nimport java.io.*;\n\nabstract class Chainable {\n\n    public Chainable andThen(Chainable after) {\n        Chainable current = this;\n        return new Chainable() {\n            @Override\n            public void apply() {\n                current.apply();\n                after.apply();\n            }\n        };\n    }\n\n    public abstract void apply();\n\n}\n\nclass Ideone {\n    public static void main (String[] args) {\n        Chainable chained = new Chainable() {\n            @Override \n            public void apply() {\n                System.out.println(&quot;Learn Javasript&quot;);\n            }\n        };\n        chained = chained.andThen(new Chainable() {\n            @Override\n            public void apply() {\n                System.out.println(&quot;Learn Vue&quot;);\n            }\n        });\n        chained = chained.andThen(new Chainable() {\n            @Override\n            public void apply() {\n                System.out.println(&quot;Build something awesome&quot;);\n            }\n        });\n        chained.apply();\n    }\n}\n</code></pre>\n\n<h2>Output</h2>\n\n<p><a href=\"http://ideone.com/v9EK80\">http://ideone.com/v9EK80</a></p>\n\n<h2>Reference</h2>\n\n<p><a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html\">http://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html</a></p>\n\n<p>baoquocphan 11-06-2017</p>\n\n<blockquote>\n<p>&nbsp;</p>\n</blockquote>\n",
      "category_id": 1,
      "total_views": 245,
      "status": true,
      "image": "post-3.jpg",
      "tags": [
        "java8", "java core"
      ]
    }

  ]
}